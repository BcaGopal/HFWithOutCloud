@model Model.ViewModel.RugStencilViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Post", "RugStencil", FormMethod.Post, new { enctype = "multipart/form-data" ,@id="basepage" }))
{
    @Html.AntiForgeryToken()
     @Html.HiddenFor(model => model.StencilId)
    @Html.HiddenFor(m=>m.ProductDesignName)
    @Html.HiddenFor(m=>m.ProductSizeId)
    @Html.HiddenFor(m=>m.ProductSizeName)
    @Html.HiddenFor(m=>m.DivisionId)
    <div class="panel panel-default">

        <div class="panel-heading">

            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Delivery Terms</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "RugStencil", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "RugStencil", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Email", "RugStencil", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "RugStencil", new { id = @Model.StencilId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "RugStencil", new { id = @Model.StencilId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "RugStencil", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })                    
                </h4>
            </div>

        </div>
        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">
                
                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.ProductDesignId, "Colour Way", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProductDesignId, null, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.ProductDesignId, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                    </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FullHalf, "Half / Full", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(m=>m.FullHalf,new SelectList(ViewBag.HalfFull as System.Collections.IEnumerable,"Value","Text"),string.Empty, new { @class = "form-control col-xs-6 required height" })
                                @Html.ValidationMessageFor(model => model.FullHalf)
                            </div>
                        </div>
                    </div>
                </div>

                <hr />
                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Sizes
                    </h4>
                </div>
               
                <div style="padding-right:15px">

                    <table class="table table-hover ctable">
                        <thead id="header">
                        </thead>

                        <tbody id="Result"></tbody>
                    </table>

                </div>

            </div>
        </div>
    </div>
}
<script type="text/javascript">
    
    CustomSelectFunction($("#ProductDesignId"), '/ComboHelpList/GetColourWaysForStencil', '/ComboHelpList/SetSingleColourWays', ' ', false, 1);


    $("#ProductDesignId").change(function () {
        $('#ProductDesignName').val($('#ProductDesignId').select2('data').text);
        LoadProducts();
    })


    function LoadProducts() {
        var designId = $("#ProductDesignId").val();
        var link="/RugStencil/GetRugSizeList";
        $.ajax({
            url: link,
            type: "GET",
            dataType: "json",
            data:{id:designId},
            success: function (data) {
                var row = ""
                var srno=1;
                var head="<tr style='background-color:#428bca'>  <th style='width:10px'><input type='hidden'  /></th> <th style='width:10px'><input type='hidden'  /></th> <th style='width:10px'>Sr.No</th><th class='center' style='width:50px'>Rug Size</th>   <th class='center' style='width:50px'>Stencil Size</th> <th class='center' style='width:50px'>Stencil Name</th> <th style='width:50px'>Is Active ?</th>  <th style='width:10px'></th>       <th style='width:10px'></th>  </tr>"
                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += "<tr><td><input type='hidden' class='id' value='" + item.ProductSizeId + "'/></td> <td><input type='hidden' class='id' value='" + item.StencilId + "'/></td> <td>" + srno + "</td> <td class='sizename'>" + item.ProductSizeName + "</td><td>" + ((item.StencilSizeName == null) ? " " : item.StencilSizeName) + "</td><td>" + ((item.StencilName == null) ? " " : item.StencilName) + "</td><td> " + ((item.IsActive == null) ? " " : item.IsActive) + "</td>  <td><a class=' hidden' Modify href='/RugStencil/AddStencilSize/' ></a></td>       <td><a class='glyphicon glyphicon-trash' data-modal='' delete='' href='/CarpetMaster/EditSize/" + item.ProductId + "' ></a></td>  </tr>";
                        srno++;
                    });
                }
                else
                {                    
                    row+="<tr><td>No Items Found.</td></tr>";
                }
                $("#header").html(head);
                $("#Result").html(row);
            },
            error: function (result) {
                alert("Error");
            }
        });
    }


    //For Populating Modal PopUp on DoubleClick Of Row
    $('#Result').on("dblclick", 'tr', function () {
        
       
        //alert($('#ProductDesignId').select2('val'));

        var text = $(this).find(".id").val();
        var name = $(this).find('.sizename').text();
        
        var editurl = $(this).find('a[Modify]').attr('href');

        $('#ProductSizeId').val(text);
        //$('#ProductDesignName').val($('#ProductDesignId').select2('data').text);
        $('#ProductSizeName').val(name);
       
        
        var postdata = $('form#basepage').serialize();
            
        

        $('#myModalContent').load(editurl, postdata , function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });        
    });


    //For Handling Modal PopUp on Clicking Delete Icon
    $('#Result').on("click", 'a[delete]', function (e) {
        $('#myModalContent').load(this.href, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
        return false;
    });


    //For posting the data through ajax and render the contents sent back from the server
    function bindForm1(dialog) {
        //alert('inside binding');
        $('form', dialog).submit(function () {
            
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //Refresh
                        //location.reload();
                        //alert('Data Saved');
                    } else if (!result.success) {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                    else {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                }
            });
            return false;
        });

    }


</script>