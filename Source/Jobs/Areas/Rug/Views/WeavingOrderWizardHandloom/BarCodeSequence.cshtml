@model Model.ViewModel.WeavingOrderWizardMasterDetailModel
@using Core.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("BarCodeSequencePost", "WeavingOrderWizardHandloom", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> Weaving Order Details</span>
                <input type="submit" value="Next" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />
        </div>


        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)

                <div class="panel panel-default" id="grid">
                    <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                        <div class="row grid-head">
                            <div class="block text-left" style="width:5%">
                                Srl.
                            </div>
                            <div class="block" style="width:92%">
                                <div class="row">
                                    @*ProductInfo*@
                                    <div class="block" style="width:35%">
                                        Design
                                    </div>                                   
                                    <div class="block text-center" style="width:35%">
                                        Qty
                                    </div>
                                    @*Qty*@
                                    <div class="block" style="width:30%">
                                        BarCodes
                                    </div>

                                </div>
                            </div>

                        </div>

                    </div>
                    <div class="panel-info" id="gbody" style="max-height:250px;overflow-y:scroll">

                        @for (int i = 0; i < Model.WeavingOrderWizardViewModel.Count(); i++)
                        {

                            <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>

                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].ProdOrderLineId, new { @class = "LineId" })
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].DesignName)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].Incentive)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].Size)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].DealUnitId)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].DealUnitName)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].OtherDealUnitId)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].OtherDealUnitName)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].Rate)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].OtherQty)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].UnitConversionMultiplier)
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].RefDocLineId, new { @class = "RefLineId" })
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].Qty, new { @class = "HQty" })
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].BalanceQty, new { @class = "BalQty" })
                                @Html.HiddenFor(m => m.WeavingOrderWizardViewModel[i].ProductUidIdName, new { @class = "UIDName" })


                                <div class='block row-index' style='width:5%'>
                                    @(i + 1)
                                </div>
                                <div class='block pull-middle' style='width:94%'>
                                    <div class='row'>
                                        <div class='block' style='width:35%'>
                                            <strong>@Model.WeavingOrderWizardViewModel[i].DesignName</strong>
                                            <small>@Model.WeavingOrderWizardViewModel[i].Size</small>
                                        </div>                                      
                                        <div class='block text-center' style='width:35%'>
                                            Qty:<span class="Qty">@Model.WeavingOrderWizardViewModel[i].Qty</span>
                                        </div>
                                        @if (Model.WeavingOrderWizardViewModel[i].RefDocLineId.HasValue)
                                        {
                                            <div class='block' style='width:30%'>
                                                @Html.TextBoxFor(m => Model.WeavingOrderWizardViewModel[i].SelectedBarCodes, new { @class = "form-control BarCodes" })
                                            </div>
                                        }
                                        else
                                        {
                                            <div class='block' style='width:30%'>
                                                @Html.TextBoxFor(m => Model.WeavingOrderWizardViewModel[i].SelectedBarCodes, new { @class = "form-control", @readonly = "true" })
                                            </div>
                                        }

                                    </div>
                                </div>

                            </div>
                            <hr style='margin-top:0px;margin-bottom:0px' />
                        }
                    </div>
                    <div class="row grid-head">
                        <div class="block text-left" style="width:5%">
                        </div>
                        <div class="block" style="width:92%">
                            <div class="row">
                                @*ProductInfo*@
                                <div class="block" style="width:35%">
                                    <strong>Total </strong>
                                </div>
                                <div class="block text-center" style="width:35%">
                                    <strong> <span id="Total"> @Model.WeavingOrderWizardViewModel.Sum(m => m.Qty) </span></strong>
                                </div>
                                @*Qty*@
                                <div class="block" style="width:30%">
                                </div>

                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
}

<script type="text/javascript">

    $(document).ready(function () {

        // CustomSelectFunction($(".BarCodes"), '/WeavingOrderWizardHandloom/GetBarCodes', '/ComboHelpList/SetProductUids', ' ', true, 1, function () { return $(this).closest('div.row.crow').find('.RefLineId').val() });


        $('.BarCodes').select2({
            minimumInputLength: 0,
            multiple: true,
            placeholder: 'BarCodes',
            ajax: {
                url: function () { return '/WeavingOrderWizardHandloom/GetBarCodes/' },
                dataType: 'json',
                type: "GET",
                quietMillis: 500,
                data: function (term, page) {
                    return {
                        pageSize: 20,
                        pageNum: page,
                        searchTerm: term,
                        filter: $(this).closest('div.row.crow').find('.RefLineId').val()
                    };
                },
                results: function (data, page) {
                    var more = (page * 20) < data.Total;
                    return { results: data.Results, more: more };
                }
            },
            initSelection: function (element, callback) {

                var xval = element.val();
                if (xval != 0) {
                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: '/ComboHelpList/SetProductUids',
                        data: { Ids: element.val() },
                        success: function (data) {
                            callback(data);
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Failed to Retrive Qty' + thrownError);
                        }
                    })
                }
                //callback([{ id: "1", text: "arpit" }, { id: "2", text: "akash" }]);
            }

        });




        $(".BarCodes").on("change", function (e) {

            var $div = $(this).closest('div.row.crow');

            var Qty = ($(this).select2('val')).length;

            $div.find('.Qty:first').text(Qty);

            var BalQty = parseFloat($div.find('.BalQty').val()) || 0;

            if (Qty > BalQty) {
                if (!$('#errormsg').length) {
                    $('#submit').attr('disabled', 'disabled');
                    $('div.form-horizontal').prepend("<div class='alert alert-danger'><span id=errormsg >Qty exceeding Balance Qty</span></div>")
                }
            }
            else {
                $('#submit:disabled').removeAttr('disabled');
                if ($('#errormsg').length) {
                    $('#errormsg').parent().remove();
                }
            }

            CalculateTotal();


        })

        function CalculateTotal() {

            var Order = 0;
            var maxDeclaces = 0;
            $('.row.crow.grid-body').each(function () {

                if ($(this).find('input.OrderQty').val()) {
                    Order += parseFloat($(this).find('span.Qty').text());
                }

            })
            $('#Total').text(Order.toFixed(0));

        }


        var IsSaved = false;
        var ValidationCount = 0;

        $('form').submit(function (event) {

            if (!IsSaved) {
                if (!ValidateData()) {
                    return false;
                }
                IsSaved = true;
                return IsSaved;
            }
            else {
                return false;
            }


        });

        function ValidateData() {
            var TempValue;
            var ValidationMessage = "";
            return (ValidationMessage == "");

        }


    });

</script>