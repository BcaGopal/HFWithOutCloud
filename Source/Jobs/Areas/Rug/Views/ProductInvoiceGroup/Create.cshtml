@model Model.Models.ProductInvoiceGroup

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "ProductInvoiceGroup", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProductInvoiceGroupId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Invoice Group</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                @*<h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "ProductInvoiceGroup", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "ProductInvoiceGroup", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "ProductInvoiceGroup", new { id = @Model.ProductInvoiceGroupId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "ProductInvoiceGroup", new { id = @Model.ProductInvoiceGroupId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "ProductInvoiceGroup", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>*@
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "ProductInvoiceGroup", null, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "ProductInvoiceGroup", new { id = @Model.ProductInvoiceGroupId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "ProductInvoiceGroup", new { id = @Model.ProductInvoiceGroupId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                </div>
                <div class="btn-group">
                    <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle" aria-expanded="false" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
                    </a>
                    <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">
                        <li><a href="@Url.Action("Index", "ProductInvoiceGroup")"><span class="glyphicon glyphicon-list"> </span> List</a></li>
                        <li role="separator" class="divider"></li>
                        <li><a href="@Url.Action("Report", "ProductInvoiceGroup")"><span class="glyphicon glyphicon-th"> </span> Report</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">

                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.ProductInvoiceGroupName, "Invoice Group Name", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(m => m.ProductInvoiceGroupName, null, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.ProductInvoiceGroupName, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.ItcHsCode, "ITCHS Code", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(m => m.ItcHsCode, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.ItcHsCode, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DescriptionOfGoodsId, "Description Of Goods", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(m => m.DescriptionOfGoodsId, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(model => model.DescriptionOfGoodsId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Rate, "Rate", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(m => m.Rate, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.Rate, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">                   
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Weight, "Weight (Per Sq. Feet)", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(m => m.Weight, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.Weight, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Knots, "Knots", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(m => m.Knots, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.Knots, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>          
                
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsSample, "Is Sample", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10" style="padding-top:4px">
                                @Html.CheckBoxFor(m => m.IsSample, new { @class = "checkbox col-xs-1" })
                                @Html.ValidationMessageFor(model => model.IsSample)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10" style="padding-top:4px">
                                @Html.CheckBoxFor(m => m.IsActive, new { @class = "checkbox col-xs-1" })
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                        </div>
                    </div>
                </div> 


                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SeparateWeightInInvoice, "Separate Weight In Invoice", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10" style="padding-top:4px">
                                @Html.CheckBoxFor(m => m.SeparateWeightInInvoice, new { @class = "checkbox col-xs-1" })
                                @Html.ValidationMessageFor(model => model.SeparateWeightInInvoice)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DivisionId, "Division", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(m => m.DivisionId, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(model => model.DivisionId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>

                
                     
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function(){
        CustomSelectFunction($("#DescriptionOfGoodsId"), '/ComboHelpList/GetProductDescriptionOfGoods', '/ComboHelpList/SetSingleProductDescriptionOfGoods', ' ', false, 0);
        CustomSelectFunction($("#DivisionId"), '/ComboHelpList/GetDivision', '/ComboHelpList/SetSingleDivision', ' ', false, 0);
    });

    var IsSaved=false;
    var ValidationCount=0;

    $('form').submit(function(event){

        if(!IsSaved)
        {
            if(!ValidateData())
            {
                return false;
            }
            IsSaved=true;
            return IsSaved;
        }
        else
        {
            return false;
        }


    });


    function ValidateData() {
        var DocId=@Model.ProductInvoiceGroupId;
        var TempValue;
        var ValidationMessage="";



        //Checking for dulicate key value
        if(DocId<=0)
        {
            TempValue= $('#ProductInvoiceGroupName').DuplicateCheckForCreate({ name: 'ProductInvoiceGroup', value: $('#ProductInvoiceGroupName').val(), doctype: 0 });
            if (TempValue){ ValidationMessage=$('#ProductInvoiceGroupName').val() + " already exist <br />";}
        }
        else
        {
            test = $('#ProductInvoiceGroupName').DuplicateCheckForEdit({ name: 'ProductInvoiceGroup', value: $('#ProductInvoiceGroupName').val(), doctype: 0,headerId:DocId });
            if (TempValue) {ValidationMessage+=$('#ProductInvoiceGroupName').val() + " already exist <br />";}
        }
        if(TempValue)
        {
            if($('#validationerrormsg').length==0){
                $('.panel-info').filter(':eq(1)').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
            else
            {
                $('#validationerrormsg').html(ValidationMessage);
            }
        }
        return  (ValidationMessage=="");

    }

</script>