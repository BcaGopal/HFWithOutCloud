@model Model.ViewModels.PackingHeaderViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Edit", "PackingHeader", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m=>m.PackingHeaderId)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.SiteId)
    @Html.HiddenFor(model => model.DivisionId)
    
    
    <script>
        $(document).ready(function () {
            CustomSelectFunction($("#BuyerId"), '/ComboHelpList/GetBuyers', '/ComboHelpList/SetSingleBuyer', 'Enter Buyer Name', false, 0);
        });
    </script>
    
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>
                <span style="font-family: Calibri,sans-serif,Verdana"> Edit Packing.</span>
            </h4>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal" role="form">
                @Html.ValidationSummary(true)
                <div class="row">
                    <h4 class="col-md-12" style="margin-top:15px">
                        Document Details
                    </h4>
                    
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocTypeId, "Entry Type", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.DocTypeId, new SelectList(ViewBag.DocTypeList as System.Collections.IEnumerable, "DocumentTypeId", "DocumentTypeName"), new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocDate, "Packing Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6" })
                                        @*<input type="text" class="form-control col-sm-10">*@
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DocNo, "Packing No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control col-xs-6" })
                                    </div>
                                    <span id="DocNoValidation"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.Remark, null, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <h4 class="col-md-12" style="margin-top:15px">
                        Filters
                    </h4>
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.BuyerId, "Buyer", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(a => a.BuyerId, new {@readonly = true })
                                        @Html.ValidationMessageFor(model => model.BuyerId)
                                        <span id="BuyerValidation"></span>
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.GodownId, "Godown", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.GodownId, new SelectList(ViewBag.GodownList as System.Collections.IEnumerable, "GodownId", "GodownName"), new { @class = "form-control col-xs-6 height" })
                                        @Html.ValidationMessageFor(model => model.GodownId)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DeliveryUnitId, "Delivery Unit", new { @class = "control-label col-xs-4"})
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.DeliveryUnitId, new SelectList(ViewBag.DeliveryUnitList as System.Collections.IEnumerable, "UnitId", "UnitName"), new { @class = "form-control col-xs-6 height" })
                                        @Html.ValidationMessageFor(model => model.DeliveryUnitId)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <hr />
                <div class="form-group">
                    <div class="col-sm-offset-2 col-md-10">
                        <input type="submit" value="Next" class="btn btn-primary btn-sm CurveBorder" id="submit" />
                        <span style="font-family: Calibri,sans-serif,Verdana;font-size:large">
                            @if (HttpContext.Current.User.Identity.IsAuthenticated)
                            {
                                @Html.ActionLink("Back", "Index", "PackingHeader", new { @class = "btn btn-primary btn-sm col-md-offset-1 CurveBorder ActionLinkPadding CustomCss height" })
                            }
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#DocTypeId").focus();
    })

    $("#submit").click(function () {
        //DataValidation();
    });


    function DataValidation() {
        var response = true;

        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.Action("FIsDuplicateDocNo"))",
            data: { DocNo: $("#DocNo").val() },
        async: false,
        success: function (data) {
            if (data.returnvalue == true ){
                $("#DocNoValidation").text("Document no already exists.");
                response = false;
            }
            else
                $("#DocNoValidation").text(" ");
        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to Check Validation.' + thrownError);                        
        }
    });
    StopExecution(response);
    return response;
        
    }

</script>