@model Model.ViewModels.CustomDetailViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Create", "CustomDetail", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m=>m.CustomDetailId)
    @Html.HiddenFor(m=>m.CreatedBy)
    @Html.HiddenFor(m=>m.CreatedDate)
    @Html.HiddenFor(m=>m.SiteId)
    @Html.HiddenFor(m=>m.DivisionId)
    

        
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Custom Detail</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "CustomDetail", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "CustomDetail", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Print", "CustomDetail", new { id = @Model.CustomDetailId }, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Email", "CustomDetail", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "CustomDetail", new { id = @Model.CustomDetailId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "CustomDetail", new { id = @Model.CustomDetailId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "CustomDetail", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>

        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal" role="form">
                @Html.ValidationSummary(true)
                <div class="row">
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Document Details
                    </h4> 
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocTypeId, "Booking Type", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.DocTypeId, new SelectList(ViewBag.DocTypeList as System.Collections.IEnumerable, "DocumentTypeId", "DocumentTypeName"), new { @class = "form-control col-xs-6 height required" })
                                        @Html.ValidationMessageFor(model => model.DocTypeId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocNo, "Booking No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.DocNo)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DocDate, "Booking Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.DocDate)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SaleInvoiceHeaderId, "Invoice No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.SaleInvoiceHeaderId, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.SaleInvoiceHeaderId)
                                    </div>
                                </div>
                            </div>

                            
                        </div>
                    </div>
                </div>

                <hr />
                <div class="row">
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Other Details
                    </h4> 
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TRNo, "TR No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.TRNo, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.TRNo)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TRDate, "TR Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.TRDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.TRDate)
                                    </div>
                                </div>
                            </div>

                            
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TRCourierId, "TR Courier Name", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.TRCourierId, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.TRCourierId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TRCourierDate, "TR Courier Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.TRCourierDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.TRCourierDate)
                                    </div>
                                </div>
                            </div>

                            
                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TRCourierRefNo, "TR Courier Ref No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(a => a.TRCourierRefNo, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.TRCourierRefNo)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ShippingBillNo, "Shipping Bill No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ShippingBillNo, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.ShippingBillNo)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ShippingBillDate, "Shipping Bill Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ShippingBillDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.ShippingBillDate)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CustomSealNo, "Custom Seal No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.CustomSealNo, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.CustomSealNo)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LineSealNo, "Line Seal No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.LineSealNo, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.LineSealNo)
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NoOfPackages, "No Of Pkgs", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.NoOfPackages, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.NoOfPackages)
                                    </div>
                                </div>
                            </div>


                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ActualWeight, "Actual Weight", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ActualWeight, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.ActualWeight)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ChargedWeight, "Charged Weight", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ChargedWeight, null, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.ChargedWeight)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ContainerNo, "Container No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ContainerNo, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.ContainerNo)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div style="padding-right:15px">
                    <table class="table table-hover ctable">
                        <thead id="header">
                        </thead>

                        <tbody id="Result"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}


<script>
    $(document).ready(function () {
        CustomSelectFunction($("#TRCourierId"), '/ComboHelpList/GetPerson', '/ComboHelpList/SetSinglePerson', 'Enter Consignee Name', false, 0);
        GetSaleInvoiceList($("#SaleInvoiceHeaderId"), '/CustomDetail/GetPendingInvoice', '/ComboHelpList/SetSingleSaleInvoice', 'Enter Invoice No', false, 0);
    });




    function GetSaleInvoiceList(Id, GetAction, SetAction, placehold, multiple, length) {
        var geturl = GetAction;
        //The url we will send our get request to
        var attendeeUrl = GetAction;
        var pageSize = 20;
        var CustomDetailId = @Model.CustomDetailId;
        var DocDate = $("#DocDate").val();
        Id.select2(
        {

            placeholder: placehold,
            //Does the user have to enter any data before sending the ajax request
            minimumInputLength: length,
            allowClear: true,
            multiple: multiple,
            ajax: {
                //How long the user has to pause their typing before sending the next request
                quietMillis: 150,
                //The url of the json service
                url: attendeeUrl,
                dataType: 'jsonp',
                //Our search term and what page we are on
                data: function (term, page) {
                    return {
                        pageSize: pageSize,
                        pageNum: page,
                        searchTerm: term,
                        CustomDetailId: CustomDetailId,
                        DocDate: DocDate,
                    };
                },
                results: function (data, page) {
                    //Used to determine whether or not there are more results available,
                    //and if requests for more data should be sent in the infinite scrolling
                    var more = (page * pageSize) < data.Total;
                    return { results: data.Results, more: more };
                }
            },
            initSelection: function (element, callback) {

                var xval = element.val();
                if (xval != 0) {
                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: SetAction,
                        data: { Ids: element.val() },
                        success: function (data) {
                            callback(data);
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert('Failed to Retrive Qty' + thrownError);
                        }
                    })
                }
                //callback([{ id: "1", text: "arpit" }, { id: "2", text: "akash" }]);
            }
        });
    }

</script>



<script type="text/javascript">
    var form_clean;
    $(document).ready(function () {

        //Calling the function to load the table data/ Line information
        


        form_clean = $("form").serialize();


        //For maintaining the data change on the form
        //To enable of disable save button based on the data changed
        $("input,select").change(function () {
            var form_dirty = $("form").serialize();
            if (form_clean != form_dirty) {
                $("#submit").removeAttr('disabled');
            }
            else
            {
                // alert('same form');
                $("#submit").attr({ "disabled": "disabled" })
            }
        });
    });


    var id=@Model.CustomDetailId;
    if(id==null||id==0)
    {
        $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
    }


    //To focus on the first element on modal load
    $('#myModal').on('shown.bs.modal', function () {
        $("#ProductId").select2("focus");
    });



    


    //For Populating Modal PopUp on DoubleClick Of Row
    $('#Result').on("dblclick",'tr',function(){
        var text = $(this).find(".id").val();
        var editurl=$(this).find('a[Modify]').attr('href');
        $('#myModalContent').load(editurl, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
    });


    //For Handling Modal PopUp on Clicking Delete Icon
    $('#Result').on("click",'a[delete]', function (e) {
        $('#myModalContent').load(this.href, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
        return false;
    });


    //For posting the data through ajax and render the contents sent back from the server
    function bindForm1(dialog) {
        //alert("binding");
        $('form#modform', dialog).submit(function () {
            //alert(this.action);
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //Refresh
                        //location.reload();
                        //alert('Data Saved');
                    }else if(!result.success)
                    {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                    else {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                }
            });
            return false;
        });

    }



    

</script>



<script type="text/javascript">
    $("#submit").on("click", function () {
        var mpoid=$('#CustomDetailId').val();
        var tes;
        if(mpoid<=0)
        {
            tes= $('#DocNo').DuplicateCheckForCreate({ name: 'CustomDetail', value: $('#DocNo').val(), doctype: $('#DocTypeId').val() });
        }
        else
        {
            tes = $('#DocNo').DuplicateCheckForEdit({ name: 'CustomDetail', value: $('#DocNo').val(), doctype: $('#DocTypeId').val(),headerId:mpoid });
        }
        if (tes) {
            return false;
        }
        else
        {
            return;
        }
    });
</script>

