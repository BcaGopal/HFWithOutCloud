@model Model.Models.ProductCategory

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "ProductConstruction", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m=>m.ProductCategoryId)
    
    <div class="panel panel-default">

        <div class="panel-heading">

            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Product Construction</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "ProductConstruction", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "ProductConstruction", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Print", "ProductConstruction", null, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Email", "ProductConstruction", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "ProductConstruction", new { id = @Model.ProductCategoryId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "ProductConstruction", new { id = @Model.ProductCategoryId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "ProductConstruction", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })

                </h4>
            </div>

        </div>
        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.ProductCategoryName, "Name", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProductCategoryName, null, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.ProductCategoryName, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6" style=" padding-top:4px">
                                @Html.CheckBoxFor(m => m.IsActive, new { @class = "checkbox col-xs-1" })
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script type="text/javascript">
    var IsSaved=false;
    var ValidationCount=0;

    $('form').submit(function(event){

        if(!IsSaved)
        {
            if(!ValidateData())
            {
                return false;
            }
            IsSaved=true;
            return IsSaved;
        }
        else
        {
            return false;
        }


    });


    function ValidateData() {
        var DocId=@Model.ProductCategoryId;
        var TempValue;
        var ValidationMessage="";



        //Checking for dulicate key value
        if(DocId<=0)
        {
            TempValue= $('#ProductCategoryName').DuplicateCheckForCreate({ name: 'ProductCategory', value: $('#ProductCategoryName').val(), doctype: 0 });
            if (TempValue){ ValidationMessage=$('#ProductCategoryName').val() + " already exist <br />";}
        }
        else
        {
            test = $('#ProductCategoryName').DuplicateCheckForEdit({ name: 'ProductCategory', value: $('#ProductCategoryName').val(), doctype: 0,headerId:DocId });
            if (TempValue) {ValidationMessage+=$('#ProductCategoryName').val() + " already exist <br />";}
        }
        if(TempValue)
        {
            if($('#validationerrormsg').length==0){
                $('.panel-info').filter(':eq(1)').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
            else
            {
                $('#validationerrormsg').html(ValidationMessage);
            }
        }
        return  (ValidationMessage=="");

    }
</script>