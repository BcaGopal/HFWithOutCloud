@model Model.ViewModel.DocumentTypeTimeExtensionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "DocumentTypeTimeExtension", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.DocumentTypeTimeExtensionId)    
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> DocumentTypeTimeExtension</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "DocumentTypeTimeExtension", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "DocumentTypeTimeExtension", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "DocumentTypeTimeExtension", new { id = @Model.DocumentTypeTimeExtensionId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "DocumentTypeTimeExtension", new { id = @Model.DocumentTypeTimeExtensionId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "DocumentTypeTimeExtension", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">

                @Html.ValidationSummary(true)
                <div class="row" style="margin-left:0px;margin-right:0px; ">
                    <a href="#" id="CopyExtension"> <span style="padding:10px 10px 0 0;font-size:x-large" class="pull-right glyphicon glyphicon-paste"></span></a>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.DocTypeId, "DocType", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.DocTypeId, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.DocTypeId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.Type, "Type", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(model => model.Type, new SelectList(ViewBag.DocPlanTypeList as System.Collections.IEnumerable, "Value", "Text"), string.Empty, new { @class = "form-control col-xs-6 height required" })
                                @Html.ValidationMessageFor(m => m.Type, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ExpiryDate, "Expiry Date", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ExpiryDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DocDate, "DocDate", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(model => model.DocDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SiteId, "Site", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(model => model.SiteId, new SelectList(ViewBag.SiteList as System.Collections.IEnumerable, "SiteId", "SiteName"), string.Empty, new { @class = "form-control col-xs-6 height required" })
                                @*@Html.TextBoxFor(m => m.SiteId, new { @class = "form-control col-xs-6 required" })*@
                                @Html.ValidationMessageFor(model => model.SiteId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DivisionId, "Division", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(model => model.DivisionId, new SelectList(ViewBag.DivisionList as System.Collections.IEnumerable, "DivisionId", "DivisionName"), string.Empty, new { @class = "form-control col-xs-6 height required" })
                                @*@Html.TextBoxFor(m => m.DivisionId, new { @class = "form-control col-xs-6 required" })*@
                                @Html.ValidationMessageFor(model => model.DivisionId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, "UserName", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.UserName, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Reason, "Reason", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.Reason, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.Reason, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NoOfRecords, "No Records", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.NoOfRecords, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.NoOfRecords, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">


    var Rec = '@Model.DocumentTypeTimeExtensionId';

    if (Rec && Rec > 0)
        $('input:submit').remove();

    CustomSelectFunction($("#DocTypeId"), '/DocumentTypeTimeExtension/GetDocTypeHelpList', '/ComboHelpList/SetSingleDocumentType', ' ', false, 0, function () { return $('#Type').val(); });
    $("#Type").select2();
    $("#SiteId").select2();
    $("#DivisionId").select2();
    CustomSelectFunction($("#UserName"), '/ComboHelpList/GetUsers', '/ComboHelpList/SetSingleUsers', ' ', false, 0);
    //CustomSelectFunction($("#SiteId"), '/ComboHelpList/GetSite', '/ComboHelpList/SetSingleSite', ' ', false, 0);
    //CustomSelectFunction($("#DivisionId"), '/ComboHelpList/GetDivision', '/ComboHelpList/SetSingleDivision', ' ', false, 0);

    var $btnTriggered = false;
    $('#CopyExtension').click(function () {


        if (!$btnTriggered) {

            $btnTriggered=true

            $.getJSON("/DocumentTypeTimeExtension/GetHistory", {}, function (data, stat, xhr) {

                $("#DocTypeId").select2('data', { id: data.DocTypeId, text: data.DocTypeName });
                $("#Type").select2('data', { id: data.Type, text: data.Type });
                $("#UserName").select2('data', { id: data.UserName, text: data.UserName });
                $("#Reason").val(data.Reason);
                $("#NoOfRecords").val(data.NoOfRecords);
                $('#DocDate').datepicker('setDate', new Date(parseInt((data.DocDate).toString().substr(6))));
                $('#ExpiryDate').datepicker('setDate', new Date(parseInt((data.ExpiryDate).toString().substr(6))));
                $btnTriggered = false;
            })
        }

    })


</script>