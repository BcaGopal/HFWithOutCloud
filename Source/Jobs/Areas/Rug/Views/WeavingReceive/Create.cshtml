@model Model.ViewModel.JobReceiveHeaderViewModel
@using Core.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Post", "JobReceiveHeader", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.Status)
    @Html.HiddenFor(m => m.JobReceiveHeaderId)
    @Html.HiddenFor(m => m.DocTypeId)
    @Html.HiddenFor(m => m.JobReceiveSettings.ProcessId)

<div class="panel panel-default">
    <div class="panel-heading">
        @if (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue")
        {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Submit @ViewBag.Name</span>
            <button type="submit" name="Command:Submit" class="btn btn-primary right" id="SubmitContinue" style="margin-left:5px;">Submit & Next<span class='badge'>@(ViewBag.PendingToSubmit != 0 ? ViewBag.PendingToSubmit : "")</span></button>
            <button type="submit" name="Command:Submit" class="btn btn-primary right">Submit</button>
            <input type="hidden" id="IsContinue" name="IsContinue" value="" />
        </h3>}
        else if (ViewBag.transactionType == "approve" || ViewBag.transactionType == "approveContinue")
        {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Approve @ViewBag.Name</span>
            <button type="submit" name="Command:Approve" class="btn btn-primary right" style="margin-left:5px" id="ApproveContinue">Approve & Next<span class='badge'>@(ViewBag.PendingToApprove != 0 ? ViewBag.PendingToApprove : "")</span></button>
            <button type="submit" class="btn btn-primary right" name="Command:Approve">Approve</button>
            <input type="hidden" id="IsContinue" name="IsContinue" value="" />
        </h3>}
        else if (ViewBag.transactionType == "detail")
        {
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>
        </h3>
        }
        else
        {
        <h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
            <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
        </h3>
        @Html.ActionLink("For Order", "_ForOrder", "JobReceiveLine", new { id = @Model.JobReceiveHeaderId, sid = @Model.JobWorkerId }, new { data_modal = "", id = "btnCreateF", @class = "btn btn-primary borderradii", @title = "For Order", @data_toggle = "tooltip", @style = "background-color:#2980b9" })
        }

        <hr style="margin-top:10px;margin-bottom:0px" />

        <div class="panel-info">
            <h4 style="padding:5px 0 0 0;margin:0px">
                @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                @Html.ActionLink(" ", "Create", "JobReceiveHeader", new { @id = ViewBag.id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "History", "JobReceiveHeader", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "Print", "JobReceiveHeader", new { id = @Model.JobReceiveHeaderId }, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecord", target = "_blank" })
                @Html.ActionLink(" ", "Email", "JobReceiveHeader", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "PrevPage", "JobReceiveHeader", new { DocId = @Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "NextPage", "JobReceiveHeader", new { DocId = @Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                @*@Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-trash toolbar", @title = "Delete", @data_toggle = "tooltip" })*@
                @Html.ActionLink(" ", "Index", "JobReceiveHeader", new { @id = ViewBag.id }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "Report", "JobReceiveHeader", null, new { @class = "glyphicon glyphicon-th toolbar right", @title = "Report", @data_toggle = "tooltip" })
            </h4>
        </div>
    </div>
    <div class="panel-info" style="padding-left:15px">
        <div class="form-horizontal">
            @Html.ValidationSummary(true)

            <div class="row">
                <h4 class="col-md-12 black">
                    <span class="glyphicon glyphicon-align-justify"></span>
                    1.Document Details
                </h4>
                <div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group" style="margin-top:15px">
                                @Html.LabelFor(model => model.DocDate, "Receipt Date", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control required" })
                                    @Html.ValidationMessageFor(model => model.DocDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group" style="margin-top:15px">
                                @Html.LabelFor(model => model.DocNo, "Receipt No", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control required" })
                                    @Html.ValidationMessageFor(m => m.DocNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row">


                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.JobWorkerId, "Job Worker", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(m => m.JobWorkerId, new { @class = "form-control required" })
                                    @Html.ValidationMessageFor(m => m.JobWorkerId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.JobWorkerDocNo, "JobWorker DocNo", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(m => m.JobWorkerDocNo, null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.JobWorkerDocNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ProcessId, "Process", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(m => m.ProcessId, new { @class = "form-control required", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.ProcessId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.JobReceiveById, "Job Received By", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(m => m.JobReceiveById, new { @class = "form-control required" })
                                    @Html.ValidationMessageFor(m => m.JobReceiveById, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>


                    <div class="row">

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.GodownId, "Godown", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.TextBoxFor(m => m.GodownId, new { @class = "form-control required" })
                                    @Html.ValidationMessageFor(m => m.GodownId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-xs-4" })
                                <div class="col-xs-6">
                                    @Html.TextAreaFor(m => m.Remark, new { @class = "form-control col-xs-6" })
                                    @Html.ValidationMessageFor(m => m.Remark, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>


            <hr />
            <div class="row">
                <h4 class="col-md-12 black" style="margin-top:15px">
                    <span class="glyphicon glyphicon-shopping-cart"></span>
                    2.Products
                </h4>
            </div>

            <div class="panel-info">
                <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                    <span class="glyphicon glyphicon-plus-sign"></span>
                    @{string Action = "";
                    if (Model.Status == (int)StatusConstants.Drafted)
                    { Action = "CreateLine"; }
                    else if (Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified || Model.Status == (int)StatusConstants.ModificationSubmitted)
                    { Action = "CreateLineAfter_Submit"; }
                    else if (Model.Status == (int)StatusConstants.Approved)
                    { Action = "CreateLineAfter_Approve"; }
                    }
                    @Html.ActionLink("Add New Row ", Action, "JobReceiveLine", new { id = @Model.JobReceiveHeaderId, JobWorkerId = @Model.JobWorkerId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })
                   @* @Html.ActionLink("Summary", "GetSummary", "JobReceiveHeader", new { id = @Model.JobReceiveHeaderId}, new { @class = "toolbar", @data_toggle = "tooltip" })*@
                </h5>
            </div>
            <div style="padding-right:15px">

                @*<table class="table table-hover ctable">
                    <thead id="header">
                    </thead>

                    <tbody id="Result"></tbody>
                </table>*@

                <div class="panel panel-default" id="grid">
                    <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                        <div class="row grid-head">
                            <div class="block" style="width:5%">
                                Srl.
                            </div>
                            <div class="block" style="width:90%">
                                <div class="row">
                                    @*ProductInfo*@
                                    <div class="block" style="width:25%">
                                        Product Name

                                    </div>
                                    @*PopContext*@
                                    <div class="block" style="width:15%">
                                        Order No
                                    </div>
                                    @*Qty*@
                                    <div class="block text-right" style="width:10%">
                                        Qty
                                    </div>
                                    <div class="block" style="width:10%">
                                        Unit
                                    </div>
                                    <div class="block text-right" style="width:10%">
                                        Receive <br /> Qty
                                    </div>
                                    <div class="block text-right" style="width:10%">
                                        Pass<br /> Qty
                                    </div>
                                    <div class="block text-right" style="width:10%">
                                        Loss<br /> Qty
                                    </div>
                                    <div class="block text-right" style="width:10%">
                                        Penality<br /> Amt
                                    </div>
                                </div>
                            </div>
                            <div class="block" style="width:5%">

                            </div>
                        </div>

                    </div>
                    <div class="panel-info" id="gbody">


                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.JobReceiveSettings.SqlProcConsumption))
                {

                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Consumption
                    </h4>
                </div>

                <div class="panel-info">
                    <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        @Html.ActionLink("Add New Row ", "Consumption", "JobReceiveLine", new { id = @Model.JobReceiveHeaderId }, new { data_modal = "", id = "btnCreatePO", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    </h5>
                </div>
                <div style="padding-right:15px">



                    <div class="panel panel-default" id="grid">

                        <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                            <div class="row grid-head">
                                <div class="text-left block" style="width: 5%; ">
                                    Srl.
                                </div>
                                <div class="block" style="width: 90%;">
                                    <div class="row">
                                        @*ProductInfo*@
                                        <div class="block" style="width: 30%; ">
                                            Product Name
                                        </div>
                                        <div class="block" style="width: 20%;">
                                            Dimension1
                                        </div>
                                        <div class="block" style="width: 20%;">
                                            Dimension2
                                        </div>
                                        @*Qty*@
                                        <div class="text-right block" style="width: 15%;">
                                            Qty
                                        </div>
                                        @*Rate*@
                                        <div class="block" style="width: 15%; ">
                                            Unit
                                        </div>
                                    </div>
                                </div>


                                <div class="" style="width:5%">

                                </div>
                            </div>

                        </div>


                        <div class="panel-info" id="gbodyconsumption">


                        </div>
                    </div>

                </div>


                }


                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        3.By Products
                    </h4>
                </div>

                <div class="panel-info">
                    <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        @Html.ActionLink("Add New Row ", "ByProduct", "JobReceiveLine", new { id = @Model.JobReceiveHeaderId }, new { data_modal = "", id = "btnCreateBYP", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    </h5>
                </div>
                <div style="padding-right:15px">



                    <div class="panel panel-default" id="grid">

                        <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                            <div class="row grid-head">
                                <div class="text-left block" style="width: 5%; ">
                                    Srl.
                                </div>
                                <div class="block" style="width: 90%;">
                                    <div class="row">
                                        @*ProductInfo*@
                                        <div class="block" style="width: 30%; ">
                                            Product Name
                                        </div>
                                        <div class="block" style="width: 20%;">
                                            Dimension1
                                        </div>
                                        <div class="block" style="width: 20%;">
                                            Dimension2
                                        </div>
                                        @*Qty*@
                                        <div class="text-right block" style="width: 15%;">
                                            Qty
                                        </div>
                                        @*Rate*@
                                        <div class="block" style="width: 15%; ">
                                            Unit
                                        </div>
                                    </div>
                                </div>


                                <div class="" style="width:5%">

                                </div>
                            </div>

                        </div>


                        <div class="panel-info" id="gbodybyproducts">


                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>
}



@if ((ViewBag.Mode == "Add") || (ViewBag.Mode == "Edit"))
{

<script type="text/javascript">

    $("#DocNo").on("change", function () {
        $(this).DuplicateCheckForCreate({ name: 'JobReceiveHeaders', value: $(this).val(), doctype: $("#DocTypeId").val() });
    });

    //Reloading the table contents on modal hide
    $('#myModal').on('hidden.bs.modal', function () {
        LoadProducts();
        LoadConsumption();
        LoadByProduct();
    });


    //To focus on the first element on modal load
    $('#myModal').on('shown.bs.modal', function () {
        $("#ProductId").select2('focus');
    });

    //For Populating Modal PopUp on DoubleClick Of Row
    $('#gbodybyproducts,#gbodyconsumption').on("dblclick",'.grid-body',function(){
        var text = $(this).find(".id").val();
        var editurl=$(this).find('a[delete]').attr('href');
        $('#myModalContent').load(editurl, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
    });
    $('#gbody').on("dblclick",'.grid-body',function(){

        var editurl=$(this).find('a[edit]').attr('href');
        $('#myModalContent').load(editurl, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
    });



    //For Populating Modal PopUp on DoubleClick Of Row
    $('#gbodycharges').on("dblclick",'.grid-body',function(){
        var text = $(this).find(".id").val();

        var editurl="/TaxCalculation/GetJRHeaderChargeForEdit/";
        $('#myModalContent').load(editurl,{Id:text,HeaderTable:"Web.JobReceiveHeaderCharges",LineTable:"Web.JobReceiveLineCharges"}, function ( response, status, xhr) {
            //alert('2');
            if ( status == "error" ) {
                var msg = "Sorry but there was an error: ";

            }
            else
            {
                $('#myModal').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');

                bindForm1(this);}
        });
    });

    //For Handling Modal PopUp on Clicking Delete Icon
    $('#gbody,#gbodybyproducts,#gbodyconsumption').on("click",'a[delete]', function (e) {
        $('#myModalContent').load(this.href, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
        return false;
    });

    //For Handling Modal PopUp on Clicking Delete Icon
    $('#gbody,#gbodybyproducts,#gbodyconsumption').on("click",'a[Detail]', function (e) {
        $('#myModalContent').load(this.href, function (response, status, xhr) {
            //alert('2');
            if ( status == "error" ) {
                var msg = "Sorry but there was an error: ";
            }
            else
            {
                $('#myModal').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');

                bindForm1(this);}
        });
        return false;
    });

    //Reloading the table contents on modal hide
    $('#myModal').on('hidden.bs.modal', function () {
        LoadProducts();
        var id=@Model.JobReceiveHeaderId;
        LoadCharges(id,"Web.JobReceiveHeaderCharges","Web.JobReceiveLineCharges");
    });



    //For posting the data through ajax and render the contents sent back from the server
    function bindForm1(dialog) {
        //alert("binding1");
        $('form#modform', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                data:$(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //Refresh
                        //location.reload();
                        //alert('Data Saved');
                    }else if(!result.success)
                    {//alert('Data Saved1');
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                    else {
                        //alert('Data Saved2');
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                },
            });
            return false;
        });

    }

    $(function () {

        $.ajaxSetup({ cache: false });

        $("a[data-modalCustom]").on("click", function (e) {
            // hide dropdown if any
            if(this.href=="")
            {
                return false;
            }
            //alert(' Script');
            $('#myModalContent').load(this.href, function () {
                $('#myModal').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');

                bindForm1(this);
            });

            return false;
        });
    });

</script>


}

<script type="text/javascript">

    $('a#PrintRecord').click(function (e) {

        var editiiid = $('#JobReceiveHeaderId').val();


        var Status = $('#Status').val();
        var url;
        if (Status == StatusContstantsEnum.Drafted) {
            url = '@Url.Action("Print", "JobReceiveHeader")' + "/" + editiiid;
        }
        else if (Status == StatusContstantsEnum.Submitted || Status == StatusContstantsEnum.Modified || Status == StatusContstantsEnum.ModificationSubmitted) {
            url = '@Url.Action("PrintAfter_Submit", "JobReceiveHeader")' + "/" + editiiid;
        }
        else if (Status == StatusContstantsEnum.Approved || Status == StatusContstantsEnum.Closed ) {
            url = '@Url.Action("PrintAfter_Approve", "JobReceiveHeader")' + "/" + editiiid;
        }
        $(this).attr('href', url);
        return;
    })

    $(document).ready(function () {

        //Calling the function to load the table data/ Line information
        LoadProducts();

        //Adding Hidden Input Fields
        AddFields();

        //Calling the function to load Consumption Details
        LoadConsumption();

        //Calling the function to load ByProducts
        LoadByProduct();


    });


    CustomSelectFunction($("#ProcessId"), '/ComboHelpList/GetProcess', '/ComboHelpList/SetSingleProcess', ' ', false, 1);
    CustomSelectFunction($("#JobWorkerId"), '/ComboHelpList/GetJobWorkers', '/ComboHelpList/SetSingleJobWorker', ' ', false, 1);
    CustomSelectFunction($("#JobWorkerId"), '/ComboHelpList/GetJobWorkers', '/ComboHelpList/SetSingleJobWorker', ' ', false, 1);
    CustomSelectFunction($("#GodownId"), '/ComboHelpList/GetGodown', '/ComboHelpList/SetSingleGodown', ' ', false, 1);
    //CustomSelectFunction($("#JobReceiveById"), '/ComboHelpList/GetEmployees', '/ComboHelpList/SetSingleEmployee', ' ', false, 1);
    CustomSelectFunction($("#JobReceiveById"), '/ComboHelpList/GetSelect2Data', '/ComboHelpList/SetSingleSelect2Data', ' ', false, 1,'Web.spGetHelpListEmployee','Web.spGetHelpListEmployee');
    var id=@Model.JobReceiveHeaderId;
    if(id==null||id==0)
    {
        $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
        $("#btnCreateF").attr('disabled','disabled');
    }
    $("#JobWorkerId").select2('focus');



    //Loading the Table data or Line Information
    function LoadProducts() {
        var groupId=@Model.JobReceiveHeaderId;
        var status='@Model.Status';
        var LineEditUrl;
        var LineDeleteUrl;
        if(status==StatusContstantsEnum.Drafted)
        {
            LineEditUrl="/JobReceiveLine/_ModifyLine/";
            LineDeleteUrl="/JobReceiveLine/_DeleteLine/";
        }
        else if(status==StatusContstantsEnum.Submitted || status == StatusContstantsEnum.Modified || status == StatusContstantsEnum.ModificationSubmitted)
        {
            LineEditUrl="/JobReceiveLine/_ModifyLineAfterSubmit/";
            LineDeleteUrl="/JobReceiveLine/_DeleteLine_AfterSubmit/";
        }
        else if(status==StatusContstantsEnum.Approved)
        {
            LineEditUrl="/JobReceiveLine/_ModifyLineAfterApprove/";
            LineDeleteUrl="/JobReceiveLine/_DeleteLine_AfterApprove/";
        }
        var link="/JobReceiveLine/Index/"+groupId;
        var QtyCount=0;
        var AmountCount=0;
        var ReceiveQtyCount=0;
        var PassQtyCount=0;
        var LossQtyCount=0;
        var unit=true;
        var prevunit;
        var decimal=0;
        var DealQty=0;
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;
                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>"
                            +"      <div class='row-index block'  style='width:5%'>"+srno+"<input type='hidden' class='id' value='"+item.JobReceiveLineId+"' /></div>"
                            +"          <div class='block'  style='width:90%'>"
                            +"              <div class='row'>"
                            +"                   <div class='block' style='width:25%'>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")
                            +"                       <br />"+(item.Specification==null?" ":item.Specification)
                            +"                           <p>"+(item.Dimension1Name==null?" ":item.Dimension1Name+",")+(item.Dimension2Name==null?" ":item.Dimension2Name)+"</p>"
                            +"                   </div>"
                            +"                   <div class='block'  style='width:15%'>"+(item.JobOrderHeaderDocNo==null?" ":"<span title='DueDate' class='' >"+item.JobOrderHeaderDocNo)+"</span><br />"
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.Qty==null?" ":item.Qty.toFixed(item.UnitDecimalPlaces))+"<br />"
                            +"                   </div>"
                            +"                   <div class='block'  style='width:10%'>"+(item.UnitName==null?" ":item.UnitName)
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.ReceiveQty==null?" ":item.ReceiveQty.toFixed(item.UnitDecimalPlaces))
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.PassQty==null?" ":item.PassQty.toFixed(item.UnitDecimalPlaces))
                            +"                   </div>"
                            +"                   <div class=' text-right block'  style='width:10%'>"+(item.LossQty==null?" ":item.LossQty.toFixed(item.UnitDecimalPlaces))
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.PenaltyAmt==null?" ":item.PenaltyAmt.toFixed(item.UnitDecimalPlaces))
                            +"                   </div>"
                            +"              </div>"
                            +"          </div>"
                            +"      <div class='block'  style='width:5%'>"
                            +"          <a class='glyphicon glyphicon-trash icon-Cus-Size' delete='' href='"+LineDeleteUrl+item.JobReceiveLineId+"'></a>"
                            +"          <a  edit='' href='"+LineEditUrl+item.JobReceiveLineId+"'></a>"
                            +"      </div>"
                            +"  </div>"
                            +"<hr style='margin-top:0px;margin-bottom:0px'/>";
                        QtyCount+=item.Qty;
                        ReceiveQtyCount+=item.ReceiveQty;
                        PassQtyCount+=item.PassQty;
                        LossQtyCount+=item.LossQty;
                        AmountCount+=item.PenaltyAmt;
                        DealQty+=item.PassQty*item.UnitConversionMultiplier;
                        if(srno!=1)
                        {
                            if(item.UnitName==prevunit && unit!=false)
                            {}
                            else
                            {unit=false;}
                        }

                        if(decimal- parseInt(item.UnitDecimalPlaces) < 0){decimal=item.UnitDecimalPlaces;}
                        srno++;
                        prevunit=item.UnitName;

                    });

                    row+="<div class='row tfooter' style='padding-top:10px;margin-left:0px;margin-right:0px'>"
                        +"  <div class='block' style='width:5%'>"
                        +"  </div>"
                        +"  <div class='block' style='width:90%'>"
                        +"      <div class='row'> "
                        +"          <div class='block'  style='width:25%'><strong>Total</strong></div>"
                        +"          <div class='block' style='width:15%'><strong>Deal Qty:"+DealQty.toFixed(3)
                        +"          </strong></div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"
                        +               (QtyCount.toFixed(decimal))+"</strong>"
                        +"          </div>"
                        +"          <div class='block' style='width:10%'><strong>"
                        +               ((unit==true)?prevunit:"")+"</strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"+(ReceiveQtyCount.toFixed(decimal))
                        +"          </strong></div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"+(PassQtyCount.toFixed(decimal))+"</strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"+(LossQtyCount.toFixed(decimal))
                        +"          </strong></div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"+(AmountCount.toFixed(2))
                        +"          </strong></div>"
                        +"      </div>"
                        +"  </div>"
                        +"  <div class='block'  style='width:5%'>"
                        +"  </div>"
                        +"</div>"
                }
                else
                {

                }
                $("#gbody").html(row);
            },
            error: function (result) {
                alert("Error");
            }
        });
    }


    function LoadConsumption() {
        var groupId=@Model.JobReceiveHeaderId;
        var link="/JobReceiveLine/ConsumptionIndex/"+groupId;
        var QtyCount=0;
        var DealQtyCount=0;
        var AmountCount=0;
        var unit=true;
        var dunit=true;
        var prevunit;
        var prevdunit;
        var decimal=0;
        var DUdecimal=0;
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;

                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>"
                            +"      <div class='row-index block'  style='width:5%'>"+srno+"<input type='hidden' class='id' value='"+item.JobOrderLineId+"' /></div>"
                            +"          <div class='block'  style='width:90%'>"
                            +"              <div class='row'>"
                            +"                  <div class='block' style='width:30%'>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")
                            +"                  </div>"
                            +"                  <div class='block'  style='width:20%'>"+(item.Dimension1Name==null?" ":"<span title='Dim1' class='' style='font-weight:bold'>"+item.Dimension1Name)+"</span><br />"
                            +"                   </div>"
                            +"                  <div class='block'  style='width:20%'>"+(item.Dimension2Name==null?" ":item.Dimension2Name)+"<br />"
                            +"                   </div>"
                            +"                  <div class='text-right block'  style='width:15%'>"+(item.Qty==null?" ":item.Qty.toFixed(item.UnitDecimalPlaces))+"<br />"
                            +"                   </div>"
                            +"                   <div class='block'  style='width:15%'>"+(item.UnitName==null?" ":item.UnitName)
                            +"                   </div>"
                            +"              </div>"
                            +"          </div>"
                            +"      <div class='block'  style='width:5%'><a class='glyphicon glyphicon-trash icon-Cus-Size' delete='' href='/JobReceiveLine/EditConsumption/"+item.JobReceiveBomId+"'></a>"
                            +"      </div>"
                            +"  </div>"
                            +"<hr style='margin-top:0px;margin-bottom:0px'/>";
                        QtyCount+=item.Qty;
                        if(srno!=1)
                        {
                            if(item.UnitName==prevunit && unit!=false)
                            {}
                            else
                            {unit=false;}
                        }

                        if(decimal- parseInt(item.UnitDecimalPlaces) < 0){decimal=item.UnitDecimalPlaces;}
                        srno++;
                        prevunit=item.UnitName;
                    });
                    row+="<div class='row tfooter' style='padding-top:10px;margin-left:0px;margin-right:0px'>"
                        +"  <div class='block' style='width:5%'>"
                        +"  </div>"
                        +"  <div class='block' style='width:90%'>"
                        +"      <div class='row'> "
                        +"          <div class='block'  style='width:30%'><strong>Total</strong></div>"
                        +"          <div class='block' style='width:20%'>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:20%'><strong>"
                        +               "</strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:15%'><strong>"
                        +              (QtyCount.toFixed(decimal))+"</strong>"
                        +"          </div>"
                        +"          <div class='block' style='width:15%'><strong>"
                        +               ((unit==true)?prevunit:"")+"</strong>"
                        +"          </div>"
                        +"      </div>"
                        +"  </div>"
                        +"  <div class='block'  style='width:5%'>"
                        +"  </div>"
                        +"</div>"
                }
                else
                {
                    ;
                }
                $("#gbodyconsumption").html(row);

            },
            error: function (result) {
                alert("Error");
            }
        });
    };

    function LoadByProduct() {
        var groupId=@Model.JobReceiveHeaderId;
        var link="/JobReceiveLine/ByProductIndex/"+groupId;
        var QtyCount=0;
        var DealQtyCount=0;
        var AmountCount=0;
        var unit=true;
        var dunit=true;
        var prevunit;
        var prevdunit;
        var decimal=0;
        var DUdecimal=0;
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;

                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>"
                            +"      <div class='row-index block'  style='width:5%'>"+srno+"<input type='hidden' class='id' value='"+item.JobOrderLineId+"' /></div>"
                            +"          <div class='block'  style='width:90%'>"
                            +"              <div class='row'>"
                            +"                  <div class='block' style='width:30%'>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")
                            +"                  </div>"
                            +"                  <div class='block'  style='width:20%'>"+(item.Dimension1Name==null?" ":"<span title='Dim1' class='' style='font-weight:bold'>"+item.Dimension1Name)+"</span><br />"
                            +"                   </div>"
                            +"                  <div class='block'  style='width:20%'>"+(item.Dimension2Name==null?" ":item.Dimension2Name)+"<br />"
                            +"                   </div>"
                            +"                  <div class='text-right block'  style='width:15%'>"+(item.Qty==null?" ":item.Qty.toFixed(item.UnitDecimalPlaces))+"<br />"
                            +"                   </div>"
                            +"                   <div class='block'  style='width:15%'>"+(item.UnitName==null?" ":item.UnitName)
                            +"                   </div>"
                            +"              </div>"
                            +"          </div>"
                            +"      <div class='block'  style='width:5%'><a class='glyphicon glyphicon-trash icon-Cus-Size' delete='' href='/JobReceiveLine/EditByProduct/"+item.JobReceiveByProductId+"'></a>"
                            +"      </div>"
                            +"  </div>"
                            +"<hr style='margin-top:0px;margin-bottom:0px'/>";
                        QtyCount+=item.Qty;
                        if(srno!=1)
                        {
                            if(item.UnitName==prevunit && unit!=false)
                            {}
                            else
                            {unit=false;}
                        }

                        if(decimal- parseInt(item.UnitDecimalPlaces) < 0){decimal=item.UnitDecimalPlaces;}
                        srno++;
                        prevunit=item.UnitName;
                    });
                    row+="<div class='row tfooter' style='padding-top:10px;margin-left:0px;margin-right:0px'>"
                        +"  <div class='block' style='width:5%'>"
                        +"  </div>"
                        +"  <div class='block' style='width:90%'>"
                        +"      <div class='row'> "
                        +"          <div class='block'  style='width:30%'><strong>Total</strong></div>"
                        +"          <div class='block' style='width:20%'>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:20%'><strong>"
                        +               "</strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:15%'><strong>"
                        +              (QtyCount.toFixed(decimal))+"</strong>"
                        +"          </div>"
                        +"          <div class='block' style='width:15%'><strong>"
                        +               ((unit==true)?prevunit:"")+"</strong>"
                        +"          </div>"
                        +"      </div>"
                        +"  </div>"
                        +"  <div class='block'  style='width:5%'>"
                        +"  </div>"
                        +"</div>"
                }
                else
                {
                    ;
                }
                $("#gbodybyproducts").html(row);

            },
            error: function (result) {
                alert("Error");
            }
        });
    };

</script>


@if ((ViewBag.Mode != "Add") && (ViewBag.Mode != "Edit"))
{
<script type="text/javascript">

    RemoveFields();

    function RemoveFields(){
        //Disabling input fields
        $(':input:not(:submit,#IsContinue)').attr('disabled','disabled');

        //Removing all the events from the newly created lines
        $('#gbody').unbind();

        //Removing Add New Row ActionLink
        $('a#btnCreate').parents('h5')[0].remove();
        $('a#btnCreateBYP').parents('h5')[0].remove();
        if($('a#btnCreatePO').length)
            $('a#btnCreatePO').parents('h5')[0].remove();


        //Preventing the click event on newly created elements
        $(document).on('click','#gbody a',function(event){
            event.preventDefault();
        })
        //Removing the action link from the form so that the request will be redirected to the Submit function in the controller instead of the hardcoded path
        $('form:last').prop('action','');
    }


</script>
}

@if (Model.Status == (int)ActivityTypeContants.Modified && (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue"))
{
<script type="text/javascript">

    var href = '/ActivityLog/LogEditReason'

    $(':submit').bind('click', function () {
        $('#myModalContent').load(href, function () {

            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });

        return false;
    })

    function bindForm1(dialog) {

        $('#modformr', dialog).submit(function () {

            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');

                        $(':submit').unbind();

                        $('input[name="UserRemark"]').val(result.UserRemark);

                        $(':submit[name="Command:Submit"]').trigger('click');

                    } else {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                }
            });
            return false;
        });

    }

</script>
}
@if (ViewBag.transactionType != null && (ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "approveContinue"))
{
<script type="text/javascript">
    CreateTrasitionEffectForSubmit();

    function CreateTrasitionEffectForSubmit() {

        //$('body').find('.container.body-content > div.row ').wrap("<div class='animsition' data-animsition-in='fade-in-right-lg' data-animsition-out='fade-out-left-lg' style='animation-duration: 1.5s; -webkit-animation-duration: 1.5s; opacity: 0;'> </div>");

        $('body').find('form').filter(":last").wrapInner("<div class='animsition' data-animsition-in='fade-in-right-lg' data-animsition-out='fade-out-left-lg' style='animation-duration: 1.5s; -webkit-animation-duration: 1.5s; opacity: 0;'> </div>");

        var script = document.createElement('script');

        script.setAttribute('type', 'text/javascript');

        script.text = " $(document).ready(function () {$('.animsition').animsition().one('animsition.start', function () {}).one('animsition.end', function () {$(this).find('.animsition-child').addClass('zoom-in').css({'opacity': 1});})});";

        $('body').append(script);

    }

</script>
}