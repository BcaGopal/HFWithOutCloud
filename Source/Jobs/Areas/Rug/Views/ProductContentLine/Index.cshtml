@model IQueryable<Surya.India.Model.ViewModels.SaleOrderLineIndexViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h4>
            <span style="font-family: Calibri,sans-serif,Verdana">Sale Order Line(Order No:@ViewBag.DocNo)</span>
        </h4>
        <hr style="margin-top:0px;margin-bottom:0px" />
        <div class="panel-info">
            <span style="font-family: Calibri,sans-serif,Verdana;font-size:large;">
                <u> @Html.ActionLink("Create", "Create", new { Id = @ViewBag.SaleOrderHeaderId }, new { @class = "modal-link" })</u>&nbsp;|
            </span>
            <span style="font-family: Calibri,sans-serif,Verdana;font-size:large;">
                <u> @Html.ActionLink("Back to List", "Index", "SaleOrderHeader", null, new { @class = "modal-link" })</u>
            </span>

        </div>
    </div>
    <div class="panel-info" style="padding-left:5px;padding-top:2px">

        @Html.Grid(Model).Columns(columns =>
           {
               columns.Add(foo => foo.SaleOrderLineId, true);
               columns.Add(foo => foo.ProductName).Titled("Product").Sortable(true).Filterable(true);
               columns.Add(foo => foo.Qty).Sortable(true).Titled("Qty").Filterable(true);
               columns.Add(m => m.DeliveryUnitId).Sortable(true).Filterable(true).Titled("Delivery Unit");
               columns.Add(m => m.DeliveryQty).Sortable(true).Filterable(true).Titled("Delivery Qty");
               columns.Add(m => m.Rate).Sortable(true).Filterable(true).Titled("Rate");                                         
               columns.Add(foo => foo.Amount).Sortable(true).Titled("Amount").Filterable(true);
               columns.Add(m => m.DueDate).Sortable(true).Filterable(true).Titled("Due Date").Format("{0:dd/MMM/yyyy}");
               columns.Add().Encoded(false).Sanitized(false).RenderValueAs(d => @Html.ActionLink(" ", "Edit", "SaleOrderLine", new { id = d.SaleOrderLineId }, new { @class = "rowEditBlue", @title = "Edit", @data_toggle = "tooltip" })).SetWidth(20);
               columns.Add().Encoded(false).Sanitized(false).RenderValueAs(d => @Html.ActionLink(" ", "Delete", "SaleOrderLine", new { id = d.SaleOrderLineId }, new { @class = "rowDeleteBlue", @title = "Delete", @data_toggle = "tooltip" })).SetWidth(20);
           }).WithPaging(25).EmptyText("No records found.")
    </div>
</div>