@model Model.ViewModels.SaleInvoiceHeaderIndexViewModel
@using Core.Common

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("HeaderPost", "SaleInvoiceHeader", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.SaleInvoiceHeaderId)
    @Html.HiddenFor(m => m.SaleDispatchHeaderId)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.CreatedDate)
    @Html.HiddenFor(m => m.BaleNoSeries)
    @Html.HiddenFor(m => m.DocTypeId)

    <div class="panel panel-default">
        <div class="panel-heading">
            @CustomHelpers.RenderResHeaderInfo(ViewBag.transactionType, (int?)ViewBag.PendingToSubmit, (int?)ViewBag.PendingToReview, ViewBag.Name)
            @*@if (ViewBag.transactionType == "submit")
            {<h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Submit @ViewBag.Name</span>
                <input type="submit" value="Submit" name="Command:Submit" class="btn btn-primary right" style="width: 90px; background-color: #2980b9" />
            </h3>
            }
            else if (ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue")
            {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> Review @ViewBag.Name</span>
                <button type="submit" name="Command:Review" class="btn btn-primary right" style="margin-left:5px" id="ReviewContinue">Review & Next<span class='badge'>@(ViewBag.PendingToReview != 0 ? ViewBag.PendingToReview : "")</span></button>
                <button type="submit" class="btn btn-primary right" name="Command:Review">Review</button>
                <input type="hidden" id="IsContinue" name="IsContinue" value="" />
            </h3>
            }
            else if (ViewBag.transactionType == "detail")
            {
                <h3 style="border-bottom:1px solid #e1dada;padding-bottom:10px;">
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
                </h3>
            }
            else
            {
                <h3>
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                </h3>
            }*@
            <hr style="margin-top: 5px; margin-bottom: 5px; border-top: 1px solid #d8d5d5" />
            @{
                string EditAction = "";
                if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                {
                    EditAction = "Modify";
                }
                else if ((Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified))
                {
                    EditAction = "ModifyAfter_Submit";
                }
                else
                {
                    EditAction = "DetailInformation";
                }
            }
            <div class="panel-info">
                <div class="btn-group">
                    @Html.ActionLink(" ", "ChooseType", "SaleInvoiceHeader", new { @id = ViewBag.id }, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip", @data_modal = "" })
                    @Html.ActionLink(" ", EditAction, "SaleInvoiceHeader", new { @id = Model.SaleInvoiceHeaderId, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-edit", @title = "Edit", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Print", "SaleInvoiceHeader", null, new { @class = "cbtn btn-circle glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecord", @data_modal = "" })
                    @Html.ActionLink(" ", "PrevPage", "SaleInvoiceHeader", new { id = @Model.SaleInvoiceHeaderId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "SaleInvoiceHeader", new { id = @Model.SaleInvoiceHeaderId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "SaleInvoiceHeader", new { @id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
                </div>
                <div class="btn-group">
                    <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle" aria-expanded="false" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
                    </a>
                    <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">

                        <li><a id="DocHistory" data-modal="" href="@Url.Action("GetHistory", "LogHistory", new { Ids = Model.SaleInvoiceHeaderId, DocTypeId = Model.DocTypeId })"><span class="glyphicon glyphicon-user"> </span>&nbsp;&nbsp;History</a></li>
                        <li><a href="@Url.Action("Email", "SaleInvoiceHeader")"><span class="glyphicon glyphicon-envelope"> </span>&nbsp;&nbsp;Email</a></li>
                        <li role="separator" class="divider"></li>
                        <li><a target="_blank" href="@Url.Action("Report", "SaleInvoiceHeader", new { @ViewBag.id })"><span class="glyphicon glyphicon-stats"> </span>&nbsp;&nbsp;Report</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)



                <div role="tabpanel">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#InvoiceDetail" aria-controls="InvoiceDetail" role="tab" data-toggle="tab">Invoice Detail</a></li>
                        <li role="presentation"><a href="#OtherDetail" aria-controls="OtherDetail" role="tab" data-toggle="tab">Other Detail</a></li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane fade in active" id="InvoiceDetail">

                            <div>
                                <h4 class="col-md-12 black">
                                    <span class="glyphicon glyphicon-align-justify"></span>
                                    1.Document Details
                                </h4>
                                <div>
                                    <div>
                                        <div class="col-md-6">
                                            <div class="form-group" style="margin-top:15px">
                                                @Html.LabelFor(model => model.DocNo, "Invoice No", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-md-7 col-sm-10">
                                                    @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control col-xs-6 required" })
                                                    @Html.ValidationMessageFor(m => m.DocNo)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group" style="margin-top:15px">
                                                @Html.LabelFor(model => model.DocDate, "Invoice Date", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-md-7 col-sm-10">
                                                    @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                                    @Html.ValidationMessageFor(model => model.DocDate)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <hr style="margin-bottom:0px" />
                            <div>
                                <h4 class="col-md-12 black">
                                    <span class="glyphicon glyphicon-shopping-cart"></span>
                                    2.Buyer Details
                                </h4>
                                <div>
                                    <div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BillToBuyerId, "Bill To Buyer", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-md-7 col-sm-10">
                                                    @Html.TextBoxFor(m => m.BillToBuyerId, new { @class = "form-control col-xs-6 height required" })
                                                    @Html.ValidationMessageFor(model => model.BillToBuyerId)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.SaleToBuyerId, "Sale To Buyer", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-md-7 col-sm-10">
                                                    @Html.TextBoxFor(m => m.SaleToBuyerId, new { @class = "form-control col-xs-6 required    " })
                                                    @Html.ValidationMessageFor(model => model.SaleToBuyerId)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ShipToPartyAddress, "Shipping Address", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-md-7 col-sm-10">
                                                    @Html.TextAreaFor(m => m.ShipToPartyAddress, new { @class = "form-control col-xs-6 " })
                                                    @Html.ValidationMessageFor(model => model.ShipToPartyAddress)
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CurrencyId, "Currency", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-md-7 col-sm-10">
                                                    @Html.DropDownListFor(m => m.CurrencyId, new SelectList(ViewBag.CurrencyList as System.Collections.IEnumerable, "ID", "Name"), new { @class = "form-control col-xs-6 height required" })
                                                    @Html.ValidationMessageFor(model => model.CurrencyId)
                                                </div>
                                            </div>
                                        </div>
                                    </div>



                                    <div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ExchangeRate, "Exchange Rate", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-md-7 col-sm-10">
                                                    @Html.TextAreaFor(m => m.ExchangeRate, new { @class = "form-control col-xs-6 height " })
                                                    @Html.ValidationMessageFor(model => model.ExchangeRate)
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </div>

                        </div>


                        <div role="tabpanel" class="tab-pane fade" id="OtherDetail">


                            <hr style="margin-bottom:0px" />
                            <div class="row">
                                <div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.DeliveryTermsId, "Delivery Terms", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.DropDownListFor(m => m.DeliveryTermsId, new SelectList(ViewBag.DeliveryTermsList as System.Collections.IEnumerable, "DeliveryTermsId", "DeliveryTermsName"), new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.DeliveryTermsId)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ShipMethodId, "Ship Method", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.DropDownListFor(m => m.ShipMethodId, new SelectList(ViewBag.ShipMethodList as System.Collections.IEnumerable, "ShipMethodId", "ShipMethodName"), new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.ShipMethodId)
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BlNo, "B.L.No", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.BlNo, new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.BlNo)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.BlDate, "B.L. Date", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.BlDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                                    @Html.ValidationMessageFor(model => model.BlDate)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PrivateMark, "Private Mark", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.PrivateMark, new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.PrivateMark)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PortOfLoading, "Port Of Loading", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.PortOfLoading, new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.PortOfLoading)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.DestinationPort, "Destination Port", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.DestinationPort, new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.DestinationPort)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.FinalPlaceOfDelivery, "Final Place Of Delivery", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.FinalPlaceOfDelivery, new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.FinalPlaceOfDelivery)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PreCarriageBy, "Pre Carriage By", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.PreCarriageBy, new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.PreCarriageBy)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PlaceOfPreCarriage, "Place Of Pre Carriage", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.PlaceOfPreCarriage, new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.PlaceOfPreCarriage)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CircularNo, "Circular No", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.CircularNo, new { @class = "form-control col-xs-6 height" })
                                                    @Html.ValidationMessageFor(model => model.CircularNo)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CircularDate, "Circular Date", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.CircularDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                                    @Html.ValidationMessageFor(model => model.CircularDate)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.OrderNo, "Order No", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.OrderNo, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.OrderNo)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.OrderDate, "Order Date", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.OrderDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                                    @Html.ValidationMessageFor(model => model.OrderDate)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.KindsOfackages, "Kinds Of Packages", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.KindsOfackages, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.KindsOfackages)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.InvoiceAmount, "Invoice Amount", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.InvoiceAmount, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.InvoiceAmount)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.FreightRemark, "Freight Remark", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.FreightRemark, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.FreightRemark)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Freight, "Freight", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.Freight, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.Freight)
                                                </div>
                                            </div>
                                        </div>


                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.InsuranceRemark, "Insurance Remark", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.InsuranceRemark, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.InsuranceRemark)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Insurance, "Insurance", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.Insurance, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.Insurance)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.VehicleNo, "Vehicle No", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.VehicleNo)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Deduction, "Discount", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.Deduction, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.Deduction)
                                                </div>
                                            </div>
                                        </div>


                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.OtherRefrence, "Other Refrence", new { @class = "control-label col-xs-2" })
                                                <div class="col-xs-9">
                                                    @Html.TextBoxFor(m => m.OtherRefrence, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.OtherRefrence)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.TermsOfSale, "Terms Of Sale", new { @class = "control-label col-xs-2" })
                                                <div class="col-xs-9">
                                                    @Html.TextAreaFor(m => m.TermsOfSale, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.TermsOfSale)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NotifyParty, "Notify Party", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.NotifyParty, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.NotifyParty)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PackingMaterialDescription, "Packing Material Description", new { @class = "control-label col-xs-4" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.PackingMaterialDescription, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.PackingMaterialDescription)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.DescriptionOfGoods, "Description Of Goods", new { @class = "control-label col-xs-2" })
                                                <div class="col-xs-9">
                                                    @Html.TextAreaFor(m => m.DescriptionOfGoods, 8, 3, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.DescriptionOfGoods)
                                                </div>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Compositions, "Compositions", new { @class = "control-label col-xs-2" })
                                                <div class="col-xs-9">
                                                    @Html.TextAreaFor(m => m.Compositions, 8, 3, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.Compositions)
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-xs-2" })
                                                <div class="col-xs-9">
                                                    @Html.TextAreaFor(m => m.Remark, 3, 3, new { @class = "form-control col-xs-6" })
                                                    @Html.ValidationMessageFor(model => model.Remark)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>














                <hr />
                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        3.Products Details
                    </h4>
                </div>

                <div class="panel-info">
                    <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        @*@Html.ActionLink("Add New Row ", "_Create", "SaleInvoiceLine", new { id = @Model.SaleInvoiceHeaderId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })/*@
                        @Html.ActionLink("Fill Products ", "FillProducts", "SaleInvoiceLine", new { id = @Model.SaleInvoiceHeaderId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })/
                        @Html.ActionLink("Update Rates", "UpdateRates", "SaleInvoiceLine", new { id = @Model.SaleInvoiceHeaderId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })/
                        @Html.ActionLink("Update Rates Design Wise", "UpdateRatesDesignWise", "SaleInvoiceLine", new { id = @Model.SaleInvoiceHeaderId }, new { id = "btnCreate", @class = "toolbar", @title = "Update Rates Design Wise", @data_toggle = "tooltip" })
                    </h5>
                </div>
                <div style="padding-right:15px">

                    <div class="panel panel-default" id="grid">
                        <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                            <div class="row grid-head">
                                <div class='text-left block' style='width: 5%; '>
                                    Srl.
                                </div>
                                <div class="block" style="width: 90%; ">
                                    <div class="row">
                                        @*ProductInfo*@
                                        <div class="block" style="width: 20%; ">
                                            Product Name
                                        </div>
                                        @*Bale No*@
                                        <div class="block" style="width: 10%;">
                                            Bale No
                                        </div>
                                        @*Invoice Group*@
                                        <div class="block" style="width: 25%; ">
                                            Invoice Group
                                        </div>
                                        @*Qty*@
                                        <div class="block text-right" style="width: 10%; ">
                                            Qty
                                        </div>
                                        @*Rate*@
                                        <div class="block text-right" style="width: 10%; ">
                                            Deal Qty
                                        </div>
                                        <div class="block text-right" style="width: 10%; ">
                                            Rate
                                        </div>
                                        @*Amount*@
                                        <div class="block text-right" style="width: 10%; ">
                                            Amount
                                        </div>
                                    </div>
                                </div>
                                <div class="block" style="width: 5%; ">

                                </div>
                            </div>

                        </div>
                        <div class="panel-info" id="gbody">


                        </div>
                    </div>

                </div>

                @*<hr />*@

                @*<div class="form-group">
                        <div class="col-md-offset-2 col-md-8">
                            <input type="submit" value="Next" class="btn btn-primary btn-sm CurveBorder height" id="submit" style=" border-color: #606264" />

                                @Html.ActionLink("Back", "Index", "SaleInvoiceHeader", new { @class = "btn btn-primary btn-sm col-md-offset-1 CurveBorder ActionLinkPadding CustomCss height" })

                        </div>
                    </div>*@
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    CustomSelectFunction($("#BillToBuyerId"), '/ComboHelpList/GetBuyers', '/ComboHelpList/SetSingleBuyer', ' ', false, 0);
    CustomSelectFunction($("#SaleToBuyerId"), '/ComboHelpList/GetBuyers', '/ComboHelpList/SetSingleBuyer', ' ', false, 0);

    var IsSaved=false;
    var ValidationCount=0;

    $('form').submit(function(event){

        if(!IsSaved)
        {
            if(!ValidateData())
            {
                return false;
            }
            IsSaved=true;
            return IsSaved;
        }
        else
        {
            return false;
        }


    });


    function ValidateData() {
        var DocId=@Model.SaleInvoiceHeaderId;
        var TempValue;
        var ValidationMessage="";



        //Checking for dulicate key value
        if(DocId<=0)
        {
            TempValue= $('#DocNo').DuplicateCheckForCreate({ name: 'SaleInvoiceHeader', value: $('#DocNo').val(), doctype: 0 });
            if (TempValue){ ValidationMessage=$('#DocNo').val() + " already exist <br />";}
        }
        else
        {
            test = $('#DocNo').DuplicateCheckForEdit({ name: 'SaleInvoiceHeader', value: $('#DocNo').val(), doctype: 0,headerId:DocId });
            if (TempValue) {ValidationMessage+=$('#DocNo').val() + " already exist <br />";}
        }
        if(TempValue)
        {
            if($('#validationerrormsg').length==0){
                $('.panel-info').filter(':eq(1)').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
            else
            {
                $('#validationerrormsg').html(ValidationMessage);
            }
        }
        return  (ValidationMessage=="");

    }


    $('#BillToBuyerId').change(function () {

        var cid = $("#BillToBuyerId").val();
        var cdata = $('#BillToBuyerId').select2('data').text;
        $("#SaleToBuyerId").select2('data', { id: cid, text: cdata });


    });

</script>

<script type="text/javascript">
    var form_clean;
    $(document).ready(function () {

        //Calling the function to load the table data/ Line information
        LoadProducts();


        form_clean = $("form").serialize();


        //For maintaining the data change on the form
        //To enable of disable save button based on the data changed
        $("input,select").change(function () {
            var form_dirty = $("form").serialize();
            if (form_clean != form_dirty) {
                $("#submit").removeAttr('disabled');
            }
            else
            {
                // alert('same form');
                $("#submit").attr({ "disabled": "disabled" })
            }
        });
    });


    var id=@Model.SaleInvoiceHeaderId;
    if(id==null||id==0)
    {
        $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
    }



    //Reloading the table contents on modal hide
    $('#myModal').on('hidden.bs.modal', function () {
        LoadProducts();
    });


    //To focus on the first element on modal load
    $('#myModal').on('shown.bs.modal', function () {
        $("#ProductId").select2("focus");
    });

    function LoadProducts() {
        @*var groupId=@Model.SaleInvoiceHeaderId;
        var link="/SaleInvoiceLine/Index/"+groupId;*@
        var QtyCount=0;
        var DealQtyCount=0;
        var AmountCount=0;
        var unit=true;
        var prevunit;
        var dealunit=true;
        var prevdealunit;
        var decimal=0;
        var dealdecimal=0;

        var status='@Model.Status';
        var LineEditUrl;
        var LineDeleteUrl;
        if(status==StatusContstantsEnum.Drafted)
        {
            LineEditUrl="/Rug/SaleInvoiceLine/_ModifyLine/";
            LineDeleteUrl="/Rug/SaleInvoiceLine/_DeleteLine/";
        }
        else if(status==StatusContstantsEnum.Submitted || status == StatusContstantsEnum.Modified || status == StatusContstantsEnum.ModificationSubmitted)
        {
            LineEditUrl="/Rug/SaleInvoiceLine/_ModifyLineAfterSubmit/";
            LineDeleteUrl="/Rug/SaleInvoiceLine/_DeleteLine_AfterSubmit/";
        }
        else
        {
            LineEditUrl="/Rug/SaleInvoiceLine/_Detail/";
            LineDeleteUrl="/Rug/SaleInvoiceLine/_Detail/";
        }


        var row = ""
        var srno=1;

        var Data=[];


        var i=0;
        while(true)
        {
            var RecordChunks=LoadRecordChunks(i);
            i++;
            Data.push(RecordChunks.data);
            if(!RecordChunks.Pending)
                break;
        }

        if(Data.length!=0)
        {
            $.each(Data, function (Chunksindex, Chunksitem) {
                $.each(Chunksitem, function (index, item) {
                    row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'><div class='row-index block'  style='width:5%'>"+srno+"<input type='hidden' class='id' value='"+item.SaleInvoiceLineId+"' /></div><div class='block' style='width: 90%; '><div class='row'><div class='block' style='width: 20%; '>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")+"<br />"+(item.Specification==null?" ":item.Specification)+"<div>"+((item.SaleOrderHeaderDocNo==null)?" ":"<h4><span title='SaleOrder' class='label label-danger' style='font-weight:bold'>"+item.SaleOrderHeaderDocNo+"</span></h4>")+"<br />"+(item.ProductUidName==null?" ":"<strong>"+item.ProductUidName+"</strong>")+"</div></div> <div class='block' style='width: 10%; '>"+(item.BaleNo==null?" ":item.BaleNo)+"</div>   <div class='block' style='width: 25%; '>"+(item.ProductInvoiceGroupName==null?" ":item.ProductInvoiceGroupName)+"</div>     <div class='block text-right' style='width: 10%; '>"+(item.Qty==null?" ":item.Qty)+"<br /> <div><small>"+(item.UnitId==null?" ":item.UnitId)+"</small></div>  </div>  <div class='block text-right' style='width: 10%; '>"+(item.DealQty==null?" ":item.DealQty)+"<br /> <div><small>"+(item.DealUnitId==null?" ":item.DealUnitId)+"</small></div>  </div> <div class='block text-right' style='width: 10%; '>"+(item.Rate==null?" ":item.Rate.toFixed(2))+"</div><div class='block text-right' style='width: 10%; '>"+(item.Amount==null?" ":item.Amount.toFixed(2))+"</div></div></div><div class='block' style='width: 5%; '><a class='glyphicon glyphicon-trash icon-Cus-Size' delete='' href='"+LineDeleteUrl+item.SaleInvoiceLineId+"'></a><a  edit='' href='"+LineEditUrl+item.SaleInvoiceLineId+"'></a></div></div><hr style='margin-top:0px;margin-bottom:0px'/></div>";
                    QtyCount+=item.Qty;
                    DealQtyCount+=item.DealQty;
                    AmountCount+=item.Amount;
                    if(srno!=1)
                    {
                        if(item.UnitId==prevunit)
                        {}
                        else
                        {unit=false;}

                        if(item.DealUnitId==prevdealunit)
                        {}
                        else
                        {dealunit=false;}

                    }
                    if(decimal<item.unitDecimalPlaces){decimal=item.unitDecimalPlaces;}
                    if(dealdecimal < item.DealUnitDecimalPlaces){dealdecimal=item.DealUnitDecimalPlaces;}
                    srno++;
                    prevunit=item.UnitId;
                    prevdealunit=item.DealUnitId;
                });
            });
            row+="<div class='row tfooter' style='padding-top:10px;margin-left:0px;margin-right:0px'><div class='block'  style='width:5%'></div><div class='block'  style='width:90%'><div class='row'>  <div class='block'  style='width:20%'><strong>Total</strong></div><div class='block'  style='width:10%'></div><div class='block'  style='width:25%'></div><div class='block text-right'  style='width:10%'><strong>"+ ((unit==true)?QtyCount.toFixed(decimal)+"<br /><small>"+prevunit+"</small>":QtyCount.toFixed(decimal))+"</strong></div><div class='block text-right'  style='width:10%'><strong>"+ ((unit==true)?DealQtyCount.toFixed(dealdecimal)+"<br /><small>"+prevdealunit+"</small>":DealQtyCount.toFixed(dealdecimal))+"</strong></div><div class='block'  style='width:10%'></div><div class='block text-right'  style='width:10%'><strong>"+AmountCount.toFixed(2)+"</strong></div></div></div><div class='block'  style='width:5%'></div></div>"

           // $('#DocNo').attr('readonly','true');
        }
        else
        {

        }
        //$("#header").html(head);
        $("#gbody").html(row);

    }


    function LoadRecordChunks(Iter)
    {
        var groupId=@Model.SaleInvoiceHeaderId;
        var link="/Rug/SaleInvoiceLine/Index/";
        var DAta;
        $.ajax({
            async:false,
            url: link,
            type: "GET",
            data:{Id:groupId,Iter:Iter},
            success: function (data) {
                DAta= data;
            },
            error: function (result) {
                alert("Error");
            }
        });
        return DAta;
    }


    //For Populating Modal PopUp on DoubleClick Of Row
    $('#gbody').on("dblclick",'.grid-body',function(){
        var text = $(this).find(".id").val();
        var editurl=$(this).find('a[edit]').attr('href');
        $('#myModalContent').load(editurl, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
    });

    $('#gbody').on("click",'.grid-body',function(){

    });

    //For Handling Modal PopUp on Clicking Delete Icon
    $('#gbody').on("click",'a[delete]', function (e) {
        $('#myModalContent').load(this.href, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
        return false;
    });


    //For posting the data through ajax and render the contents sent back from the server
    function bindForm1(dialog) {
        //alert("binding");
        $('form', dialog).submit(function () {
            //alert(this.action);
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //Refresh
                        //location.reload();
                        //alert('Data Saved');
                    }else if(!result.success)
                    {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                    else {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                }
            });
            return false;
        });

    }

    $(document).ready(function(){
        enableModalTransitions();
    })

    $('a#PrintRecord').click(function (e) {
        var $row = $('table.grid-table .grid-row.grid-row-selected');
        var editiiid = @Model.SaleInvoiceHeaderId;
        //var url = '/SaleInvoiceHeader/Print/' + editiiid;
        var url = '@Url.Action("Print", "SaleInvoiceHeader")' + "/" + editiiid;
        $(this).attr('href', url);
        return;
    })

</script>

@if ((ViewBag.Mode != "Add") && (ViewBag.Mode != "Edit"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            DisablePageNavigation();
        })

        //RemoveFields();

        //function RemoveFields(){
        //    //Disabling input fields
        //    $(':input:not(:submit)').attr('disabled','disabled');

        //    //Removing all the events from the newly created lines
        //    $('#gbody').unbind();

        //    //Removing Add New Row ActionLink
        //    $('a#btnCreate').parents('h5')[0].remove();


        //    //Preventing the click event on newly created elements
        //    $(document).on('click','#gbody a',function(event){
        //        event.preventDefault();
        //    })
        //    //Removing the action link from the form so that the request will be redirected to the Submit function in the controller instead of the hardcoded path
        //    $('form:last').prop('action','');
        //}


    </script>
}

@if ((Model.Status == (int)ActivityTypeContants.Modified || Model.Status == (int)ActivityTypeContants.Submitted)
    && (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">

        var href = '/ActivityLog/LogEditReason';
        var $btnClicked;

        $(':submit').bind('click', function () {
            $btnClicked=$(this);
            $('#myModalContent').load(href, function () {

                $('#myModal').modal({
                    backdrop: 'static',
                    keyboard: true
                }, 'show');

                bindForm1(this);
            });

            return false;
        })

        function bindForm1(dialog) {

            $('#modformr', dialog).submit(function () {

                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            $('#myModal').modal('hide');

                            $(':submit').unbind();

                            $('input[name="UserRemark"]').val(result.UserRemark);

                            $btnClicked.trigger('click');

                        } else {
                            $('#myModalContent').html(result);
                            bindForm1();
                        }
                    }
                });
                return false;
            });

        }

    </script>
}