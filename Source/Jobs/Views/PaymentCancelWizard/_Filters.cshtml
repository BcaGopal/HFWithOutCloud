@model Model.ViewModels.PaymentCancelWizardFilterViewModel
@using Core.Common


<style type="text/css">
    .input-group[class*=col-]{
        float:left;
    }
</style>

<div class="modal-content">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Wizard Filters</span>
        </h3>
    </div>
    <div>
        @using (Html.BeginForm("_FilterPost", "JobInvoiceRateAmendmentWizard", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {


            <div class="form-horizontal modal-body">

                @Html.HiddenFor(m => m.ProcessId)
                @Html.HiddenFor(m => m.DocTypeId)

                <div class="row">
                   
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FromDate, "From Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-7">
                                        @Html.TextBoxFor(m => m.FromDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-7 required" })
                                        @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ToDate, "To Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-7">
                                        @Html.TextBoxFor(m => m.ToDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-7 required" })
                                        @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LedgerHeaderId, "DocNo", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-7">
                                        @Html.TextBoxFor(model => model.LedgerHeaderId, new { @class = "form-control col-xs-7 required" })
                                        @Html.ValidationMessageFor(model => model.LedgerHeaderId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LedgerAcCr, "LedgerAcCr", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-7">
                                        @Html.TextBoxFor(model => model.LedgerAcCr, new { @class = "form-control col-xs-7 required" })
                                        @Html.ValidationMessageFor(model => model.LedgerAcCr, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LedgerAcDr, "LedgerAcDr", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-7">
                                        @Html.TextBoxFor(model => model.LedgerAcDr, new { @class = "form-control col-xs-7 required" })
                                        @Html.ValidationMessageFor(model => model.LedgerAcDr, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CostCenter, "CostCenter", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-7">
                                        @Html.TextBoxFor(model => model.CostCenter, new { @class = "form-control col-xs-7 required",@readonly="true" })
                                        @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger" })
                                        <span id="status" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ChqNo, "ChqNo", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-7">
                                        @Html.TextBoxFor(model => model.ChqNo, new { @class = "form-control col-xs-7 required" })
                                        @Html.ValidationMessageFor(model => model.ChqNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Amount, "Amount", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-7">
                                        @Html.TextBoxFor(model => model.Amount, new { @class = "form-control col-xs-7 required" })
                                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            
                           
                        </div>
                    </div>
                </div>
               
                <hr style="margin-bottom:0px" />


                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">
                    <button class="btn custom" name="Command:Edit" type="submit"><h2 style="margin:0px" id="submit" title="Proceed"><span class="glyphicon glyphicon-arrow-right black"></span> </h2></button>
                </div>

            </div>

        }
    </div>
</div>


<script type="text/javascript">


    $(document).ready(function () {

        var DocId = $('#DocTypeId', '.modal-body').val();
        var ProcId = $('#ProcessId', '.modal-body').val();

        if(ProcId)
            CustomSelectFunction($("#LedgerHeaderId"), '/ComboHelpList/GetJobWorkersWithProcess', '/ComboHelpList/SetJobWorkers', 'Enter JobWorker', true, 1, ProcId);
        else
            CustomSelectFunction($("#LedgerHeaderId"), '/ComboHelpList/GetJobWorkers', '/ComboHelpList/SetJobWorkers', 'Enter JobWorker', true, 1);

        CustomSelectFunction($("#LedgerAcCr"), '/ComboHelpList/GetAccount', '/ComboHelpList/SetSingleAccount', 'Enter Account', true, 1, $('#DocTypeId').val());
        CustomSelectFunction($("#LedgerAcDr"), '/ComboHelpList/GetAccount', '/ComboHelpList/SetSingleAccount', 'Enter Account', true, 1, $('#DocTypeId').val());
        //CustomSelectFunction($("#CostCenter"), '/ComboHelpList/GetDimension2', '/ComboHelpList/SetSingleDimension2', 'Cost Center', true, 1);


    });

    $('.datepickerWithNFD').datepicker({
        format: 'dd/MM/yyyy',
        "setDate": new Date(),
        "autoclose": true,
        "endDate": new Date(),

    })


</script>