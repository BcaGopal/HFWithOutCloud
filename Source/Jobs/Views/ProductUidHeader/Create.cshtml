@model Model.ViewModel.ProductUidHeaderIndexViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("HeaderPost", "ProductUidHeader", FormMethod.Post, new { enctype = "multipart/form-data",id="HeaderForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ProductUidHeaderId)
    @Html.HiddenFor(m => m.GenDocTypeId)
    @Html.HiddenFor(m => m.PrintProductUidHeaderIds)

    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Product Uid Generation</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "ProductUidHeader", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "ProductUidHeader", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrintSeries", "ProductUidHeader", null, new { @class = "glyphicon glyphicon-print toolbar", @Id = "Print", @title = "Print", @data_toggle = "tooltip", target = "_blank" })
                    <span class="badge " id="PendingToPrint" style="background-color:red;color:white"></span>
                    @Html.ActionLink(" ", "Email", "ProductUidHeader", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "ProductUidHeader", new { id = @Model.ProductUidHeaderId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "ProductUidHeader", new { id = @Model.ProductUidHeaderId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "ProductUidHeader", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Report", "ProductUidHeader", null, new { @class = "glyphicon glyphicon-th toolbar right", @title = "Report", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)

                <div class="row">
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Document Details
                    </h4>
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.GenDocDate, "Doc Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.GenDocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.GenDocDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.GenDocNo, "Doc No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.GenDocNo, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(m => m.GenDocNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GenPersonId, "Person", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.GenPersonId, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.GenPersonId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductId, "Product", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ProductId, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row" style='display:@(Model.ProductUidHeaderId == 0 ? "" : "none")'>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GodownId, "Godown", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.GodownId, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.GodownId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProcessId, "Process", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ProcessId, new { @class = "form-control col-xs-6 " })
                                        @Html.ValidationMessageFor(model => model.ProcessId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row" style='display:@(Model.ProductUidHeaderId == 0 ? "" : "none")'>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Qty, "Qty", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.Qty, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row" style='display:@(Model.ProductUidHeaderId == 0 ? "none" : "")'>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GenRemark, "Remark", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.GenRemark, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.GenRemark, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductUids, "Bar Codes", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextAreaFor(m => m.ProductUids, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.ProductUids, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>



                        @*<div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    @Html.ActionLink(" ", "Print", "PackingLine", new { id = @Model.ProductUidHeaderId }, new { @class = " glyphicon glyphicon-print left Print", @title = "Print", @style = "font-size:2.2em", @data_toggle = "tooltip", target = "_blank", id = "Print" })
                                    <span class="badge left" id="PendingToPrint" style="background-color:red;color:white"></span>
                                </div>
                            </div>
                        </div>*@
                    </div>
                 </div>
            </div>
        </div>
    </div>
}


<script type="text/javascript">

    $(document).ready(function () {
        //CustomSelectFunction($("#ProductId"), '/ComboHelpList/GetProducts', '/ComboHelpList/SetSingleProducts', '', false, 0);
        CustomSelectFunction($("#ProductId"), '/ComboHelpList/GetFinishedMaterialDivisionWise', '/ComboHelpList/SetSingleProducts', ' ', false, 0);
        CustomSelectFunction($("#GenPersonId"), '/ComboHelpList/GetPerson', '/ComboHelpList/SetSinglePerson', ' ', false, 0);
        CustomSelectFunction($("#GodownId"), '/ComboHelpList/GetGodown', '/ComboHelpList/SetSingleGodown', ' ', false, 0);
        CustomSelectFunction($("#ProcessId"), '/ComboHelpList/GetProcess', '/ComboHelpList/SetSingleProcess', ' ', false, 0);
    });
</script>

<script type="text/javascript">

    $("#DocNo").on("change", function () {
        $(this).DuplicateCheckForCreate({ name: 'ProductUidHeader', value: $(this).val(), doctype: $("#DocTypeId").val() });
    });

</script>

<script type="text/javascript">
    var form_clean;
    $(document).ready(function () {



        form_clean = $("form").serialize();


        //For maintaining the data change on the form
        //To enable of disable save button based on the data changed
        $("input,select").change(function () {
            var form_dirty = $("form").serialize();
            if (form_clean != form_dirty) {
                $("#submit").removeAttr('disabled');
            }
            else
            {
                // alert('same form');
                $("#submit").attr({ "disabled": "disabled" })
            }
        });

        $("#GenPersonId").select2("focus");
        AssignPendingToPrint();
        //AssignPendingToPrintProductUidHeaderIds();
        //alert($("#PrintProductUidHeaderIds").val());
        if ($("#PendingToPrint").text() != 0 && $("#PendingToPrint").text() != null)
        {
            $("#ProductId").select2("focus");
            AssignLastValues();
        }
    });


    var id=@Model.ProductUidHeaderId;
    if(id==null||id==0)
    {
        $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');

    }

    if(id !=null && id !=0)
    {
        $("#submit").attr({ "disabled": "disabled" })
    }








    //For posting the data through ajax and render the contents sent back from the server
    function bindForm1(dialog) {
        //alert("binding");
        $('form', dialog).submit(function () {
            //alert(this.action);
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //Refresh
                        //location.reload();
                        //alert('Data Saved');
                    }else if(!result.success)
                    {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                    else {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                }
            });
            return false;
        });

    }

    var IsSaved=false;

    $("#submit").click(function () {
        if(!IsSaved)
        {
            if(!ValidateData())
            {
                return false;
            }
            IsSaved=true;
            AssignLastValues();
            return IsSaved;
        }
        else
        {
            return false;
        }        
        
    });

    function ValidateData() {
        var ValidationMessage="";

        return  (ValidationMessage=="");

    }


    function AssignLastValues(){
        if ($("#ProductId").val() == null || $("#ProductId").val() == 0)
        {
            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("GetLastValues"))",
                data: { ProductUidHeaderId: $("#ProductUidHeaderId").val()},
            success: function (data) {
                if(data.length!=0)
                {
                    $("#GenPersonId").select2("data", { id: data[0].PersonId, text: data[0].PersonName });
                    $("#GodownId").select2("data", { id: data[0].GodownId, text: data[0].GodownName });
                    $("#ProcessId").select2("data", { id: data[0].ProcessId, text: data[0].ProcessName });
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve Last Values .' + thrownError);
                ProcessProgress.hide();
            }
        });
    }
    }

    function AssignPendingToPrint(){
        $.ajax({
            cache:false,
            async: false,
            type: "POST",
            url:"@(Url.Action("GetPendingToPrint"))",
            data:{ProductUidHeaderId:$('#ProductUidHeaderId').val()},
        success:function(data){
            $("#PendingToPrint").text(data);
        },
        error:function(xhr,ajaxOptions,thrownError){
            alert('Failed to Retrive Pending To Print Qty'+thrownError);
        }
    })
    }



    function AssignPendingToPrintProductUidHeaderIds(){
        $.ajax({
            cache:false,
            async: false,
            type: "POST",
            url:"@(Url.Action("GetPendingToPrintProductUidHeaderIds"))",
            data:{ProductUidHeaderId:$('#ProductUidHeaderId').val()},
            success:function(data){
                $("#PrintProductUidHeaderIds").val(data);
        },
        error:function(xhr,ajaxOptions,thrownError){
            alert('Failed to Retrive Pending To Print Qty'+thrownError);
        }
    })
    }


    //$("#Print").click(function () {
    //    $.ajax({
    //        cache:false,
    //        type: "POST",
    //        url:"/ProductUidHeader/DisposeSessionPrintVariable",
    //        data: { ProductUidHeaderId: $("#ProductUidHeaderId").val()},
    //        success:function(data){
    //            $("#PendingToPrint").text(0);
    //            //$("#PrintProductUidHeaderIds").text("");
    //                },
    //        error:function(xhr,ajaxOptions,thrownError){
    //            alert('Failed to Dispose Session Variables'+thrownError);
    //        }
    //    })
    //});


    $("#Print").click(function () {
        $("#PendingToPrint").text(0);
    });
        //AssignPendingToPrint();
        //AssignPendingToPrintProductUidHeaderIds()
        

</script>


@if ((ViewBag.Mode != "Add"))
{
    <script type="text/javascript">

        RemoveFields();

        function RemoveFields(){
            //Disabling input fields
            $(':input:not(:submit)').attr('disabled','disabled');

            //Removing all the events from the newly created lines
            $('#gbody').unbind();

            //Removing Add New Row ActionLink
            $('a#btnCreate').parents('h5')[0].remove();


            //Preventing the click event on newly created elements
            $(document).on('click','#Result a',function(event){
                event.preventDefault();
            })
            //Removing the action link from the form so that the request will be redirected to the Submit function in the controller instead of the hardcoded path
            $('form:last').prop('action','');
        }
    </script>
}