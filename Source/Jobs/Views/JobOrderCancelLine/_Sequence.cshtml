@model Model.ViewModel.BarCodeSequenceListViewModel
@using Core.Common

<style type="text/css">
    #tbody {
        height: 250px;
        overflow-y: scroll;
        width: 100%;
    }

    tbody td {
        padding: 2px 2px 2px 2px;
    }

    .textRight {
        text-align: right;
    }
    /*th div{
        position:absolute;
    }*/
</style>

<div class="modal-content">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Cancel Orders & Quantities</span>
        </h3>
    </div>
    <div>
        @using (Html.BeginForm("_SequencePost", "JobOrderCancelLine", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal modal-body">

                <div style="padding-right:15px">
                    <div class="row">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)

                            <div class="panel panel-default" id="grid">
                                <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                                    <div class="row grid-head">
                                        <div class="block text-left" style="width:5%">
                                            Srl.
                                        </div>
                                        <div class="block" style="width:92%">
                                            <div class="row">
                                                @*ProductInfo*@
                                                <div class="block" style="width:40%">
                                                    Product

                                                </div>
                                                <div class="block text-center" style="width:30%">
                                                   Qty
                                                </div>
                                                @*Qty*@
                                                <div class="block" style="width:30%">
                                                    First BarCode
                                                </div>
                                             

                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="panel-info" id="gbody" style="max-height:250px;overflow-y:scroll">

                                    @for (int i = 0; i < Model.BarCodeSequenceViewModel.Count(); i++)
                                    {                                       

                                        <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>


                                            @Html.HiddenFor(m => m.BarCodeSequenceViewModel[i].JobOrderCancelHeaderId)
                                            @Html.HiddenFor(m => m.BarCodeSequenceViewModel[i].JobOrderLineId, new { @class = "LineId" })
                                            @Html.HiddenFor(m => m.BarCodeSequenceViewModel[i].ProductName)
                                            @Html.HiddenFor(m => m.BarCodeSequenceViewModel[i].Qty)
                                            @Html.HiddenFor(m => m.BarCodeSequenceViewModel[i].BalanceQty)
                                            @Html.HiddenFor(m => m.BarCodeSequenceViewModel[i].ProductUidIdName, new { @class="UIDName"})


                                            <div class='block row-index' style='width:5%'>
                                                @(i + 1)
                                            </div>
                                            <div class='block pull-middle' style='width:94%'>
                                                <div class='row'>
                                                    <div class='block' style='width:40%'>
                                                        <strong>@Model.BarCodeSequenceViewModel[i].ProductName</strong>
                                                    </div>
                                                    <div class='block text-center' style='width:30%'>
                                                        @Model.BarCodeSequenceViewModel[i].Qty
                                                    </div>
                                                    <div class='block' style='width:30%'>
                                                        @Html.TextBoxFor(m => Model.BarCodeSequenceViewModel[i].FirstBarCode, new { @class = "form-control BarCodes" })
                                                    </div>                                                  


                                                </div>
                                            </div>

                                        </div>
                                        <hr style='margin-top:0px;margin-bottom:0px' />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">
                    <button class="btn custom" name="Command:Edit" type="submit" id="submit"><h2 style="margin:0px" title="Proceed"><span class="glyphicon glyphicon-floppy-disk black black"></span> </h2></button>
                </div>
            </div>
        }
    </div>
</div>



<script type="text/javascript">

    $('.BarCodes').select2({
        minimumInputLength: 0,
        multiple: false,
        placeholder: "Select a BarCode",
        ajax: {
            url: function () { return '/JobOrderCancelLine/GetBarCodes/' + $(this).closest('div.row.crow').find('.LineId').val(); },
            dataType: 'json',
            type: "GET",
            quietMillis: 500,
            data: function (term) {
                return {
                    term: term,
                };
            },
            results: function (data) {
                return {
                    results: $.map(data, function (item) {
                        return {
                            text: item.PropFirst,
                            id: item.Id
                        }
                    })

                };
            }
        },
        initSelection: function (element, callback) {

            var xval = element.val();
            if (xval != 0) {
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: '/ComboHelpList/SetSingleProductUids',
                    data: { Ids: element.val() },
                    success: function (data) {
                        callback(data);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to Retrive Qty' + thrownError);
                    }
                })
            }
            //callback([{ id: "1", text: "arpit" }, { id: "2", text: "akash" }]);
        }

    });


    $(':submit').click(function () {

        $('.row.crow.grid-body', '.modal-body').each(function () {

            var elem = $(this).find('.BarCodes:first');
            var UidName = $(this).find('.UIDName:first');
            $(UidName).val($(elem).select2('data').text);
        })
        return;

    })

    $(document).ready(function () {
        var IsSaved = false;
        var ValidationCount = 0;

        $('#modform').bind('submit', function (event) {

            if (!IsSaved) {
                if (!ValidateData()) {
                    return false;
                }
                IsSaved = true;
                $('button:submit').attr('disabled', 'disabled');
                return IsSaved;
            }
            else {
                return false;
            }


        });

        function ValidateData() {
            var ValidationMessage = "";

            //Client Side Validaion.....

            return (ValidationMessage == "");

        }
    });



</script>