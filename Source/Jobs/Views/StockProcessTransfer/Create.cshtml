@model Model.ViewModel.StockHeaderViewModel
@using Core.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>


@using (Html.BeginForm("Post", "StockProcessTransfer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.StockHeaderId)
    @Html.HiddenFor(m => m.DocTypeId)
    @Html.HiddenFor(m => m.ProcessId)
    @Html.HiddenFor(m => m.CreatedDate)
    @Html.HiddenFor(m => m.StockHeaderSettings.ProcessId)
    @Html.HiddenFor(m => m.StockHeaderSettings.isPostedInStockProcess)


    <div class="panel panel-default">
        <div class="panel-heading">

            @CustomHelpers.RenderHeaderInfo(ViewBag.transactionType, (int?)ViewBag.PendingToSubmit, (int?)ViewBag.PendingToReview, ViewBag.Name)

            @*@if (ViewBag.transactionType == "submit")
            {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Submit @ViewBag.Name</span>
                <input type="submit" value="Submit" name="Command:Submit" class="btn btn-primary right" style="width: 90px; background-color: #2980b9" />
            </h3>}
            else if (ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue")
            {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> Review @ViewBag.Name</span>
                <button type="submit" class="btn btn-primary right" name="Command:Review">Review</button>
                <input type="hidden" id="IsContinue" name="IsContinue" value="" />
            </h3>}
            else if (ViewBag.transactionType == "detail")
            {
                <h3>
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>
                </h3>
            }
            else
            {
                <h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                </h3>
            }*@

            @Html.ActionLink("For Transfer", "_ForProcessTransfer", "StockProcessTransfer", new { id = @Model.StockHeaderId, sid = @Model.PersonId, ProcessId = Model.ProcessId, CostCenterId = Model.CostCenterId }, new { data_modal = "", id = "btnCreateF", @class = "btn btn-primary borderradii", @title = "For Indent", @data_toggle = "tooltip", @data_detailDeleted = "true" })

            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                 <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "StockProcessTransfer", new { @id = ViewBag.id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "GeneratePrints", "StockProcessTransfer", new { Ids = Model.StockHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", id = "PrintRecordC" })
                    @Html.ActionLink(" ", "PrevPage", "StockProcessTransfer", new { id = @Model.StockHeaderId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "StockProcessTransfer", new { id = @Model.StockHeaderId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "StockProcessTransfer", new { id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </div>
                <div class="btn-group">
                    <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle"   title="More Option"  aria-expanded="false" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
                    </a>
                    <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">                       
                        <li><a id="DocHistory" data-modal="" href="@Url.Action("GetHistory", "LogHistory", new { Ids = Model.StockHeaderId, DocTypeId = Model.DocTypeId })"><span class="glyphicon glyphicon-user"> </span> History</a></li>
                        <li><a href="@Url.Action("Email", "StockProcessTransfer")"><span class="glyphicon glyphicon-envelope"> </span> Email</a></li>
                        <li role="separator" class="divider"></li>
                        <li><a target="_blank" href="@Url.Action("Report", "StockProcessTransfer", new { @id = ViewBag.id })"><span class="glyphicon glyphicon-th"> </span> Report</a></li>
                    </ul>
                </div>
            </div>
        </div>


        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)
                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Document Details
                    </h4>
                    <div>
                        <div>

                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocDate, "Entry Date", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new
                                   {
                                       @class = "datepickerWithNFD form-control col-xs-6 required updateDocNo",
                                       data_tabl = "StockHeaders",
                                       data_doctype = Model.DocTypeId,
                                       data_divId = Model.DivisionId,
                                       data_sitId = Model.SiteId,
                                   })
                                        @Html.ValidationMessageFor(model => model.DocDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocNo, "Entry No", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(m => m.DocNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @if (Model.StockHeaderSettings.PersonFieldHeading != null)
                                    {
                                        @Html.LabelFor(model => model.PersonId, Model.StockHeaderSettings.PersonFieldHeading.ToString(), new { @class = "control-label  col-md-4 col-sm-2" })
                                    }
                                    else
                                    {
                                        @Html.LabelFor(model => model.PersonId, "Person", new { @class = "control-label  col-md-4 col-sm-2" })
                                    }
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.PersonId, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(m => m.PersonId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            @*<div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ProcessId, "Process", new { @class = "control-label col-xs-4" })
                                        <div class="col-xs-6">
                                            @if (Model.ProcessId <= 0)
                                            {
                                                @Html.TextBoxFor(m => m.ProcessId, new { @class = "form-control col-xs-6 required" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(m => m.ProcessId, new { @class = "form-control col-xs-6 required", @readonly = true })
                                            }

                                            @Html.ValidationMessageFor(m => m.ProcessId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>*@

                            <div class="col-md-6">
                                @Html.HiddenFor(m => m.StockHeaderSettings.isVisibleHeaderCostCenter)
                                @Html.HiddenFor(m => m.StockHeaderSettings.isMandatoryHeaderCostCenter)
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CostCenterId, "From CostCenter", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.CostCenterId, new { @class = "form-control col-xs-6", @readonly = "true" })
                                        @Html.ValidationMessageFor(m => m.CostCenterId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6" style="display:@(Model.StockHeaderSettings.isVisibleMachine?"":"none")">
                                @Html.HiddenFor(m => m.StockHeaderSettings.isVisibleMachine)
                                @Html.HiddenFor(m => m.StockHeaderSettings.isMandatoryMachine)
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MachineId, "Machine", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @if (Model.StockHeaderSettings.isMandatoryMachine)
                                        {
                                            @Html.TextBoxFor(m => m.MachineId, new { @class = "form-control col-xs-6 required" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(m => m.MachineId, new { @class = "form-control col-xs-6" })
                                        }

                                        @Html.ValidationMessageFor(m => m.MachineId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextAreaFor(m => m.Remark, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.Remark, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>

                <hr />

                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Transfer Product
                    </h4>
                </div>

                <div style="padding-right:15px">



                    <div class="panel panel-default" id="grid">

                        <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                            <div class="row grid-head">
                                <div class="text-left block" style="width: 5%; ">
                                    Srl.
                                </div>

                                <div class="block" style="width: 90%;">
                                    <div class="row">
                                        @*ProductInfo*@
                                        <div class="block" style="width: 25%; ">
                                            Product Name
                                        </div>
                                        @*Qty*@
                                        <div class="block" style="width: 15%; ">
                                            To CostCenter
                                        </div>
                                        <div class="text-right block" style="width: 15%;">
                                            Qty
                                        </div>
                                        @*Amount*@
                                        <div class="text-right block" style="width: 10%;">
                                            Rate
                                        </div>
                                        <div class="text-right block" style="width: 20%; ">
                                            Amount
                                        </div>
                                        @*Remark*@
                                        <div class="block" style="width: 15%;">
                                            Remark
                                        </div>
                                    </div>
                                </div>




                                <div class="" style="width:5%">

                                </div>
                            </div>

                        </div>


                        <div class="panel-info" id="gbody">


                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}


@if ((ViewBag.Mode == "Add") || (ViewBag.Mode == "Edit"))
{

    <script type="text/javascript">
        //To focus on the first element on modal load
        //$('#myModal').on('shown.bs.modal', function () {
        //    $("ceoductId").select2("focus");
        //});

        //Reloading the table contents on modal hide
        $('#myModal').on('hidden.bs.modal', function () {
            LoadProducts();
        });

        $(document).ready(function(){
            enableModalTransitions();
        })

    </script>

}


<script type="text/javascript">

    $(document).ready(function () {
        var id=@Model.StockHeaderId;
        if(id==null||id==0)
        {
            $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
        }

        //CustomSelectFunction($("#ProcessId"), '/ComboHelpList/GetProcess', '/ComboHelpList/SetSingleProcess', ' ', false, 1);
        CustomSelectFunction($("#PersonId"), '/ComboHelpList/GetJobWorkersWithProcess', '/ComboHelpList/SetSinglePerson', ' ', false, 1,$("#ProcessId").val());
        CustomSelectFunction($("#CostCenterId"), '/StockProcessTransfer/GetCostCentersForDocType', '/ComboHelpList/SetSingleCostCenter', ' ', false, 1,$("#DocTypeId").val());
        CustomSelectFunction($("#MachineId"), '/ComboHelpList/GetMachine', '/ComboHelpList/SetSingleMachine', ' ', false, 1);

        //Calling the function to load the table data/ Line information
        LoadProducts();
        //Adding Hidden Input Fields
        AddFields();

    });

    function LoadProducts() {
        var groupId='@Model.StockHeaderId';
        var RateVisible='@Model.StockHeaderSettings.isVisibleRate';
        var QtyCount=0;
        var DealQtyCount=0;
        var AmountCount=0;
        var unit=true;
        var dunit=true;
        var prevunit;
        var prevdunit;
        var decimal=0;
        var DUdecimal=0;
        $.ajax({
            url: '/StockProcessTransfer/TransferIndex/'+groupId,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;

                if(data.length!=0)
                {

                    $.each(data, function (index, item) {
                        row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>"
                            +"      <div class='row-index block'  style='width:5%'>"+srno+"<input type='hidden' class='id' value='"+item.StockLineId+"' /></div>"
                            +"          <div class='block'  style='width:90%'>"
                            +"              <div class='row'>"
                            +"                  <div class='block' style='width:25%'>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")
                            +"                      <br />"+(item.Specification==null?" ":item.Specification)
                            +"                          <p>"+(item.Dimension1Name==null?" ":item.Dimension1Name+",")+(item.Dimension2Name==null?" ":item.Dimension2Name)+"</p>"
                            +"                          <div>"+((item.DueDate==null)?" ":"<span title='DueDate' class='label label-danger' style=''>"+formatDate('d/m/Y',new Date(parseInt(item.DueDate.substr(6))))+"</span>")
                            +"                          </div>"
                            +                           (item.RequisitionHeaderDocNo==null?" ":"<span title='DueDate' class='' style='font-weight:bold'>Request No: "+item.RequisitionHeaderDocNo+"</span>")
                            +"                  </div>"
                            +"                   <div class='block'  style='width:15%'>"+(item.CostCenterName==null?" ":item.CostCenterName)
                            +"                   </div>"
                            +"                  <div class='text-right block'  style='width:15%'>"+(item.Qty==null?" ":item.Qty.toFixed(item.UnitDecimalPlaces))+"<br />"
                            +"                      <div><small>"+(item.UnitName==null?" ":item.UnitName)+"</small>"
                            +"                      </div>"
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.Rate==null?" ":item.Rate.toFixed(2))
                            +"                   </div>"
                            +"                   <div class=' text-right block'  style='width:20%'>"+(item.Amount==null?" ":item.Amount.toFixed(2))
                            +"                   </div>"
                            +"                   <div class='block'  style='width:15%'>"+(item.ProductUidName==null?" ":"ProductUID:"+item.ProductUidName+"<br/>")+(item.LotNo==null?" ":"Lot-No:"+item.LotNo+"<br />")+(item.Remark==null?" ":item.Remark)
                            +"                   </div>"
                            +"              </div>"
                            +"          </div>"
                            +"      <div class='block'  style='width:5%'>"
                            +"      </div>"
                            +"  </div>"
                            +"<hr style='margin-top:0px;margin-bottom:0px'/>";
                        QtyCount+=item.Qty;
                        AmountCount+=item.Amount;
                        if(srno!=1)
                        {
                            if(item.UnitName==prevunit && unit!=false)
                            {}
                            else
                            {unit=false;}
                        }

                        if(decimal- parseInt(item.UnitDecimalPlaces) < 0){decimal=item.UnitDecimalPlaces;}
                        srno++;
                        prevunit=item.UnitName;
                    });
                    row+="<div class='row tfooter' style='padding-top:10px;'>"
                        +"  <div class='block' style='width:5%'>"
                        +"  </div>"
                        +"  <div class='block' style='width:90%'>"
                        +"      <div class='row'> "
                        +"          <div class='block'  style='width:25%'><strong>Total</strong></div>"
                        +"          <div class='block' style='width:15%'>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:15%'><strong>"
                        +               ((unit==true)?QtyCount.toFixed(decimal)+"<br /><small>"+prevunit:QtyCount.toFixed(decimal))+"</small></strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:10%'>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:20%'><strong>"+AmountCount.toFixed(2)+"</strong>"
                        +"          </div>"
                        +"          <div class='block' style='width:15%'>"
                        +"          </div>"
                        +"      </div>"
                        +"  </div>"
                        +"  <div class='block'  style='width:5%'>"
                        +"  </div>"
                        +"</div>"





                }
                else
                {
                    ;
                }
                $("#gbody").html(row);

            },
            error: function (result) {
                alert("Error");
            }
        });
    };

</script>


@if ((ViewBag.Mode != "Add") && (ViewBag.Mode != "Edit"))
{
    <script type="text/javascript">

      
        $(document).ready(function(){
            DisablePageNavigation();
        })
        
        //RemoveFields();

        //function RemoveFields(){
        //    //Disabling input fields
        //    $(':input:not(:submit)').attr('disabled','disabled');

        //    //Removing all the events from the newly created lines
        //    $('#gbody').unbind();

        //    //Removing Add New Row ActionLink
        //    if($('a#btnCreate').parents('h5')[0])
        //        $('a#btnCreate').parents('h5')[0].remove();


        //    //Preventing the click event on newly created elements
        //    $(document).on('click','#gbody a',function(event){
        //        event.preventDefault();
        //    })
        //    //Removing the action link from the form so that the request will be redirected to the Submit function in the controller instead of the hardcoded path
        //    $('form:last').prop('action','');
        //}


    </script>
}

@if ((Model.Status == (int)ActivityTypeContants.Modified || Model.Status == (int)ActivityTypeContants.Submitted)
     && (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            enableActivityLogReason();
        })

        //var href = '/ActivityLog/LogEditReason'

        //var $btnClicked;

        //$(':submit').bind('click', function () {
        //    $btnClicked=$(this);
        //    $('#myModalContent').load(href, function () {

        //        $('#myModal').modal({
        //            backdrop: 'static',
        //            keyboard: true
        //        }, 'show');

        //        bindForm1(this);
        //    });

        //    return false;
        //})

        //function bindForm1(dialog) {

        //    $('#modformr', dialog).submit(function () {

        //        $.ajax({
        //            url: this.action,
        //            type: this.method,
        //            data: $(this).serialize(),
        //            success: function (result) {
        //                if (result.success) {
        //                    $('#myModal').modal('hide');

        //                    $(':submit').unbind();

        //                    $('input[name="UserRemark"]').val(result.UserRemark);

        //                    $btnClicked.trigger('click');

        //                } else {
        //                    $('#myModalContent').html(result);
        //                    bindForm1();
        //                }
        //            }
        //        });
        //        return false;
        //    });

        //}

    </script>
}