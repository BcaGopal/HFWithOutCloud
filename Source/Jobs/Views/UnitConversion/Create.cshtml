@model Model.ViewModel.UnitConversionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "UnitConversion", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
     @Html.HiddenFor(model => model.UnitConversionId)
    @Html.HiddenFor(m=>m.ProductId)
    <div class="panel panel-default">

        <div class="panel-heading">

            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Unit Conversion -@ViewBag.Name</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />
            
            <div class="panel-info">
                @*@*<h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "UnitConversion", new { ProductId = @ViewBag.Id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "UnitConversion", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Email", "UnitConversion", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "UnitConversion", new { id = @Model.UnitConversionId, ProductId = @ViewBag.Id }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "UnitConversion", new { id = @Model.UnitConversionId, ProductId = @ViewBag.Id }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "UnitConversion", new { id = @ViewBag.Id }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })                    
                </h4>*@*@
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "UnitConversion", new { ProductId = @ViewBag.Id }, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "UnitConversion", new { id = @Model.UnitConversionId, ProductId = @ViewBag.Id }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "UnitConversion", new { id = @Model.UnitConversionId, ProductId = @ViewBag.Id }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "UnitConversion", new { id = @ViewBag.Id }, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
                </div>
            </div>
        </div>        
        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">               
                
                @*@Html.BootStrapValidationSummary()*@
                @Html.ValidationSummary(true, null, new { @class="alert alert-danger"})

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.FromUnitId, "From Unit", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(m => m.FromUnitId, new SelectList(ViewBag.UnitList as System.Collections.IEnumerable, "UnitId", "UnitName"), new { @class = "form-control col-xs-6 height",@readonly=true })
                                @Html.ValidationMessageFor(m => m.FromUnitId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.FromQty, "From Qty", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.FromQty, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.FromQty, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ToUnitId, "To Unit", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(m => m.ToUnitId, new SelectList(ViewBag.UnitList as System.Collections.IEnumerable, "UnitId", "UnitName"), new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.ToUnitId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ToQty, "To Qty", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ToQty, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.ToQty,null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>                   
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UnitConversionForId, "Unit Conversion For", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(m => m.UnitConversionForId, new SelectList(ViewBag.UnitConvForList as System.Collections.IEnumerable, "UnitconversionForId", "UnitconversionForName"), new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.UnitConversionForId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>       
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, "Description", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.Description, new { @class = "form-control col-xs-6 " })
                                @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>               
                </div>
           
            </div>
        </div>
    </div>
}
<script type="text/javascript">


    var IsSaved=false;
    var ValidationCount=0;

    $('form').submit(function(event){
    
        if(!IsSaved)
        {
            //if(!ValidateData())
            //{
                //return false;
            //}
            IsSaved=true;
            return IsSaved;
        }
        else
        {
            return false;
        }


    });


    function ValidateData() {        
        var DocId=@Model.UnitConversionId;
        var TempValue;
        var ValidationMessage="";



        //Checking for dulicate key value
        if(DocId<=0)
        {
            TempValue= $('#BuyerId').DuplicateCheckForCreate({ name: 'UnitConversion', value: $('#BuyerId').val(), doctype: 0 });
            if (TempValue){ ValidationMessage=$('#UnitConversionName').val() + " already exist <br />";}
        }
        else
        {
            test = $('#BuyerId').DuplicateCheckForEdit({ name: 'UnitConversion', value: $('#BuyerId').val(), doctype: 0,headerId:DocId });
            if (TempValue) {ValidationMessage+=$('#UnitConversionName').val() + " already exist <br />";}
        }
        if(TempValue)
        {
            if($('#validationerrormsg').length==0){
            $('.panel-info').filter(':last').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
        else
            {
                $('#validationerrormsg').html(ValidationMessage);
        }
        }
        return  (ValidationMessage=="");

    }


</script>

