@model Model.ViewModel.CityViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("Post", "City", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.CityId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> City</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
         
            <hr style="margin-top: 5px; margin-bottom: 5px; border-top: 1px solid #d8d5d5" />
            <div class="panel-info">
                @*<h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "City", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "City", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    
                </h4>*@
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "City", null, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "City", new { id = @Model.CityId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "City", new { id = @Model.CityId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "City", null, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
                </div>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">
                @Html.ValidationSummary(true)
                <div>
                    <div class="col-md-6">
                        <div class="form-group"  style="padding-top:15px">                  
                            @Html.LabelFor(model => model.CityName, "City Name", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.TextBoxFor(m => m.CityName, null, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.CityName, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group" style="padding-top:15px">
                            @Html.LabelFor(m=>m.CountryId,"Country Name", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.DropDownListFor(m=>m.CountryId, new SelectList(ViewBag.CountryList as System.Collections.IEnumerable, "CountryId", "CountryName"), string.Empty, new { @class = "form-control col-xs-6 required height" })
                                @Html.ValidationMessageFor(m => m.CountryId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.StateId, "State Name", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10">
                                @Html.DropDownListFor(m => m.StateId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.StateId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsActive,"Is Active", new { @class = "control-label col-md-4 col-sm-2" })
                            <div class="col-md-7 col-sm-10" style="padding-top:4px">
                                @Html.CheckBoxFor(m => m.IsActive, new { @class = "checkbox col-xs-1" })
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                        </div>
                    </div> 
                </div>

                @*<hr />
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary btn-sm CurveBorder height" style=" border-color: #606264" />
                        </div>
                    </div>*@
            </div>
        </div>
    </div>
}

<script type="text/javascript">



    $(function () {

        var tes = @Model.StateId;
        if(tes!=0)
        GetStatesOnEdit.call();

    });

    $("#CountryId").change(GetStates);

    function GetStates() {


        
        var selectedcountry = $("#CountryId").val();
        var ddlstates = $("#StateId");
        if (selectedcountry == null||selectedcountry=='') {
            ddlstates.html('');
            return false;
        }
        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.Action("GetStateList"))",
            data: { id: selectedcountry },
        success: function (data) {
            ddlstates.html('');
            $.each(data, function (id, option) {
                ddlstates.append($('<option></option>').val(option.StateId).html(option.StateName));
            });
        },
        })
        
        };

    function GetStatesOnEdit() {


        var tes = @Model.StateId;
        var selectedcountry = $("#CountryId").val();
        var ddlstates = $("#StateId");
        if (selectedcountry == null||selectedcountry=='') {
            ddlstates.html('');
            return false;
        }
        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.Action("GetStateList"))",
            data: { id: selectedcountry },
        success: function (data) {
            ddlstates.html('');
            $.each(data, function (id, option) {
                ddlstates.append($('<option></option>').val(option.StateId).html(option.StateName));
            });

            $('#StateId').val(tes);
            //$('select #StateId option[value=tes]').attr("selected",true);           
        },
        })
        
    };
    

</script>