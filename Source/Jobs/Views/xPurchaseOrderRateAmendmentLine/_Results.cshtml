@model Model.ViewModel.PurchaseOrderAmendmentMasterDetailModel
@using Core.Common

<style type="text/css">
    #gbody-modal {
        height: 250px;
        overflow-y: scroll;
        width: 100%;
    }

    .AAmend {
        background-color: #FFC107;
    }
</style>

<div class="modal-content Custom-modal">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Purchase Orders & Rates</span>
        </h3>
    </div>
    <div>
        @using (Html.BeginForm("_ResultsPost", "PurchaseOrderRateAmendmentLine", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal modal-body">

                <div style="padding-right:15px">
                    <div class="row">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)



                            <div class="panel panel-default" id="grid">
                                <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                                    <div class="row grid-head">
                                        <div class="block text-left" style="width:5%">
                                            Srl.
                                        </div>
                                        <div class="block" style="width:92%">
                                            <div class="row">

                                                <div class="block" style="width:25%">
                                                    Product Name
                                                </div>

                                                <div class="block" style="width:15%">
                                                    Purchase Order
                                                </div>

                                                <div class="text-right block" style="width:13%">
                                                    Qty
                                                </div>

                                                <div class="block text-right" style="width:13%">
                                                    Deal<br />Qty
                                                </div>

                                                <div class="block text-right" style="width:17%">
                                                    Order<br />Rate
                                                </div>

                                                <div class="block text-right" style="width:17%">
                                                    Amended<br />Rate
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="panel-info" id="gbody-modal">

                                    @for (int i = 0; i < Model.PurchaseOrderRateAmendmentLineViewModel.Count(); i++)
                                    {


                                        <div class='row crow grid-body @(Model.PurchaseOrderRateAmendmentLineViewModel[i].AAmended?"AAmend":"")' style='margin-left:0px;margin-right:0px'>


                                            <div class='block row-index' style='width:5%'>
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].ProductId)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].DealUnitId)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].ProductName)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].Specification)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].Dimension1Name)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].Dimension2Name)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].PurchaseOrderLineId)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].PurchaseOrderAmendmentHeaderId)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].DocNo)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].PurchaseOrderRate)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].PurchaseOrderDocNo)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].UnitName)
                                                @Html.HiddenFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].DealUnitName)
                                                @Html.HiddenFor(m => m.PurchaseOrderRateAmendmentLineViewModel[i].Qty)
                                                @Html.HiddenFor(m => m.PurchaseOrderRateAmendmentLineViewModel[i].DealQty)
                                                @Html.HiddenFor(m => m.PurchaseOrderRateAmendmentLineViewModel[i].SupplierId)
                                                @Html.HiddenFor(m => m.PurchaseOrderRateAmendmentLineViewModel[i].AAmended)
                                                @(i + 1)
                                            </div>
                                            <div class='block pull-middle' style='width:94%'>

                                                <div class='row'>

                                                    <div class='block' style='width:25%'>
                                                        <strong> @Model.PurchaseOrderRateAmendmentLineViewModel[i].ProductName</strong>
                                                        <p style="margin-bottom:0px">
                                                            @{
                                        var Dim1 = (string.IsNullOrEmpty(Model.PurchaseOrderRateAmendmentLineViewModel[i].Dimension1Name)) ? "" : Model.PurchaseOrderRateAmendmentLineViewModel[i].Dimension1Name + ",";
                                        var Dim2 = (string.IsNullOrEmpty(Model.PurchaseOrderRateAmendmentLineViewModel[i].Dimension2Name)) ? "" : Model.PurchaseOrderRateAmendmentLineViewModel[i].Dimension2Name;
                                                            }

                                                            @Dim1 @Dim2
                                                        </p>
                                                    </div>
                                                    <div>
                                                        <div class='block' style='width:15%'>
                                                            @(Model.PurchaseOrderRateAmendmentLineViewModel[i].PurchaseOrderDocNo)
                                                        </div>

                                                        <div class='block text-right pull-middle' style='width:13%'>
                                                            <span>@string.Format("{" + "0:0.".PadRight(@Model.PurchaseOrderRateAmendmentLineViewModel[i].unitDecimalPlaces + 4, '0') + "}", Model.PurchaseOrderRateAmendmentLineViewModel[i].Qty)</span><br />
                                                            <small>@Model.PurchaseOrderRateAmendmentLineViewModel[i].UnitName</small>
                                                        </div>

                                                        <div class='block text-right pull-middle' style='width:13%'>
                                                            <span>@string.Format("{" + "0:0.".PadRight(@Model.PurchaseOrderRateAmendmentLineViewModel[i].dealUnitDecimalPlaces + 4, '0') + "}", Model.PurchaseOrderRateAmendmentLineViewModel[i].DealQty)</span><br />
                                                            <small>@Model.PurchaseOrderRateAmendmentLineViewModel[i].DealUnitName</small>
                                                            <input type="hidden" value="@Model.PurchaseOrderRateAmendmentLineViewModel[i].DealQty" class="DealQty" />
                                                        </div>

                                                        <div class='block text-right pull-middle' style='width:17%'>
                                                            @Html.TextBoxFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].PurchaseOrderRate, new { @class = "form-control text-right multiple-modal PurchaseOrderRate", @readonly = true })
                                                        </div>
                                                        <div class='block text-right pull-middle' style='width:17%'>
                                                            @if (Model.PurchaseOrderRateAmendmentLineViewModel[i].AAmended)
                                                            {
                                                                @Html.TextBoxFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].Rate, new { @class = "form-control text-right multiple-modal AmendedRate", @readonly = true })
                                                            }
                                                            else
                                                            {
                                                                @Html.TextBoxFor(m => Model.PurchaseOrderRateAmendmentLineViewModel[i].Rate, new { @class = "form-control text-right multiple-modal AmendedRate" })
                                                            }
                                                        </div>

                                                    </div>

                                                </div>

                                            </div>

                                        </div>
                                        <hr style='margin-top:0px;margin-bottom:0px' />
                                    }
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">
                    <button class="btn custom" name="Command:Edit" type="submit" id="submit"><h2 style="margin:0px" title="Proceed"><span class="glyphicon glyphicon-floppy-disk black black"></span> </h2></button>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">

    //$('.AmendedRate').change(function () {

    //    var $Block = $(this).closest('div.row');

    //    if ($(this).val() <= 0 || $Block.find('.PurchaseOrderRate').val() == $(this).val()) {
    //        $('#submit', '.modal-body').attr('disabled', 'disabled');
    //        if ($(this).closest('div.form-horizontal').find('span#cerror').length == 0) {
    //            $(this).closest('div.form-horizontal').prepend("<span class='text-danger' id='cerror'>Invalid Rate</span>")
    //        }
    //    }
    //    else {

    //        //$Rate = $Block.find('.Rate').get(0);
    //        //$AmendedRate = $Block.find('.AmendedRate').get(0);
    //        //$PurchaseOrderRate = $Block.find('.PurchaseOrderRate').get(0);
    //        //$Amount = $Block.find('.Amount').get(0);
    //        //$DealQty = $Block.find('.DealQty').get(0);

    //        //$($Rate).val(($($AmendedRate).val() - $($PurchaseOrderRate).val()).toFixed(2));

    //        //$($Amount).val(($($Rate).val() * $($DealQty).val()).toFixed(2));

    //        $('#submit', '.modal-body').removeAttr('disabled');
    //        if ($(this).closest('div.form-horizontal').find('span#cerror').length > 0) {
    //            $(this).closest('div.form-horizontal').find('span#cerror').remove();
    //        }
    //    }


    //});

    var IsSaved = false;
    var ValidationCount = 0;

    $('#modform').bind('submit', function (event) {

        if (!IsSaved) {
            if (!ValidateData()) {
                return false;
            }
            IsSaved = true;
            $('button:submit').attr('disabled', 'disabled');
            return IsSaved;
        }
        else {
            return false;
        }


    });

    function ValidateData() {
        var ValidationMessage = "";

        //Client Side Validaion.....

        return (ValidationMessage == "");

    }

</script>