@model Model.ViewModel.MaterialPlanHeaderViewModel
@using Core.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "MaterialPlanningWizard", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.MaterialPlanHeaderId)
    @Html.HiddenFor(m => m.DocTypeId)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.CreatedDate)
    @Html.HiddenFor(m => m.MaterialPlanSettings.isVisibleDimension1)
    @Html.HiddenFor(m => m.MaterialPlanSettings.isVisibleDimension2)
    @Html.HiddenFor(m => m.MaterialPlanSettings.DocTypeProductionOrderId)
    @Html.HiddenFor(m => m.MaterialPlanSettings.DocTypePurchaseIndentId)
    @Html.HiddenFor(m => m.MaterialPlanSettings.PlanType)

    <div class="panel panel-default">

        <div class="panel-heading">
            @CustomHelpers.RenderResHeaderInfo(ViewBag.transactionType, (int?)ViewBag.PendingToSubmit, (int?)ViewBag.PendingToReview, ViewBag.Name)
            @*@if (ViewBag.transactionType == "submit")
    {<h3 style="border-bottom:1px solid #e1dada;padding-bottom:10px;">
        <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Submit @ViewBag.Name</span>
        <input type="submit" value="Submit" name="Command:Submit" class="btn btn-primary right" style="width: 90px; background-color: #2980b9" />
    </h3>}
    else if (ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue")
    {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
        <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> Review @ViewBag.Name</span>
        <button type="submit" name="Command:Review" class="btn btn-primary right" style="margin-left:5px" id="ReviewContinue">Review & Next<span class='badge'>@(ViewBag.PendingToReview != 0 ? ViewBag.PendingToReview : "")</span></button>
        <button type="submit" class="btn btn-primary right" name="Command:Review">Review</button>
        <input type="hidden" id="IsContinue" name="IsContinue" value="" />
    </h3>}
    else if (ViewBag.transactionType == "detail")
    {
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>
        </h3>
    }
    else
    {
        <h3 style="border-bottom:1px solid #e1dada;padding-bottom:10px;">
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
            <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
        </h3>
    }

    <hr style="margin-top:10px;margin-bottom:0px" />*@
            <hr style="margin-top: 5px; margin-bottom: 5px; border-top: 1px solid #d8d5d5" />
            @{
                string EditAction = "";
                if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                {
                    EditAction = "Modify";
                }
                else if ((Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified))
                {
                    EditAction = "ModifyAfter_Submit";
                }
                else
                {
                    EditAction = "DetailInformation";
                }
            }


            <div class="panel-info">
                @*<h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "MaterialPlanHeader", new { @id = ViewBag.id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "GetHistory", "LogHistory", new { Ids = Model.MaterialPlanHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip", @id = "DocHistory", @data_modal = "" })
                    @Html.ActionLink(" ", "GeneratePrints", "MaterialPlanHeader", new { Ids = Model.MaterialPlanHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })
                    @Html.ActionLink(" ", "Email", "MaterialPlanHeader", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "MaterialPlanHeader", new { id = @Model.MaterialPlanHeaderId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "MaterialPlanHeader", new { id = @Model.MaterialPlanHeaderId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "MaterialPlanHeader", new { @id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>*@
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "MaterialPlanHeader", new { @id = ViewBag.id }, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", EditAction, "MaterialPlanHeader", new { @id = Model.MaterialPlanHeaderId, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-edit", @title = "Edit", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "GeneratePrints", "MaterialPlanHeader", new { Ids = Model.MaterialPlanHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })
                    @Html.ActionLink(" ", "PrevPage", "MaterialPlanHeader", new { id = @Model.MaterialPlanHeaderId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "MaterialPlanHeader", new { id = @Model.MaterialPlanHeaderId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "MaterialPlanHeader", new { @id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
                </div>
                <div class="btn-group">
                    <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle" aria-expanded="false" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
                    </a>
                    <ul  class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">
                        <li><a id="DocHistory" data-modal="" href="@Url.Action("GetHistory", "LogHistory", new { Ids = Model.MaterialPlanHeaderId, DocTypeId = Model.DocTypeId })"><span class="glyphicon glyphicon-user"> </span> History</a></li>
                        <li><a href="@Url.Action("Email", "MaterialPlanHeader")"><span class="glyphicon glyphicon-envelope"> </span> Email</a></li>
                    </ul>
                    </div>
                </div>
        </div>
        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">

                @Html.ValidationSummary(true)

                <div>

                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Planning Details
                    </h4>

                    <div>
                        <div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocDate, "Plan Date", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(m => m.DocDate, null, new { @class = "has-error" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocNo, "Plan No", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(m => m.DocNo, null, new { @class = "has-error" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BuyerId, "Buyer", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.BuyerId, null, new { @class = "form-control col-xs-6", @readonly = true })
                                        @Html.ValidationMessageFor(m => m.BuyerId, null, new { @class = "has-error" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DueDate, "Due Date", new { @class = "control-label  col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DueDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(m => m.DueDate, null, new { @class = "has-error" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6" style='display:@(Model.MaterialPlanSettings .isVisibleMachine?"":"none")'>
                                <div class="form-group">
                                    @Html.HiddenFor(m => m.MaterialPlanSettings.isMandatoryMachine)
                                    @Html.HiddenFor(m => m.MaterialPlanSettings.isVisibleMachine)
                                    @Html.LabelFor(model => model.MachineId, "Machine", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.MachineId, new { @class = "form-control " + (Model.MaterialPlanSettings.isMandatoryMachine ? " required" : "") })
                                        @Html.ValidationMessageFor(m => m.MachineId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextAreaFor(m => m.Remark, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.Remark, null, new { @class = "has-error" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row"></div>
            </div>
        </div>
    </div>
}

@if (((ViewBag.Mode == "Add") || (ViewBag.Mode == "Edit")) && (@Model.Status != (int)ActivityTypeContants.Approved))
{
    <script type="text/javascript">
        var IsSaved=false;
        var ValidationCount=0;
        CustomSelectFunction($("#BuyerId"), '/ComboHelpList/GetBuyers', '/ComboHelpList/SetSingleBuyer', ' ', false, 0);
        CustomSelectFunction($("#MachineId"), '/ComboHelpList/GetMachine', '/ComboHelpList/SetSingleMachine', ' ', false, 1);
        $('form').submit(function(event){

            if(!IsSaved)
            {
                if(!ValidateData())
                {
                    return false;
                }
                IsSaved=true;
                return IsSaved;
            }

        });


        function ValidateData() {
            var DocId='@Model.MaterialPlanHeaderId';
            var TempValue;
            var ValidationMessage="";



            //Checking for dulicate key value
            if(DocId<=0)
            {
                TempValue= $('#MaterialPlanHeaderName').DuplicateCheckForCreate({ name: 'MaterialPlanHeader', value: $('#MaterialPlanHeaderName').val(), doctype: 0 });
                if (TempValue){ ValidationMessage=$('#MaterialPlanHeaderName').val() + " already exist <br />";}
            }
            else
            {
                test = $('#MaterialPlanHeaderName').DuplicateCheckForEdit({ name: 'MaterialPlanHeader', value: $('#MaterialPlanHeaderName').val(), doctype: 0,headerId:DocId });
                if (TempValue) {ValidationMessage+=$('#MaterialPlanHeaderName').val() + " already exist <br />";}
            }
            if(TempValue)
            {
                if($('#validationerrormsg').length==0){
                    $('.panel-info').filter(':last').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
                else
                {
                    $('#validationerrormsg').html(ValidationMessage);
                }
            }
            return  (ValidationMessage=="");

        }       
    </script>
}