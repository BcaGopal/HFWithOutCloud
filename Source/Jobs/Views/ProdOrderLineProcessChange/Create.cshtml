@model Jobs.Controllers.ProdOrderLineProcessChangeViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "ProdOrderLineProcessChange", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ProdOrderHeaderId)
    @Html.HiddenFor(m => m.MaterialPlanHeaderId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Production Order Process Change</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">

                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.ProdOrderLineId, "Production Order", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProdOrderLineId, null, new { @class = "form-control col-xs-6 " })
                                @Html.ValidationMessageFor(m => m.ProdOrderLineId, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.ProductName, "Product", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProductName, null, new { @class = "form-control col-xs-6 ", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ProductName, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.HiddenFor(m => m.DocumentTypeSettings.Dimension1Caption)
                            @Html.LabelFor(model => model.Dimension1Name, (Model.DocumentTypeSettings.Dimension1Caption ?? "Dimension1"), new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.Dimension1Name, null, new { @class = "form-control col-xs-6 ", @readonly = true })
                                @Html.ValidationMessageFor(m => m.Dimension1Name, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.HiddenFor(m => m.DocumentTypeSettings.Dimension2Caption)
                            @Html.LabelFor(model => model.Dimension2Name, (Model.DocumentTypeSettings.Dimension2Caption ?? "Dimension2"), new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.Dimension2Name, null, new { @class = "form-control col-xs-6 ", @readonly = true })
                                @Html.ValidationMessageFor(m => m.Dimension2Name, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.HiddenFor(m => m.DocumentTypeSettings.Dimension3Caption)
                            @Html.LabelFor(model => model.Dimension3Name, (Model.DocumentTypeSettings.Dimension3Caption ?? "Dimension3"), new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.Dimension3Name, null, new { @class = "form-control col-xs-6 ", @readonly = true })
                                @Html.ValidationMessageFor(m => m.Dimension3Name, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.HiddenFor(m => m.DocumentTypeSettings.Dimension4Caption)
                            @Html.LabelFor(model => model.Dimension4Name, (Model.DocumentTypeSettings.Dimension4Caption ?? "Dimension4"), new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.Dimension4Name, null, new { @class = "form-control col-xs-6 ", @readonly = true })
                                @Html.ValidationMessageFor(m => m.Dimension4Name, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OldProcessName, "Process", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.OldProcessName, null, new { @class = "form-control col-xs-6 ", @readonly = true })
                                @Html.ValidationMessageFor(m => m.OldProcessName, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NewProcessId, "New Process", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.NewProcessId, null, new { @class = "form-control col-xs-6 " })
                                @Html.ValidationMessageFor(m => m.NewProcessId, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        CustomSelectFunction($("#ProdOrderLineId"), '/ProdOrderLineProcessChange/GetProdOrderList', '/ProdOrderLineProcessChange/SetSingleProdOrderLine', ' ', false, 0, $('#ProdOrderHeaderId').val());
        CustomSelectFunction($("#NewProcessId"), '/ComboHelpList/GetProcess', '/ComboHelpList/SetSingleProcess', ' ', false, 0);
    });

    $("#ProdOrderLineId").change(function(){
        Validate_ProdOrderLine();
    });

    function Validate_ProdOrderLine() {
        if ($('#ProdOrderLineId').val() && $('#ProdOrderLineId').val() != 0)
        {
            $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("GetProdOrderDetail"))",
                    data: { ProdOrderLineId: $("#ProdOrderLineId").val() },
                success: function (data) {
                    $('#ProductName').val(data.ProductName);
                    $('#Dimension1Name').val(data.Dimension1Name);
                    $('#Dimension2Name').val(data.Dimension2Name);
                    $('#Dimension3Name').val(data.Dimension3Name);
                    $('#Dimension4Name').val(data.Dimension4Name);
                    $('#OldProcessName').val(data.ProcessName);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve Order details.' + thrownError);
                }
            });
        }
        else if($('#JobOrderLineId').val()=="")
        {
            $('#ProductName').val("");
            $('#Dimension1Name').val("");
            $('#Dimension2Name').val("");
            $('#Dimension3Name').val("");
            $('#Dimension4Name').val("");
            $('#ProcessName').val("");
        }
    }
</script>