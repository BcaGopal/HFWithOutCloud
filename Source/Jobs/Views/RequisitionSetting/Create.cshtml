@model Model.ViewModel.RequisitionSettingsViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
@using (Html.BeginForm("Post", "RequisitionSetting", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.RequisitionSettingId)
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.DocTypeId)

    <div class="panel panel-default">

        <div class="panel-heading">

            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> @Model.DocTypeName Settings</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "GetHistory", "LogHistory", new { Ids = Model.RequisitionSettingId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip", @id = "DocHistory", @data_modal = "" })
                    @Html.ActionLink(" ", "Index", "MaterialRequestCancelHeader", new { @id = @Model.DocTypeId }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">

                @Html.ValidationSummary(true)

                <div class="row">
                    <h3 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Visibility Settings
                    </h3>
                    <div>
                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.isVisibleDimension1, "Dimension 1", new { @class = "control-label col-xs-6" })
                                    <div class="col-xs-4" style=" padding-top:4px">
                                        @Html.CheckBoxFor(m => m.isVisibleDimension1, new { @class = "checkbox col-xs-2" })
                                        @Html.ValidationMessageFor(model => model.isVisibleDimension1)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.isVisibleDimension2, "Dimension 2", new { @class = "control-label col-xs-6" })
                                    <div class="col-xs-4" style=" padding-top:4px">
                                        @Html.CheckBoxFor(m => m.isVisibleDimension2, new { @class = "checkbox col-xs-2" })
                                        @Html.ValidationMessageFor(model => model.isVisibleDimension2)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.isVisibleDimension3, "Dimension 3", new { @class = "control-label col-xs-6" })
                                    <div class="col-xs-4" style=" padding-top:4px">
                                        @Html.CheckBoxFor(m => m.isVisibleDimension3, new { @class = "checkbox col-xs-2" })
                                        @Html.ValidationMessageFor(model => model.isVisibleDimension3)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.isVisibleDimension4, "Dimension 4", new { @class = "control-label col-xs-6" })
                                    <div class="col-xs-4" style=" padding-top:4px">
                                        @Html.CheckBoxFor(m => m.isVisibleDimension4, new { @class = "checkbox col-xs-2" })
                                        @Html.ValidationMessageFor(model => model.isVisibleDimension4)
                                    </div>
                                </div>
                            </div>
                        </div> 


                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.isVisibleCostCenter, "Cost Center", new { @class = "control-label col-xs-6" })
                                    <div class="col-xs-4" style=" padding-top:4px">
                                        @Html.CheckBoxFor(m => m.isVisibleCostCenter, new { @class = "checkbox col-xs-2" })
                                        @Html.ValidationMessageFor(model => model.isVisibleCostCenter)
                                    </div>
                                </div>
                            </div>

                        </div>


                    </div>
                </div>

                <hr style="margin-bottom:0px" />
                <div class="row">
                    <h3 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        2.Mandatory Settings
                    </h3>
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.isMandatoryCostCenter, "Cost Center", new { @class = "control-label col-xs-6" })
                                    <div class="col-xs-4" style=" padding-top:4px">
                                        @Html.CheckBoxFor(m => m.isMandatoryCostCenter, new { @class = "checkbox col-xs-2" })
                                        @Html.ValidationMessageFor(model => model.isMandatoryCostCenter)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <hr style="margin-bottom:0px" />
                <div class="row">
                    <h3 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        3.Filters
                    </h3>
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.filterLedgerAccountGroups, "Ledger A/C Group", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.filterLedgerAccountGroups, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.filterLedgerAccountGroups, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.filterLedgerAccounts, "Ledger A/C", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.filterLedgerAccounts, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.filterLedgerAccounts, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.filterProductGroups, "Product Groups", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.filterProductGroups, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.filterProductGroups, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.filterProducts, "Products", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.filterProducts, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.filterProducts, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.filterProductTypes, "Product Types", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.filterProductTypes, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.filterProductTypes, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.filterContraDocTypes, "Contra Doc Types", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.filterContraDocTypes, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.filterContraDocTypes, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.filterContraDivisions, "Contra Divisions", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.filterContraDivisions, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.filterContraDivisions, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.filterContraSites, "Contra Sites", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.filterContraSites, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.filterContraSites, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <hr style="margin-bottom:0px" />
                <div class="row">
                    <h3 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        4.Other Settings
                    </h3>
                    <div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SqlProcDocumentPrint, "SQL Proc DocumentPrint", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.SqlProcDocumentPrint, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.SqlProcDocumentPrint, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SqlProcDocumentPrint_AfterSubmit, "SQL DocumentPrint After Submit", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.SqlProcDocumentPrint_AfterSubmit, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.SqlProcDocumentPrint_AfterSubmit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SqlProcDocumentPrint_AfterApprove, "SQL DocumentPrint After Approve", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.SqlProcDocumentPrint_AfterApprove, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.SqlProcDocumentPrint_AfterApprove, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OnSubmitMenuId, "On Submit Menu", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.OnSubmitMenuId, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.OnSubmitMenuId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OnApproveMenuId, "On Approve Menu", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.OnApproveMenuId, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.OnApproveMenuId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>




            </div>
        </div>
    </div>
}
<script type="text/javascript">

    $(function () {
        CustomSelectFunction($("#filterLedgerAccountGroups"), '/ComboHelpList/GetLedgerAccountGroups', '/ComboHelpList/SetLedgerAccountGroups', ' ', true, 1);
        CustomSelectFunction($("#filterLedgerAccounts"), '/ComboHelpList/GetAccount', '/ComboHelpList/SetAccount', ' ', true, 1);
        CustomSelectFunction($("#filterProductGroups"), '/ComboHelpList/GetProductGroup', '/ComboHelpList/SetProductGroup', ' ', true, 1);
        CustomSelectFunction($("#filterProducts"), '/ComboHelpList/GetProducts', '/ComboHelpList/SetProducts', ' ', true, 1);
        CustomSelectFunction($("#filterProductTypes"), '/ComboHelpList/GetProductType', '/ComboHelpList/SetProductType', ' ', true, 1);
        CustomSelectFunction($("#CalculationId"), '/ComboHelpList/GetCalculation', '/ComboHelpList/SetSingleCalculation', ' ', false, 1);
        CustomSelectFunction($("#filterContraDocTypes"), '/ComboHelpList/GetDocumentType', '/ComboHelpList/SetDocumentType', ' ', true, 1);
        CustomSelectFunction($("#filterContraDivisions"), '/ComboHelpList/GetDivision', '/ComboHelpList/SetDivision', ' ', true, 1);
        CustomSelectFunction($("#filterContraSites"), '/ComboHelpList/GetSite', '/ComboHelpList/SetSite', ' ', true, 1);
        CustomSelectFunction($("#OnSubmitMenuId"), '/ComboHelpList/GetMenus', '/ComboHelpList/SetSingleMenu', ' ', true, 1);
        CustomSelectFunction($("#OnApproveMenuId"), '/ComboHelpList/GetMenus', '/ComboHelpList/SetSingleMenu', ' ', true, 1);
    });


    var IsSaved = false;
    var ValidationCount = 0;

    $('form').submit(function (event) {

        if (!IsSaved) {
            IsSaved = true;
            return IsSaved;
        }
        else {
            return false;
        }
    });

</script>

