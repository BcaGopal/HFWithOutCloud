@model Model.ViewModels.ReportMasterViewModel
@using System.Text.RegularExpressions

@{
    ViewBag.Title = Model.ReportHeader.ReportName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .DTHidden {
        display: none;
    }

    .TextRight {
        text-align: right;
    }
    .cdtNumericCol{
        text-align:right;
    }
    .cdtTextCol
    {
        text-align:left;
    }
    .dataTable {
        font-size: 13px !important;
        line-height: 1;
    }
    /*.table.dataTable tbody th, table.dataTable tbody td {   
    text-align: right;
}*/

    table.dataTable tbody td {
        padding: 2px 10px;
    }
</style>
@*<link href="~/Content/DataTables/css/jquery.dataTables.min.css" rel="stylesheet" />

    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>*@
<link href="~/Scripts/DatatableTest/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Scripts/DatatableTest/buttons.dataTables.min.css" rel="stylesheet" />

@*<script src="~/Scripts/DatatableTest/jquery-1.12.4.js"></script>*@
<script src="~/Scripts/DatatableTest/jquery.dataTables.min.js"></script>
<script src="~/Scripts/DatatableTest/dataTables.buttons.min.js"></script>
<script src="~/Scripts/DatatableTest/buttons.flash.min.js"></script>
<script src="~/Scripts/DatatableTest/jszip.min.js"></script>
<script src="~/Scripts/DatatableTest/vfs_fonts.js"></script>
<script src="~/Scripts/DatatableTest/buttons.html5.min.js"></script>
<script src="~/Scripts/DatatableTest/buttons.print.min.js"></script>

@*@using (Html.BeginForm(Model.ReportHeader.Action, Model.ReportHeader.Controller, FormMethod.Post, new { enctype = "multipart/form-data" }))
{*@
<form action="/" id="registerSubmit">
    <div class="panel panel-default">

        <div class="panel-heading">
            <h4>
                <span> @Model.ReportHeader.ReportName </span>

                @*@if (Model.ReportHeader.IsGridReport.HasValue && Model.ReportHeader.IsGridReport.Value)
                    {
                        <input type="submit" name="Print:Grid" value="Grid" id="PrintGrid" class="btn btn-primary btn-sm CurveBorder height" style="float : right ; width:5em" />
                    }

                                @if (Model.ReportHeader.IsPDFReport.HasValue && Model.ReportHeader.IsPDFReport.Value)
                                {

                                    <input type="submit" name="Print:PDF" value="PDF" id="PrintPDF" class="btn btn-primary btn-sm CurveBorder height" style="float : right ; width:5em" />
                                }*@

                <input type="submit" value="Fill" class="btn btn-primary btn-sm CurveBorder height" id="submit" style="float : right ; width:5em; background-color: #2980b9" />

            </h4>
        </div>

        <div class="panel-info" style="padding-left:15px">

            @if (!string.IsNullOrEmpty(Model.ReportHeader.Notes))
            {
            <div class="alert alert-info alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>Notes: </strong> @Model.ReportHeader.Notes
            </div>
            }

            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.ReportHeaderId)
            @Html.HiddenFor(m => m.ReportHeader.Controller)
            @Html.HiddenFor(m => m.ReportHeader.Action)
            <div class="form-horizontal" role="form">
                @Html.ValidationSummary(true)

                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                    @foreach (var item in Model.ReportLine.GroupBy(m => new { m.Type, m.IsCollapse }).OrderBy(m => m.Key.Type))
                    {
                        Regex rexp = new Regex(@"[\d\W]");
                        string key = rexp.Replace(item.Key.Type, "");
                    <div class="panel-heading" role="tab" id="@( key + item.Key.IsCollapse)h">
                        <h4 class="panel-title">
                            <span role="button" data-toggle="collapse" data-parent="#accordion" href="#@(key + item.Key.IsCollapse)d" aria-expanded="@(item.Key.IsCollapse?"false":"true")" aria-controls="@(key + item.Key.IsCollapse)d">
                                <span style="color:black" class="glyphicon glyphicon-@(item.Key.IsCollapse?"plus-sign":"minus-sign") collapse_Ico"></span>
                                @(item.Key.Type)
                            </span>
                        </h4>
                    </div>
                    <div id="@(key + item.Key.IsCollapse)d" class="panel-collapse collapse @(item.Key.IsCollapse?"":"in")" role="tabpanel" aria-labelledby="@( key + item.Key.IsCollapse)h">
                        <div class="panel-body">
                            <div class="row">


                                @foreach (var temp in item)
                                    {
                                    <div class="col-md-6" style="display:@(temp.IsVisible ? "" : "none")">
                                        <div class="form-group">
                                            @if (temp.DataType != "Constant Value")
                                                {
                                                @Html.Label(temp.DisplayName, new { @class = "control-label col-xs-4" })
                                                }

                                            <div class="col-xs-6">
                                                @switch (temp.DataType)
                                                    {
                                                        case "Text":
                                                            {

                                                    @Html.TextBox(temp.FieldName, temp.DefaultValue, new { @class = "form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })


                                                                break;
                                                            }
                                                        case "Number":
                                                            {
                                                    @Html.TextBox(temp.FieldName, temp.DefaultValue, new { @class = "form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })

                                                                break;
                                                            }
                                                        case "Date":
                                                            {
                                                                if (!string.IsNullOrEmpty(temp.DefaultValue) && temp.DefaultValue == "Today")
                                                                {
                                                    @Html.TextBox(temp.FieldName, DateTime.Now, "{0:dd/MMM/yyyy}", new { @class = "datepicker form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })
                                                                }
                                                                else
                                                                {
                                                    @Html.TextBox(temp.FieldName, null, new { @class = "datepicker form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })
                                                                }
                                                                break;
                                                            }
                                                        case "Single Select":
                                                            {

                                                                if (!string.IsNullOrEmpty(temp.ListItem))
                                                                {
                                                                    List<SelectListItem> tem = new List<SelectListItem>();
                                                                    foreach (string Litem in (temp.ListItem).Split(',').ToList())
                                                                    {
                                                                        if (Litem == temp.DefaultValue)
                                                                        {
                                                                            tem.Add(new SelectListItem { Text = Litem, Value = Litem, Selected = true });
                                                                        }
                                                                        else
                                                                        {
                                                                            tem.Add(new SelectListItem { Text = Litem, Value = Litem });
                                                                        }
                                                                    }
                                                    @Html.DropDownList(temp.FieldName, new SelectList(tem as System.Collections.IEnumerable, "Value", "Text", temp.DefaultValue), string.Empty, new { @class = "form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })
                                                                    break;
                                                                }
                                                                else
                                                                {
                                                    @Html.TextBox(temp.FieldName, temp.DefaultValue, new { @class = "form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })
                                                    <input type="hidden" id="@(temp.FieldName)s" name="@(temp.FieldName)names" value="@temp.DefaultValue" />
                                                                    break;
                                                                }
                                                            }
                                                        case "Multi Select":
                                                            {
                                                    <input type='hidden' name='@temp.FieldName' id='@temp.FieldName' value="@temp.DefaultValue" class="multisel form-control col-xs-6 @(temp.IsMandatory && temp.IsVisible ? "required" : "")" placeholder="@temp.PlaceHolder" title="@temp.ToolTip" />
                                                    <input type="hidden" id="@(temp.FieldName)s" name="@(temp.FieldName)names" />
                                                                break;
                                                            }
                                                        default:
                                                            {
                                                                break;
                                                            }
                                                    }

                                            </div>
                                        </div>
                                    </div>
                                    }
                            </div>

                        </div>
                    </div>

                    }
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                        <span style="font-family: Calibri,sans-serif,Verdana;font-size:large">
                            @*@Html.ActionLink("Back to List", "Index", "ReportHeader")*@
                        </span>
                    </div>
                </div>
            </div>



        </div>
        <div id="tableDiv"></div>
    </div>
    </form>
    @*}*@
    <script type="text/javascript">
        $('#submit').click(function () {
            GenerateDataTable();           
            return false;
        })



        var Lock = false;
        
        function GenerateDataTable() {
            if (!Lock) {
                Lock = true;
                //var table = $("#example").DataTable();
                //var FromD = $('#FromDate').val();
                //var ToD = $('#ToDate').val();
                var MName = '@ViewBag.MenuName'
                //alert($(this).attr('href'));
                $.ajax({
                    url: '/SaleInvoiceHeaderCharge/SaleInvoiceChargelist/'+ $(this).serialize(),
                    type: "POST",
                    data:$("#registerSubmit").serialize(), //{ FromDate: FromD, ToDate: ToD, MenuName: MName },
                    success: function (result) {                       
                        Lock = false;
                        if (result.Success == true) {
                            var results = result;
                            var tableHeaders="";
                            if (results.Data.length > 0)
                            {
                                var columnsIn = results.Data[0];
                                var j = 0;
                              
                                $.each(columnsIn, function (key, value) {
                                    //if(Number.isFinite(columnsIn[j]["Value"])==true)
                                    //{
                                    //    tableHeaders += "<th align='right'>" + columnsIn[j]["Key"] + "</th>";
                                    //}
                                    //else
                                    //{
                                    //tableHeaders += "<th align='left'>" + columnsIn[j]["Key"] + "</th>";
                                   tableHeaders += "<th>" + columnsIn[j]["Key"] + "</th>";
                                   // }
                                    
                                    j++;
                                });
                                //for (var key in columnsIn) {
                                //    tableHeaders += "<th>" + key + "</th>";
                                //}
                            }
                            $("#tableDiv").empty();
                            $("#tableDiv").append('<table id="displayTable" class="display" cellspacing="0" width="100%"><thead><tr style="background: #428bca;color:white">' + tableHeaders + '</tr></thead></table>');

                            var rowDataSet = [];
                            var i = 0;
                            $.each(results.Data, function (key, value) {
                                var rowData = [];
                                var j = 0;
                                var columnsIn = results.Data[i];
                                $.each(columnsIn, function (key, value) {
                                    //debugger;
                                    rowData[j] = columnsIn[j]["Value"];
                                    j++;
                                });
                              
                                rowDataSet[i] = rowData;

                                i++;
                            });
                            $('#displayTable').dataTable({
                                "bDestroy": true,
                                "bScrollCollapse": true,
                                "bJQueryUI": true,
                                "bPaginate": false,
                                "scroller": true,
                                "scrollY": "310px",
                                "scrollX": true,
                                "bInfo": true,
                                "bFilter": true,
                                
                             
                                dom: 'Bfrtip',
                                buttons: [
                                    'excel'
                                ],
                                "aaData": rowDataSet
                                // "aoColumns": dynamicColumns  //These are dynamically created columns present in JSON object.
                            });


                            //$('#displayTable').DataTable().rows.add(results.Data).draw();
                            // UpdateDataTable(result);
                            // CaclTotal();
                        }
                        else if (!result.Success) {
                            alert('Something went wrong');
                        }
                    },
                    error: function () {
                        Lock: false;
                        alert('Something went wrong');
                    }
                });



            }
            else {
                return false;
            }
        }


        $(function () {

            $('[data-toggle="tooltip"]').tooltip({
            });


            var tdate = $("#DocDate").val();
            $("#DocDate").change(function () {

                tdate = $("#DocDate").val();
            });

            var students =@Html.Raw(Json.Encode(Model.ReportLine));
            var closeOnSelect='@Model.closeOnSelect';
            $.each(students, function () {

                if (this.DataType == "Multi Select"||this.DataType=="Single Select" && !(this.ListItem))
                {

                    var getFunction= '/ComboHelpList/' + this.ServiceFuncGet;
                    var setFunction= '/ComboHelpList/' + this.ServiceFuncSet;
                    var NoofChar=this.NoOfCharToEnter;
                    var elementId= '#' + this.FieldName;
                    var bool=this.DataType=="Single Select"?false:true
                    if(!this.SqlProcGetSet)
                        CustomSelectFunction($(elementId), getFunction, setFunction, ' ', bool, NoofChar);
                    else
                        CustomSelectFunction2($(elementId), getFunction, setFunction, ' ', bool, NoofChar,this.SqlProcGetSet,(closeOnSelect=='True' ? false:true ));

                    //alert(elementId+" "+getFunction+" "+setFunction)
                }
                else if(this.DataType=="Date" )
                {
                    var getFunction='/ComboHelpList/SetDate' +"?Proc="+this.SqlProcGetSet;
                    if(this.SqlProcGetSet)
                        SetDate(getFunction,'#'+this.FieldName);
                }

            });

            function SetDate(url,elem)
            {
                $.get(url,function(data){
                    $(elem).datepicker('update',data);
                })

            }


            $(':submit').click(function(){

                var form=this;
                if($('input.has-error').length)
                {
                    alertify.error(message = "Please select all the mandatory fields", wait = '0')
                    return false;
                }
                $.each(students, function () {

                    if (this.DataType == "Multi Select")
                    {
                        var poarr=[];
                        var elementId='#'+this.FieldName;
                        var hiddenId= '#' + this.FieldName+'s';
                        var hiddendic= this.FieldName+'dic';
                        var products = (JSON.stringify($(elementId).select2('data')));
                        var obj = jQuery.parseJSON(products);
                        $.each(obj, function (key, value) {
                            poarr.push(value.text);
                        });
                        $(hiddenId).val(poarr);

                        for(var i=0;i<obj.length; i++)
                        {
                            var key="input[name='"+hiddendic+"["+i+"].Key']";
                            var val="input[name='"+hiddendic+"["+i+"].Value']";
                            if(!$(key).length)
                                $("<input type='hidden' name="+hiddendic+"["+i+"].Key />").val(obj[i].id).appendTo(form);
                            else
                                $(key).val(obj[i].id);

                            if(!$(val).length)
                                $("<input type='hidden' name="+hiddendic+"["+i+"].Value />").val(obj[i].text).appendTo(form);
                            else
                                $(val).val(obj[i].text);
                        }

                    }
                    if (this.DataType=="Single Select")
                    {
                        var poarr=[];
                        var elementId='#'+this.FieldName;
                        var hiddenId= '#' + this.FieldName+'s';
                        var hiddendic= '#' + this.FieldName+'dic';
                        $(hiddenId).val($(elementId).select2('data').text);
                    }

                });

            })

        });


        $('.collapse').on('hidden.bs.collapse', toggleSign);
        $('.collapse').on('shown.bs.collapse', toggleSign);

        function toggleSign(e)
        {
            $(e.target).prev('.panel-heading').find('span.collapse_Ico').toggleClass("glyphicon-plus-sign glyphicon-minus-sign")
        }

        $(document).on("mouseover",".select2-container",function(){
            $(".select2-container").tooltip({
                title: function(){
                    return $(this).next('input').attr("title");
                },
            });
        })

        $('input:checkbox').click(function(e){

            if($(e.target).is(":checked"))
            {
                $.ajax({
                    async:true,
                    type:"POST",
                    url:"/ReportLayout/SetSelectOption",
                    data:{Checked:$('#closeOnSelect').is(":checked")},
                    success:function(data)
                    {
                        if(data.success)
                            window.location.reload();
                    }
                })
            }
            else
            {
                $('select2-input').select2({
                    "closeOnSelect": true,
                });
            }

        })

    </script>
