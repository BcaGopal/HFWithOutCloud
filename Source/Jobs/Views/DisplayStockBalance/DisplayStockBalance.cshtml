@using Core.Common;
@using Model.ViewModel;
@model Service.Display_StockBalanceViewModel
@using System.Text.RegularExpressions

@{
    ViewBag.Title = "Stock Balance Display";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .grid {
        width: 1140px;
        height: 80vh;
    }

    .ui-grid-cell {
        border-style: solid;
        border-width: thin;
    }

    .text-right {
        text-align: right;
        /*float: right;*/
    }

    .cell-text {
        font-size: 13px;
        font-weight: normal;
    }

    .header-text {
        font-size: 13px;
    }


    .ui-grid-viewport .ui-grid-cell-contents {
        word-wrap: break-word;
        white-space: normal !important;
    }

    .ui-grid-row, .ui-grid-cell {
        height: auto !important;
    }

        .ui-grid-row div[role=row] {
            display: flex;
            align-content: stretch;
        }

    .ui-grid-header-cell-label {
        display: inline-block;
        white-space: initial;
    }

    .isa_error {
        color: #D8000C;
        background-color: #FFD2D2;
    }
</style>
<!doctype html>
<html ng-app="StockBalanceDisplay">
<head>
    <title>
        UI-Grid
    </title>

    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/angular-touch.js"></script>
    <script src="~/Scripts/angular-animate.js"></script>
    <script data-require="angular.js@1.4.x" src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.6/angular.min.js" data-semver="1.4.6"></script>
    <script src="http://ui-grid.info/docs/grunt-scripts/csv.js"></script>
    <script src="http://ui-grid.info/docs/grunt-scripts/pdfmake.js"></script>
    <script src="http://ui-grid.info/docs/grunt-scripts/vfs_fonts.js"></script>
    <script src="http://ui-grid.info/release/ui-grid-unstable.js"></script>
    <link rel="stylesheet" href="http://ui-grid.info/release/ui-grid-unstable.css" type="text/css">
    <script src="~/Scripts/JSTable/jspdf.debug.js"></script>
    <script src="~/Scripts/JSTable/faker.min.js"></script>
    <script src="~/Scripts/JSTable/jspdf.plugin.autotable.js"></script>
    <script src="~/Scripts/JSTable/examples.js"></script>

    <script src="http://ui-grid.info/docs/grunt-scripts/lodash.min.js"></script>
    <script src="http://ui-grid.info/docs/grunt-scripts/jszip.min.js"></script>
    <script src="http://ui-grid.info/docs/grunt-scripts/excel-builder.dist.js"></script>

</head>
<body id="MyBody">
    <div ng-controller="MainCtrl">
        <div id='myModal' class='modal fade in'>
            <div class="modal-dialog">
                <div class="modal-content">
                    <div id='myModalContent'></div>
                </div>
            </div>
        </div>
        <div class="panel panel-default" style="margin-bottom:0px">
            <div class="panel-heading">
                <h4>
                    <span> Stock In Hand </span>
                    <input type="submit" id="Fill" value="Fill" ng-click="BindData()" class="btn btn-primary btn-sm CurveBorder height" style="float : right ; width:5em; background-color: #2980b9" />
                    <span role="button" id="ShowFilters">
                        <span class="btn btn-primary btn-sm CurveBorder height" style="float : right ; width:5em; background-color: #2980b9; margin-right:2px" />
                        Filters
                    </span>
                </h4>

            </div>
            <form action="/" id="registerSubmit">
                <div class="panel-info" style="padding-left:15px">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.TextHidden)
                    @Html.HiddenFor(m => m.ReportHeaderCompanyDetail.CompanyName)
                    @Html.HiddenFor(m => m.ReportHeaderCompanyDetail.Address)
                    @Html.HiddenFor(m => m.ReportHeaderCompanyDetail.CityName)
                    @Html.HiddenFor(m => m.ReportHeaderCompanyDetail.Phone)
                    @Html.HiddenFor(m => m.ReportHeaderCompanyDetail.LogoBlob)
                    <div class="form-horizontal" role="form" id="ReportFilters">
                        @Html.ValidationSummary(true)
                        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group" style="margin-top:15px">
                                            @Html.LabelFor(model => model.FromDate, "From Date", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.FromDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required", autocomplete = "false" })
                                                @Html.ValidationMessageFor(m => m.FromDate, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group" style="margin-top:15px">
                                            @Html.LabelFor(model => model.ToDate, "To Date", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.ToDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                                @Html.ValidationMessageFor(m => m.ToDate, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductNature, "Product Nature", new { @class = "control-label col-md-4 col-sm-2" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.ProductNature, null, new { @class = "form-control col-xs-6", @id = "ProductNature" })
                                                @Html.ValidationMessageFor(m => m.ProductNature, null, new { @class = "has-error" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductType, "Product Types", new { @class = "control-label col-md-4 col-sm-2" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.ProductType, null, new { @class = "form-control col-xs-6" })
                                                @Html.ValidationMessageFor(m => m.ProductType, null, new { @class = "has-error" })
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductCategory, "Product Category", new { @class = "control-label col-md-4 col-sm-2" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.ProductCategory, null, new { @class = "form-control col-xs-6" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductGroup, "Product Group", new { @class = "control-label col-md-4 col-sm-2" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.ProductGroup, null, new { @class = "form-control col-xs-6" })
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Godown, "Godown", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.Godown, null, new { @class = "form-control col-xs-6" })
                                                </div>
                                            </div>
                                        </div>*@
                                    @*<div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Process, "Process", new { @class = "control-label col-md-4 col-sm-2" })
                                                <div class="col-xs-6">
                                                    @Html.TextBoxFor(m => m.Process, null, new { @class = "form-control col-xs-6" })
                                                </div>
                                            </div>
                                        </div>*@

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.SiteIds, "Site", new { @class = "control-label col-md-4 col-sm-2" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.SiteIds, null, new { @class = "form-control col-xs-6" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DivisionIds, "Division", new { @class = "control-label col-md-4 col-sm-2" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.DivisionIds, null, new { @class = "form-control col-xs-6" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.PlanNo, "Plan No", new { @class = "control-label col-md-4 col-sm-2" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.PlanNo, null, new { @class = "form-control col-xs-6" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ShowBalance, "Show Balance", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @*@Html.DropDownListFor(m => m.ShowBalance, new SelectList(ViewBag.ShowBalanceList as System.Collections.IEnumerable, "Value", "Text"), new { @class = "form-control col-xs-6 required height" })*@
                                                @Html.TextBoxFor(m => m.ShowBalance, null, new { @class = "form-control col-xs-6" })
                                                @Html.ValidationMessageFor(m => m.ShowBalance, null, new { @class = "has-error" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.GroupOn, "Group On", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @*@Html.DropDownList("GroupOn", new SelectList(ViewBag.GroupOnList as System.Collections.IEnumerable, "Value", "Text"), new { @class = "form-control col-xs-6 required", @multiple = "multiple", @id = "GroupOn" })*@
                                                @Html.TextBoxFor(m => m.GroupOn, null, new { @class = "form-control col-xs-6" })
                                                @Html.ValidationMessageFor(m => m.GroupOn, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ShowBalance, "Show Opening", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.CheckBoxFor(m => m.ShowOpening, new { @class = "checkbox col-xs-1", @id = "ShowOpening" })
                                                @Html.ValidationMessageFor(model => model.ShowOpening)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Provision, "Record Of", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Provision, null, new { @class = "form-control col-xs-6" })
                                                @Html.ValidationMessageFor(m => m.Provision, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6" style="display:none">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Process, "Process", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Process, new { @class = "form-control col-xs-6", @id = "Process" })
                                                @Html.ValidationMessageFor(model => model.Process)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6" style="display:none">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Godown, "Godown", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Godown, new { @class = "form-control col-xs-6", @id = "Godown" })
                                                @Html.ValidationMessageFor(model => model.Godown)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Name, "Name", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control col-xs-6", @id = "Name" })
                                                @Html.ValidationMessageFor(model => model.Name)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Product, "Product", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Product, new { @class = "form-control col-xs-6", @id = "Product" })
                                                @Html.ValidationMessageFor(model => model.Product)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Dimension3Name, "Size", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Dimension3Name, new { @class = "form-control col-xs-6", @id = "Dimension3Name" })
                                                @Html.ValidationMessageFor(model => model.Dimension3Name)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Dimension2Name, "Design", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Dimension2Name, new { @class = "form-control col-xs-6", @id = "Dimension2Name" })
                                                @Html.ValidationMessageFor(model => model.Dimension2Name)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Dimension1Name, "Shade", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Dimension1Name, new { @class = "form-control col-xs-6", @id = "Dimension1Name" })
                                                @Html.ValidationMessageFor(model => model.Dimension1Name)
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Dimension4Name, "Fabric", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.Dimension4Name, new { @class = "form-control col-xs-6", @id = "Dimension4Name" })
                                                @Html.ValidationMessageFor(model => model.Dimension4Name)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">

                                <span style="font-family: Calibri,sans-serif,Verdana;font-size:large">
                                </span>
                            </div>
                        </div>
                    </div>

                </div>
                <div id="tableDiv"></div>
            </form>
        </div>

        <div ui-grid="gridOptions" ui-grid-exporter ui-grid-cellnav ui-grid-resize-columns ui-grid-move-columns ui-grid-pinning class="grid" style="margin-top:0px"></div>
    </div>
    <script src="~/Scripts/DisplayStockbalance/DisplayStockBalance.js"></script>
    <script src="~/Scripts/ui-grid.js"></script>
    <link href="~/Content/ui-grid.css" rel="stylesheet" />

</body>
</html>
<script type="text/ng-template" id="ui-grid/uiGridCell">
    <div class="ui-grid-cell-contents my-cell" ng-dblclick="grid.appScope.ShowDetail()">{{COL_FIELD CUSTOM_FILTERS}}</div>
    @*<a href='#####{{row.entity.LedgerAccountGroupId}}'>{{row.entity.LedgerAccountGroupName}}</a>*@
</script>


<script type="text/javascript">

        CustomSelectFunction($("#DivisionIds"), '/ComboHelpList/GetDivision', '/ComboHelpList/SetSingleDivision', ' ', false, 0);
        CustomSelectFunction($("#SiteIds"), '/ComboHelpList/GetSite', '/ComboHelpList/SetSingleSite', ' ', false, 0);
        CustomSelectFunction($("#PlanNo"), '/ComboHelpList/GetPlanNos', '/ComboHelpList/SetPlanNo', ' ', true, 0);

        CustomSelectFunction($("#ProductType"), '/ComboHelpList/GetProductType', '/ComboHelpList/SetSingleProductType', ' ', false, 0);
      //  CustomSelectFunction($("#JobWorker"), '/ComboHelpList/GetPerson', '/ComboHelpList/SetSinglePerson', ' ', false, 0);
        CustomSelectFunction($("#ProductCategory"), '/ComboHelpList/GetProductCategory', '/ComboHelpList/SetSingleProductCategory', ' ', false, 0);
        CustomSelectFunction($("#ProductGroup"), '/ComboHelpList/GetProductGroup', '/ComboHelpList/SetSingleProductGroup', ' ', false, 0);
        CustomSelectFunction($("#GroupOn"), '/DisplayStockBalance/GetGroupOn', '/DisplayStockBalance/SetGroupOn', ' ', true, 0);
        CustomSelectFunction($("#ShowBalance"), '/DisplayStockBalance/GetShowBalence', '/DisplayStockBalance/SetShowBalence', ' ', false, 0);
        CustomSelectFunction($("#Provision"), '/DisplayStockBalance/GetProvision', '/DisplayStockBalance/SetProvision', ' ', false, 0);
       /////GetProductNature
        CustomSelectFunction($("#ProductNature"), '/ComboHelpList/GetProductNature', '/ComboHelpList/SetSingleProductNature', ' ', false, 0);
      //  CustomSelectFunction($("#ProductNatureName"), '/ComboHelpList/GetProductNature', '/ComboHelpList/SetSingleProductNature', ' ', false, 0);
        CustomSelectFunction($("#Process"), '/ComboHelpList/GetProcess', '/ComboHelpList/SetSingleProcess', ' ', false, 0);
        CustomSelectFunction($("#Godown"), '/ComboHelpList/GetGodown', '/ComboHelpList/SetSingleGodown', ' ', false, 0);
        CustomSelectFunction($("#Name"),  '/ComboHelpList/SetJobWorkers', '/ComboHelpList/SetSingleJobWorker', ' ', false, 0);
        CustomSelectFunction($("#Product"), '/ComboHelpList/GetProducts', '/ComboHelpList/SetSingleProducts', ' ', false, 0);
        CustomSelectFunction($("#Dimension1Name"), '/ComboHelpList/GetDimension1', '/ComboHelpList/SetSingleDimension1', ' ', false, 0);
        CustomSelectFunction($("#Dimension2Name"), '/ComboHelpList/GetDimension2', '/ComboHelpList/SetSingleDimension2', ' ', false, 0);
        CustomSelectFunction($("#Dimension3Name"), '/ComboHelpList/GetDimension3', '/ComboHelpList/SetSingleDimension3', ' ', false, 0);
        CustomSelectFunction($("#Dimension4Name"), '/ComboHelpList/GetDimension4', '/ComboHelpList/SetSingleDimension4', ' ', false, 0);
    //// ***** Start****
       $('#Fill').click(function () {
            //$('#ReportFilters').toggle();
            //$("#ReportFilters").slideToggle();
            var div = document.getElementById('ReportFilters');
            if (div.style.display !== 'none') {
                $("#ReportFilters").toggle();
            }
        });



        $('#ShowFilters').click(function () {
            $('#ReportFilters').slideToggle();
        });
    ///// ***** End *****
        $('.collapse').on('hidden.bs.collapse', toggleSign);
        $('.collapse').on('shown.bs.collapse', toggleSign);

        function toggleSign(e)
        {
            $(e.target).prev('.panel-heading').find('span.collapse_Ico').toggleClass("glyphicon-plus-sign glyphicon-minus-sign")
        }

        $(document).on("mouseover", ".select2-container", function () {
            $(".select2-container").tooltip({
                title: function () {
                    return $(this).next('input').attr("title");
                },
            });
        });



        $('input:checkbox').click(function(e){

            if($(e.target).is(":checked"))
            {
                $.ajax({
                    async:true,
                    type:"POST",
                    url:"/ReportLayout/SetSelectOption",
                    data:{Checked:$('#closeOnSelect').is(":checked")},
                    success:function(data)
                    {
                        //if (data.success)
                        //{
                        //    $()
                        //}
                        //else {

                        //}

                    }
                })
            }
            else
            {
                $('select2-input').select2({
                    "closeOnSelect": false,
                });
            }

        })

        //Add for multiple select

    var GroupOnItems='@Model.GroupOn';
    CustomSelectFunction($("#DivisionIds"), '/ComboHelpList/GetDivision', '/ComboHelpList/SetDivision', ' ', true, 1);
    CustomSelectFunction($("#SiteIds"), '/ComboHelpList/GetSite', '/ComboHelpList/SetSite', ' ', true, 1);

    $('#GroupOnSelect').select2();

    var poarr = [];
    var val="";
    $.each(GroupOnItems.split(','), function (value, index) {
        poarr.push(index);
    })
    $('#GroupOnSelect').select2("val",poarr);

    var IsSaved=false;
    var ValidationCount = 0;
    $('form').submit(function(event){

        if(!IsSaved)
        {
            if(!ValidateData())
            {
                return false;
            }
            IsSaved = true;
            AssignSelect2Data();
            return IsSaved;
        }
        else
        {
            return false;
        }


        //function AssignSelect2Data() {
        //    $('#GroupOn').val($('#GroupOnSelect').select2('val'));
        //}

        function ValidateData() {
            var ValidationMessage = "";

            return (ValidationMessage == "");
        }
    });



</script>
