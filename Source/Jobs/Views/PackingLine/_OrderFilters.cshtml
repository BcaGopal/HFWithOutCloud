@model Model.ViewModels.PackingFilterViewModel
@using Core.Common

<div class="modal-content">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Filters</span>
        </h3>
    </div>
    <div>
        @using (Html.BeginForm("_FilterPostOrders", "PackingLine", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {
           

            <div class="form-horizontal modal-body">

                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PackingHeaderId)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SaleOrderHeaderId, "Sale Orders", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.SaleOrderHeaderId, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.SaleOrderHeaderId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductId, "Product ", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.ProductId, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                <span id="status" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6" style="display:@(Model.PackingSettings.isVisibleDimension1 ? "" : "none")">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Dimension1Id, "Dimension1 ", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.Dimension1Id, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.Dimension1Id, "", new { @class = "text-danger" })
                                <span id="status" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6" style="display:@(Model.PackingSettings.isVisibleDimension1 ? "" : "none")">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Dimension2Id, "Dimension2 ", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.Dimension2Id, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.Dimension2Id, "", new { @class = "text-danger" })
                                <span id="status" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                 
               
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductGroupId, "Product Group", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.ProductGroupId, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.ProductGroupId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">
                    <button class="btn custom" name="Command:Edit" type="submit"><h2 style="margin:0px" id="submit" title="Proceed"><span class="glyphicon glyphicon-arrow-right black"></span> </h2></button>
                </div>

            </div>

        }
    </div>
</div>


<script type="text/javascript">

    var DocID = $('#PackingHeaderId', '.modal-body').val();
    $(document).ready(function () {
        CustomSelectFunction($("#ProductGroupId"), '/ComboHelpList/GetProductGroup', '/ComboHelpList/SetProductGroup', 'Enter Group Name', true, 1);
        CustomSelectFunction($("#ProductId"), '/PackingLine/GetCustomProductsForPacking', '/ComboHelpList/SetProducts', ' ', true, 1, DocID);
        CustomSelectFunction($("#SaleOrderHeaderId"), '/PackingLine/GetSaleOrder', '/ComboHelpList/SetSaleOrder', ' ', true, 1, DocID);
        CustomSelectFunction($("#Dimension1Id"), '/ComboHelpList/GetDimension1', '/ComboHelpList/SetSingleDimension1', 'Enter Dimension1', true, 1);
        CustomSelectFunction($("#Dimension2Id"), '/ComboHelpList/GetDimension2', '/ComboHelpList/SetSingleDimension2', 'Enter Dimension2', true, 1);

    });

    
    //var URL = '/PackingLine/GetSaleOrders/' + DocID;
    //$("#SaleOrderHeaderId").select2({
    //    minimumInputLength: 0,
    //    multiple: true,
    //    ajax: {
    //        url: URL,
    //        dataType: 'json',
    //        type: "GET",
    //        quietMillis: 1000,
    //        data: function (term) {
    //            return {
    //                term: term,
    //                Limit:20,
    //            };
    //        },
    //        results: function (data) {
    //            return {
    //                results: $.map(data, function (item) {
    //                    return {
    //                        text: item.PropFirst,
    //                        id: item.Id
    //                    }
    //                })

    //            };
    //        }
    //    },


    //});


    //var URL = '/PackingLine/GetCustomProductsForSaleOrder/' + DocID;
    //$("#ProductId").select2({
    //    minimumInputLength: 1,
    //    multiple: true,
    //    ajax: {
    //        url: URL,
    //        dataType: 'json',
    //        type: "GET",
    //        quietMillis: 1000,
    //        data: function (term) {
    //            return {
    //                term: term,
    //                Limit:20,
    //            };
    //        },
    //        results: function (data) {
    //            return {
    //                results: $.map(data, function (item) {
    //                    return {
    //                        text: item.ProductName,
    //                        id: item.ProductId
    //                    }
    //                })

    //            };
    //        }
    //    },


    //});

</script>