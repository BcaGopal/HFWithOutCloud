@model Model.ViewModel.MaterialPlanSummaryViewModel
@using Core.Common

<style type="text/css">
    #gbody-modal {
        height: 250px;
        overflow-y: scroll;
        width: 100%;
    }

    tbody td {
        padding: 2px 2px 2px 2px;
    }

    .textRight {
        text-align: right;
    }
    /*th div{
        position:absolute;
    }*/
</style>

<div class="modal-content">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Sale Orders & Quantities</span>
        </h3>
    </div>
    <div>
        @{
            int unitDecimalPlaces = 0;
        }
        @using (Html.BeginForm("_SummaryPostSaleOrder", "MaterialPlanLineNew", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal modal-body" style="padding-top:0px">
                @Html.ValidationSummary(true)

                <div style="padding-right:15px">
                    <div class="row">

                        <div class="form-horizontal">


                     
                            <div class="panel panel-default" id="grid">
                                <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                                    <div class="row grid-head">
                                        <div class="block text-left" style="width:5%">
                                            Srl.
                                        </div>
                                        <div class="block" style="width:92%">
                                            <div class="row">
                                                @*ProductInfo*@
                                                <div class="block" style="width:20%">
                                                    Product Name
                                                </div>
                                                @*Qty*@
                                                <div class="block text-right" style="width:13%">
                                                    Required <br />Qty
                                                </div>

                                                <div class="text-right block" style="width:13%">
                                                    Excess<br />Stock Qty
                                                </div>
                                                <div class="block text-right" style="width:13%">
                                                    <a href="#" id="ToPlan" style="color:white">Stock<br />Plan Qty</a>
                                                </div>
                                                <div class="block text-right" style="width: 13%; display: @(Model.MaterialPlanSettings.isVisibleProdPlanQty?"":"none")">
                                                    <a href="#" id="ToProduction" style="color:white">Production<br />Plan Qty</a>
                                                </div>
                                                @*Remark*@
                                                <div class="block text-right" style="width: 13%; display: @(Model.MaterialPlanSettings.isVisiblePurchPlanQty?"":"none")">
                                                    <a href="#" id="ToPurchase" style="color:white">Purchase <br />Plan Qty</a>
                                                </div>
                                                <div class="block" style="width:15%">
                                                    Remark
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="panel-info" id="gbody-modal">
                                    @{
            decimal RequiredQty = 0;
            decimal StockPlanQty = 0;
            decimal ProdPlanQty = 0;
            decimal PurchPlanQty = 0;
                                    }
                                    @for (int i = 0; i < Model.PlanLine.Count(); i++)
                                    {




                                        <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>


                                            <div class='block row-index' style='width:5%'>
                                                @Html.HiddenFor(m => m.PlanLine[i].MaterialPlanHeaderId)
                                                @Html.HiddenFor(m => m.PlanLine[i].ProductName)
                                                @Html.HiddenFor(m => m.PlanLine[i].RequiredQty)
                                                @Html.HiddenFor(m => m.PlanLine[i].ExcessStockQty)
                                                @Html.HiddenFor(m => m.PlanLine[i].ProductId)
                                                @Html.HiddenFor(m => m.PlanLine[i].GeneratedFor)
                                                @Html.HiddenFor(m => m.PlanLine[i].ProcessId)
                                                @Html.HiddenFor(m => m.PlanLine[i].Dimension1Id)
                                                @Html.HiddenFor(m => m.PlanLine[i].Dimension2Id)
                                                @Html.HiddenFor(m => m.PlanLine[i].Dimension3Id)
                                                @Html.HiddenFor(m => m.PlanLine[i].Dimension4Id)
                                                @Html.HiddenFor(m => m.PlanLine[i].Dimension1Name)
                                                @Html.HiddenFor(m => m.PlanLine[i].Dimension2Name)
                                                @Html.HiddenFor(m => m.PlanLine[i].Dimension3Name)
                                                @Html.HiddenFor(m => m.PlanLine[i].Dimension4Name)
                                                @Html.HiddenFor(m => m.PlanLine[i].ProcessName)
                                                @Html.HiddenFor(m => m.PlanLine[i].UnitName)
                                                @Html.HiddenFor(m => m.PlanLine[i].unitDecimalPlaces)
                                                @Html.HiddenFor(m => m.PlanLine[i].Specification)
                                                @{
                                        if (unitDecimalPlaces < Model.PlanLine[i].unitDecimalPlaces)
                                        {
                                            unitDecimalPlaces = Model.PlanLine[i].unitDecimalPlaces ?? 0;
                                        }
                                                }
                                                @(i + 1)
                                            </div>
                                            <div class='block pull-middle' style='width:94%'>

                                                <div class='row'>

                                                    <div class='block' style='width:20%'>
                                                        <strong> @Model.PlanLine[i].ProductName</strong>
                                                        <p style="margin-bottom:0px">
                                                            @{
                                        var Dim1 = (string.IsNullOrEmpty(Model.PlanLine[i].Dimension1Name) || Model.MaterialPlanSettings.isVisibleDimension1 == false) ? "" : Model.PlanLine[i].Dimension1Name + ",";
                                        var Dim2 = (string.IsNullOrEmpty(Model.PlanLine[i].Dimension2Name) || Model.MaterialPlanSettings.isVisibleDimension2 == false) ? "" : Model.PlanLine[i].Dimension2Name + ",";
                                        var Dim3 = (string.IsNullOrEmpty(Model.PlanLine[i].Dimension3Name) || Model.MaterialPlanSettings.isVisibleDimension3 == false) ? "" : Model.PlanLine[i].Dimension3Name + ",";
                                        var Dim4 = (string.IsNullOrEmpty(Model.PlanLine[i].Dimension4Name) || Model.MaterialPlanSettings.isVisibleDimension4 == false) ? "" : Model.PlanLine[i].Dimension4Name;
                                        var Processname = (string.IsNullOrEmpty(Model.PlanLine[i].ProcessName) || Model.MaterialPlanSettings.isMandatoryProcessLine == false) ? "" : Model.PlanLine[i].ProcessName;
                                        var Spec = (string.IsNullOrEmpty(Model.PlanLine[i].Specification)) ? "" : Model.PlanLine[i].Specification;
                                                            }

                                                            @Dim1 @Dim2 
                                                        </p>
                                                        <p>@Spec</p>
                                                        <p style="margin-bottom:0px">
                                                            @Processname
                                                        </p>

                                                    </div>
                                                    <div>
                                                        <div class='block text-right' style='width:13%'>
                                                            <span id="requiredQty"> @Model.PlanLine[i].RequiredQty</span>
                                                            <div><small> @Model.PlanLine[i].UnitName</small></div>
                                                            @{RequiredQty += Model.PlanLine[i].RequiredQty;}
                                                        </div>

                                                        <div class='block text-right' style='width:13%'>
                                                            @(Model.PlanLine[i].ExcessStockQty)
                                                        </div>
                                                        <div class='block text-right pull-middle' style='width:13%'>
                                                            @Html.TextBoxFor(m => Model.PlanLine[i].StockPlanQty, new { @class = "form-control text-right stockplanQty" })
                                                            @{StockPlanQty += Model.PlanLine[i].StockPlanQty;}
                                                        </div>
                                                        <div class='block text-right' style='width: 13%; display: @(Model.MaterialPlanSettings.isVisibleProdPlanQty?"":"none")'>
                                                            @Html.TextBoxFor(m => Model.PlanLine[i].ProdPlanQty, new { @class = "form-control text-right prodQty" })
                                                            @{ProdPlanQty += Model.PlanLine[i].ProdPlanQty;}
                                                        </div>
                                                        <div class='block text-right' style='width: 13%; display: @(Model.MaterialPlanSettings.isVisiblePurchPlanQty?"":"none")'>
                                                            @Html.TextBoxFor(m => Model.PlanLine[i].PurchPlanQty, new { @class = "form-control text-right purchQty" })
                                                            @{PurchPlanQty += Model.PlanLine[i].PurchPlanQty;}
                                                        </div>
                                                        <div class='block' style='width: @(Model.MaterialPlanSettings.isVisiblePurchPlanQty || Model.MaterialPlanSettings.isVisibleProdPlanQty ? "15" : "28")%'>
                                                            @Html.TextBoxFor(m => Model.PlanLine[i].Remark, new { @class = "form-control" })
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>

                                        </div>
                                        <hr style='margin-top:0px;margin-bottom:0px' />

                                    }



                                </div>
                            </div>




                            <div class="row grid-head" style="margin-left:0px;margin-right:0px">
                                <div class="block text-left" style="width:5%">

                                </div>
                                <div class="block" style="width:92%">
                                    <div class="row">
                                        @*ProductInfo*@
                                        <div class="block" style="width:20%">
                                            <strong>Total</strong>
                                        </div>
                                        @*Qty*@
                                        <div class="block text-right" style="width:13%">
                                            <strong>@RequiredQty</strong>
                                        </div>

                                        <div class="text-right block" style="width:13%">

                                        </div>
                                        <div class="block text-right" style="width:13%">
                                            <strong><span id="StockPlanQty">@StockPlanQty</span></strong>
                                        </div>
                                        <div class="block text-right" style="width:13%">
                                            <strong><span id="ProdPlanQty">@ProdPlanQty</span></strong>
                                        </div>
                                        @*Remark*@
                                        <div class="block text-right" style="width:13%">
                                            <strong><span id="PurchPlanQty">@PurchPlanQty</span></strong>
                                        </div>
                                        <div class="block" style="width:15%">

                                        </div>
                                    </div>
                                </div>
                            </div>









                        </div>
                    </div>
                </div>
                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">
                    <button class="btn custom" name="Command:Edit" type="submit" id="submit"><h2 style="margin:0px" title="Proceed"><span class="glyphicon glyphicon-floppy-disk black black"></span> </h2></button>
                </div>
            </div>
        }
    </div>
</div>




<script type="text/javascript">

    var Tofixedpoint = @unitDecimalPlaces;

    $('input.prodQty,input.stockplanQty,input.purchQty').change(function () {

        var $div = $(this).closest('div.row');
        var reqqty = parseFloat($div.find('#requiredQty').text()) || 0;
        var prodqty = parseFloat($div.find('input.prodQty').val()) || 0;
        var stockplanQty = parseFloat($div.find('input.stockplanQty').val()) || 0;
        var purchQty = parseFloat($div.find('input.purchQty').val()) || 0;

        var bal = (prodqty + stockplanQty + purchQty) - (reqqty);

        if (bal < 0) {
            $('#modform').find('#submit').attr('disabled', 'disabled');
            if (!$('#modform').find('.modal-body #errormsg').length) {
                $('#modform').find('.modal-body').prepend("<div class='alert alert-danger'><span id=errormsg >Plan Qty should not be less than required qty</span></div>")
            }
            else {
                $('#modform').find('#errormsg').text("Plan Qty should not be less than required qty");
            }

        }
        else if (bal > 0) {
            if (!$('#modform').find('.modal-body #errormsg').length) {
                $('#modform').find('.modal-body').prepend("<div class='alert alert-danger'><span id=errormsg>Qty exceeding Required Qty</span></div>")
            }
            else {
                $('#modform').find('#errormsg').text("Qty exceeding Required Qty");
            }
            $('#modform').find('#submit:disabled').removeAttr('disabled');
        }
        else {
            $('#modform').find('#submit:disabled').removeAttr('disabled');
            if ($('#modform').find('.modal-body #errormsg').length) {
                $('#modform').find('#errormsg').parent().remove();
            }
        }

        CalculateTotal();

    })

    function CalculateTotal() {
        var StockCount = 0;
        var ProdCount = 0;
        var PurchCount = 0;
        $('.row.crow.grid-body', '.modal-body').each(function () {

            if ($(this).find('input.stockplanQty').val()) {
                StockCount += parseFloat($(this).find('input.stockplanQty').val());
            }
            if ($(this).find('input.prodQty').val()) {
                ProdCount += parseFloat($(this).find('input.prodQty').val());
            }
            if ($(this).find('input.purchQty').val()) {
                PurchCount += parseFloat($(this).find('input.purchQty').val());
            }

        })
        $('#StockPlanQty', '.modal-body').text(StockCount.toFixed(Tofixedpoint));
        $('#ProdPlanQty', '.modal-body').text(ProdCount.toFixed(Tofixedpoint));
        $('#PurchPlanQty', '.modal-body').text(PurchCount.toFixed(Tofixedpoint));
    }

    $('#ToPlan').click(function () {

        $('.row').each(function (index) {
            $div = $(this);
            var reqqty = parseFloat($div.find('#requiredQty').text()) || 0;
            $div.find('input.prodQty').val(0);
            $div.find('input.stockplanQty').val(reqqty);
            $div.find('input.purchQty').val(0);
        })
        CalculateTotal();

    })

    $('#ToProduction').click(function () {

        $('.row').each(function (index) {
            $div = $(this);
            var reqqty = parseFloat($div.find('#requiredQty').text()) || 0;
            $div.find('input.prodQty').val(reqqty);
            $div.find('input.stockplanQty').val(0);
            $div.find('input.purchQty').val(0);
        })
        CalculateTotal();
    })

    $('#ToPurchase').click(function () {

        $('.row').each(function (index) {
            $div = $(this);
            var reqqty = parseFloat($div.find('#requiredQty').text()) || 0;
            $div.find('input.prodQty').val(0);
            $div.find('input.stockplanQty').val(0);
            $div.find('input.purchQty').val(reqqty);
        })
        CalculateTotal();

    })


</script>