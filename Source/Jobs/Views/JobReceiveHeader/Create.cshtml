@model Model.ViewModel.JobReceiveHeaderViewModel
@using Core.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Post", "JobReceiveHeader", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.Status)
    @Html.HiddenFor(m => m.JobReceiveHeaderId)
    @Html.HiddenFor(m => m.DocTypeId)
    @*@Html.HiddenFor(m => m.ProcessId)*@
    @Html.HiddenFor(m => m.CreatedDate)
    @Html.HiddenFor(m => m.JobReceiveSettings.ProcessId)

    <div class="panel panel-default">
        <div class="panel-heading">
           
            @CustomHelpers.RenderResHeaderInfo(ViewBag.transactionType, (int ?)ViewBag.PendingToSubmit, (int ?)ViewBag.PendingToReview, ViewBag.Name)

            @*@if (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue")
            {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Submit @ViewBag.Name</span>
                <button type="submit" name="Command:Submit" class="btn btn-primary right" id="SubmitContinue" style="margin-left:5px;">Submit & Next<span class='badge'>@(ViewBag.PendingToSubmit != 0 ? ViewBag.PendingToSubmit : "")</span></button>
                <button type="submit" name="Command:Submit" class="btn btn-primary right">Submit</button>
                <input type="hidden" id="IsContinue" name="IsContinue" value="" />
            </h3>}
            else if (ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue")
            {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Review @ViewBag.Name</span>
                <button type="submit" name="Command:Review" class="btn btn-primary right" style="margin-left:5px" id="ReviewContinue">Review & Next<span class='badge'>@(ViewBag.PendingToReview != 0 ? ViewBag.PendingToReview : "")</span></button>
                <button type="submit" class="btn btn-primary right" name="Command:Review">Review</button>
                <input type="hidden" id="IsContinue" name="IsContinue" value="" />
            </h3>}
            else if (ViewBag.transactionType == "detail")
            {
                <h3>
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>
                </h3>
            }
            else
            {
                <h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                </h3>
            }*@

            @*@if (Model.JobReceiveSettings.IsVisibleForOrderMultiple)
            {
            @Html.ActionLink("For Order", "_ForOrder", "JobReceiveLine", new { id = @Model.JobReceiveHeaderId, sid = @Model.JobWorkerId }, new { data_modal = "", id = "btnCreateF", @class = "btn btn-primary borderradii", @data_detailDeleted = "true", @title = "For Order", @data_toggle = "tooltip", @style = "background-color:#2980b9" })
            }*@
            <hr style="margin-top: 5px; margin-bottom: 5px; border-top: 1px solid #d8d5d5" />

            @{
                string EditAction = "";
                if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                {
                    EditAction = "Modify";
                }
                else if ((Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified))
                {
                    EditAction = "ModifyAfter_Submit";
                }
                else
                {
                    EditAction = "DetailInformation";
                }
            }

            <div class="panel-info">
                @*<h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                     @Html.ActionLink(" ", "Create", "JobReceiveHeader", new { @id = ViewBag.id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                     @Html.ActionLink(" ", "GetHistory", "LogHistory", new { Ids = Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip", @id = "DocHistory", @data_modal = "" })
                     @Html.ActionLink(" ", "GeneratePrints", "JobReceiveHeader", new { Ids = Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })
                     @Html.ActionLink(" ", "Email", "JobReceiveHeader", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                     @Html.ActionLink(" ", "PrevPage", "JobReceiveHeader", new { DocId = @Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                     @Html.ActionLink(" ", "NextPage", "JobReceiveHeader", new { DocId = @Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })*@
                    @*@Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-trash toolbar", @title = "Delete", @data_toggle = "tooltip" })*@
                    @*@Html.ActionLink(" ", "Index", "JobReceiveHeader", new { @id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Report", "JobReceiveHeader", null, new { @class = "glyphicon glyphicon-th toolbar right", @title = "Report", @data_toggle = "tooltip" })
                </h4>*@
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "JobReceiveHeader", new { @id = ViewBag.id }, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", EditAction, "JobReceiveHeader", new { @id = Model.JobReceiveHeaderId, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-edit", @title = "Edit", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "GeneratePrints", "JobReceiveHeader", new { Ids = Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })
                    @Html.ActionLink(" ", "PrevPage", "JobReceiveHeader", new { DocId = @Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "JobReceiveHeader", new { DocId = @Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "JobReceiveHeader", new { @id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
                </div>
                <div class="btn-group">
                    <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle" aria-expanded="false" title="More Option" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
                    </a>
                    <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">                       
                        <li><a id="DocHistory" data-modal="" href="@Url.Action("GetHistory", "LogHistory", new { Ids = Model.JobReceiveHeaderId, DocTypeId = Model.DocTypeId })"><span class="glyphicon glyphicon-user"> </span> History</a></li>
                        <li><a href="@Url.Action("Email", "JobReceiveHeader")"><span class="glyphicon glyphicon-envelope"> </span> Email</a></li>
                        <li role="separator" class="divider"></li>
                        <li><a href="@Url.Action("Report", "JobReceiveHeader", new { @ViewBag.id })"><span class="glyphicon glyphicon-th"> </span> Report</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Document Details
                    </h4>
                    <div>
                        <div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocDate, "Receipt Date", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @*@Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control required" })*@
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new
                                   {
                                       @class = "datepickerWithNFD form-control col-xs-6 required updateDocNo",
                                       data_tabl = "JobReceiveHeaders",
                                       data_doctype = Model.DocTypeId,
                                       data_divId = Model.DivisionId,
                                       data_sitId = Model.SiteId,
                                   })
                                        @Html.ValidationMessageFor(model => model.DocDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocNo, "Receipt No", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control required" })
                                        @Html.ValidationMessageFor(m => m.DocNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div>
                            <div class="col-md-6" style='display:@(Model.JobReceiveSettings.isVisibleProcessHeader?"":"none")'>
                                <div class="form-group">
                                    @Html.HiddenFor(m => m.JobReceiveSettings.isVisibleProcessHeader)
                                    @Html.LabelFor(model => model.ProcessId, "Process", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.ProcessId, new { @class = "form-control required"  })
                                        @Html.ValidationMessageFor(m => m.ProcessId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.JobWorkerId, (Model.DocumentTypeSettings.PartyCaption ?? "Party"), new { @class = "control-label col-md-4 col-sm-2" })
                                    @Html.HiddenFor(m => m.DocumentTypeSettings.PartyCaption)
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.JobWorkerId, new { @class = "form-control required" })
                                        @Html.ValidationMessageFor(m => m.JobWorkerId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.JobWorkerDocNo, (Model.DocumentTypeSettings.PartyCaption ?? "Party") + " Doc No", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.JobWorkerDocNo, null, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.JobWorkerDocNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.JobWorkerDocDate, (Model.DocumentTypeSettings.PartyCaption ?? "Party") + " Doc Date", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.JobWorkerDocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control " })
                                        @Html.ValidationMessageFor(m => m.JobWorkerDocDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.JobReceiveById, "Goods Received By", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.JobReceiveById, new { @class = "form-control " })
                                        @Html.ValidationMessageFor(m => m.JobReceiveById, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GodownId, "Godown", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.GodownId, new { @class = "form-control required" })
                                        @Html.ValidationMessageFor(m => m.GodownId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextAreaFor(m => m.Remark, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Remark, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>


                <hr />
                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Products
                    </h4>
                </div>

              

                @*<div class="panel-info">
                <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                    <span class="glyphicon glyphicon-plus-sign"></span>
                    @{string Action = "";
                    if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                    { Action = "CreateLine"; }
                    else if (Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified || Model.Status == (int)StatusConstants.ModificationSubmitted)
                    { Action = "CreateLineAfter_Submit"; }
                    }
                    @Html.ActionLink("Add New Row ", Action, "JobReceiveLine", new { id = @Model.JobReceiveHeaderId, JobWorkerId = @Model.JobWorkerId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @data_detailDisabled = "true", @title = "Add New", @data_toggle = "tooltip" })/
                    @Html.ActionLink("Summary", "GetSummary", "JobReceiveHeader", new { id = @Model.JobReceiveHeaderId }, new { @class = "toolbar", @data_toggle = "tooltip", @data_detailDisabled = "true" })/
                    @Html.ActionLink("Incentive:Penality", "GetBarCodesForIAP", "JobReceiveHeader", new { id = @Model.JobReceiveHeaderId }, new { @class = "toolbar", @data_toggle = "tooltip", @data_detailDisabled = "true" })
                </h5>
            </div>*@

                <div class="panel-info" style="height:40px">
                    <div class="btn-group" style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        @{string Action = "";
                            if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                            { Action = "CreateLine"; }
                            else if (Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified || Model.Status == (int)StatusConstants.ModificationSubmitted)
                            { Action = "CreateLineAfter_Submit"; }
                        }
                        @Html.ActionLink("Add New Row ", Action, "JobReceiveLine", new { id = @Model.JobReceiveHeaderId, JobWorkerId = @Model.JobWorkerId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @data_detailDisabled = "true", @title = "Add New", @data_toggle = "tooltip" })
                        @if (Model.DocTypeId == 448 || Model.DocTypeId == 883)
                        {
                            @Html.ActionLink("/Summary", "GetSummary", "JobReceiveHeader", new {  id = @Model.JobReceiveHeaderId }, new { @class = "toolbar", @data_toggle = "tooltip", @data_detailDisabled = "true" })
                        }
                        @if (Model.DocTypeId == 448 || Model.DocTypeId == 883)
                        {
                            @Html.ActionLink("/Incentive:Penality", "GetBarCodesForIAP", "JobReceiveHeader", new { id = @Model.JobReceiveHeaderId }, new { @class = "toolbar", @data_toggle = "tooltip", @data_detailDisabled = "true" })
                        }
                        </div>
                    <div class="btn-group right" style="padding-right:15px">
                        @if (Model.JobReceiveSettings.IsVisibleForOrderMultiple)
                         {
                            @Html.ActionLink(" ", "_ForOrder", "JobReceiveLine", new { id = @Model.JobReceiveHeaderId, sid = @Model.JobWorkerId }, new { data_modal = "", id = "btnCreateF", @class = "cbtn btn-circle glyphicon glyphicon-link toolbar right", @data_detailDeleted = "true", @title = "For Order", @data_toggle = "tooltip" })
                        }
                        </div>
                    </div>
                        <div style="padding-right:15px" class="grid-content">

                            @*<table class="table table-hover ctable">
                            <thead id="header">
                            </thead>

                            <tbody id="Result"></tbody>
                        </table>*@

                            <div style="padding-right:15px;">

                                <div class="panel panel-default" id="grid">

                                    <div style="min-width: 700px;">

                                        <div class="panel-info" id="gbody">

                                        </div>
                                    </div>
                                </div>
                            </div>



                            <div style="display:@(Model.JobReceiveSettings.isVisibleConsumptionDetail ? "" : "none")">
                                <div class="row">
                                    <h4 class="col-md-12 black" style="margin-top:15px">
                                        <span class="glyphicon glyphicon-shopping-cart"></span>
                                        3.Consumption
                                    </h4>
                                </div>
                                <div class="panel-info">
                                    <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                                        <span class="glyphicon glyphicon-plus-sign"></span>
                                        @Html.ActionLink("Add New Row ", "Consumption", "JobReceiveLine", new { id = @Model.JobReceiveHeaderId }, new { data_modal = "", id = "btnCreatePO", @class = "toolbar", @data_detailDisabled = "true", @title = "Add New", @data_toggle = "tooltip" })
                                    </h5>
                                </div>
                                <div style="padding-right:15px">
                                    <div class="panel panel-default" id="grid">
                                        <div class="panel-heading headrow">
                                            <div class="row grid-head">
                                                <div class="text-left block" style="width: 5%; ">
                                                    Srl.
                                                </div>
                                                <div class="block" style="width: 90%;">
                                                    <div class="row">
                                                        @*ProductInfo*@
                                                        <div class="block" style="width: 20%; ">
                                                            CostCenter
                                                        </div>
                                                        <div class="block" style="width: 55%; ">
                                                            Product Name
                                                        </div>
                                                        @*Qty*@
                                                        <div class="text-right block" style="width: 10%;">
                                                            Qty
                                                        </div>
                                                        @*Rate*@
                                                        <div class="block" style="width: 15%; ">
                                                            Unit
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="" style="width:5%">
                                                </div>
                                            </div>
                                        </div>

                                        <div class="panel-info" id="gbodyconsumption">
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div style="display:@(Model.JobReceiveSettings.isVisibleByProductDetail ? "" : "none")">
                                <div class="row">
                                    <h4 class="col-md-12 black" style="margin-top:15px">
                                        <span class="glyphicon glyphicon-shopping-cart"></span>
                                        4.By Products
                                    </h4>
                                </div>
                                <div class="panel-info">
                                    <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                                        <span class="glyphicon glyphicon-plus-sign"></span>
                                        @Html.ActionLink("Add New Row ", "ByProduct", "JobReceiveLine", new { id = @Model.JobReceiveHeaderId }, new { data_modal = "", id = "btnCreateBYP", @class = "toolbar", @data_detailDisabled = "true", @title = "Add New", @data_toggle = "tooltip" })
                                    </h5>
                                </div>
                                <div style="padding-right:15px">

                                    <div class="panel panel-default" id="grid">
                                        <div class="panel-heading headrow">
                                            <div class="row grid-head">
                                                <div class="text-left block" style="width: 5%; ">
                                                    Srl.
                                                </div>
                                                <div class="block" style="width: 90%;">
                                                    <div class="row">
                                                        @*ProductInfo*@
                                                        <div class="block" style="width: 30%; ">
                                                            Product Name
                                                        </div>
                                                        <div class="block" style="width: 20%;">
                                                            Dimension1
                                                        </div>
                                                        <div class="block" style="width: 20%;">
                                                            Dimension2
                                                        </div>
                                                        @*Qty*@
                                                        <div class="text-right block" style="width: 15%;">
                                                            Qty
                                                        </div>
                                                        @*Rate*@
                                                        <div class="block" style="width: 15%; ">
                                                            Unit
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="" style="width:5%">
                                                </div>
                                            </div>
                                        </div>

                                        <div class="panel-info" id="gbodybyproducts">

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
}



@if ((ViewBag.Mode == "Add") || (ViewBag.Mode == "Edit"))
{

    <script type="text/javascript">


        //Reloading the table contents on modal hide
        $('#myModal').on('hidden.bs.modal', function () {
            LoadProducts();
            LoadConsumption();
            LoadByProduct();
        });


        var IsSaved=false;
        var ValidationCount=0;

        $('form').submit(function(event){

            if(!IsSaved)
            {
                if(!ValidateData() || !ValidateCostCenter())
                {
                    return false;
                }
                IsSaved=true;
                return IsSaved;
            }
            else
            {
                return false;
            }


        });


        function ValidateData() {
            var DocId=@Model.JobReceiveHeaderId;
            var TempValue;
            var ValidationMessage="";



            //Checking for dulicate key value
            if(DocId<=0)
            {
                TempValue= $('#DocNo').DuplicateCheckForCreate({ name: 'JobReceiveHeaders', value: $('#DocNo').val(), doctype: $('#DocTypeId').val() });
                if (TempValue){ ValidationMessage=$('#DocNo').val() + " already exist <br />";}
            }
            else
            {
                TempValue = $('#DocNo').DuplicateCheckForEdit({ name: 'JobReceiveHeaders', value: $('#DocNo').val(), doctype: $('#DocTypeId').val(),headerId:DocId });
                if (TempValue) {ValidationMessage+=$('#DocNo').val() + " already exist <br />";}
            }
            if(TempValue)
            {
                if($('#validationerrormsg').length==0){
                    $('.panel-info').filter(':eq(1)').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+ValidationMessage+'</div>');}
                else
                {
                    $('#validationerrormsg').html(ValidationMessage);
                }
            }

            return  (ValidationMessage=="");

        }

        $(document).ready(function(){
            enableModalTransitions();
        })
    </script>
}

<script type="text/javascript">
    $(document).ready(function () {

        //Calling the function to load the table data/ Line information
        LoadProducts();

        //Adding Hidden Input Fields
        AddFields();

        //Calling the function to load Consumption Details
        LoadConsumption();

        //Calling the function to load ByProducts
        LoadByProduct();
    });

    CustomSelectFunction($("#ProcessId"), '/ComboHelpList/GetProcessWithChildProcess', '/ComboHelpList/SetSingleProcess', ' ', false,0, $('#JobReceiveSettings_ProcessId').val());
    //CustomSelectFunction($("#ProcessId"), '/ComboHelpList/GetProcess', '/ComboHelpList/SetSingleProcess', ' ', false, 1);
    //CustomSelectFunction($("#JobWorkerId"), '/ComboHelpList/GetJobWorkersWithProcess', '/ComboHelpList/SetSingleJobWorker', ' ', false, 1, $('#ProcessId').val());
    CustomSelectFunction($("#JobWorkerId"), '/JobReceiveHeader/GetCustomPerson', '/ComboHelpList/SetSinglePerson', ' ', false, 0,$('#DocTypeId').val());
    CustomSelectFunction($("#GodownId"), '/ComboHelpList/GetGodown', '/ComboHelpList/SetSingleGodown', ' ', false, 0);
    CustomSelectFunction($("#JobReceiveById"), '/ComboHelpList/GetEmployeeWithProcess', '/ComboHelpList/SetSingleEmployee', ' ', false, 0, $('#ProcessId').val());


    $("#ProcessId").change(function(){
        CustomSelectFunction($("#JobReceiveById"), '/ComboHelpList/GetEmployeeWithProcess', '/ComboHelpList/SetSingleEmployee', ' ', false, 0, $('#ProcessId').val());
    });

    var id=@Model.JobReceiveHeaderId;
    if(id==null||id==0)
    {
        $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
        $(document).find('a#btnCreateF').removeAttr('href').removeAttr('data-modal');
        $("#btnCreateF").attr('disabled','disabled');
    }
    //$("#JobWorkerId").select2('focus');

    if ($("#ProcessId").is(":hidden") == false)
    {
        $('#ProcessId').select2('focus');
    }
    else{
        $('#JobWorkerId').select2('focus');
    }


    if(id>0)
    {
        $('#ProcessId').attr('readonly','true');
    }


    $("#ProcessId").change(GetProcessPermission);

    function GetProcessPermission() {
        var ProcessProgress = $("#Product detail loading progress");
        ProcessProgress.show();
        if ($("#ProcessId").val() != 0 && $("#ProcessId").val() != null) {
            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("GetProcessPermissionJson"))",
                data: { DocTypeId : $("#DocTypeId").val(), ProcessId: $("#ProcessId").val() },
            success: function (data) {
                if (data == false)
                {
                    var ProcessName = $("#ProcessId").select2('data').text;
                    $('.panel-info').filter(':eq(1)').before('<div class="alert alert-danger" role="alert" id="validationerrormsg">'+'You do not have permission for '+ ProcessName +'.'+'</div>');
                    $("#ProcessId").select2('data', { id: '', text: ''});
                }
                else{
                    $('#validationerrormsg').remove();
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve product details.' + thrownError);
            }
        });
    }}


    //Loading the Table data or Line Information
    @*function LoadProducts() {
        var DomainName='@System.Configuration.ConfigurationManager.AppSettings["AdminSetupDomain"]';
        var SelectedRecord='@ViewBag.DocLineId';
        var groupId=@Model.JobReceiveHeaderId;
        var status='@Model.Status';
        var LineEditUrl;
        var LineDeleteUrl;
        var LineQAAttributeCreateUrl = "/JobReceiveQAAttribute/Create/";
        var LineQAAttributeEditUrl = "/JobReceiveQAAttribute/Edit/";
        if(status==StatusContstantsEnum.Drafted ||status==StatusContstantsEnum.Import)
        {
            LineEditUrl="/JobReceiveLine/_ModifyLine/";
            LineDeleteUrl="/JobReceiveLine/_DeleteLine/";
        }
        else if(status==StatusContstantsEnum.Submitted || status == StatusContstantsEnum.Modified )
        {
            LineEditUrl="/JobReceiveLine/_ModifyLineAfterSubmit/";
            LineDeleteUrl="/JobReceiveLine/_DeleteLine_AfterSubmit/";
        }
        var link="/JobReceiveLine/Index/"+groupId;
        var QtyCount=0;
        var AmountCount=0;
        var ReceiveQtyCount=0;
        var PassQtyCount=0;
        var LossQtyCount=0;
        var unit=true;
        var prevunit;
        var decimal=0;
        var DealQty=0;
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;
                if(data.length!=0)
                {
                    $('#JobWorkerId').attr('readonly','true');

                    $.each(data, function (index, item) {

                        var OrderUrl=DomainName+"/Redirect/RedirectToDocument?DocTypeId="+item.OrderDocTypeId+"&DocId="+item.OrderHeaderId+"&DocLineId="+item.JobOrderLineId;
                        var BarCodeUrl=DomainName+"/Redirect/BarCodeDetail?BarCode="+item.ProductUidName;

                        row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px' id='"+item.JobReceiveLineId+"'>"
                            +"      <div class='row-index block'  style='width:5%'>"+srno+"<input type='hidden' class='id' value='"+item.JobReceiveLineId+"' /></div>"
                            +"          <div class='block'  style='width:90%'>"
                            +"              <div class='row'>"
                            +"                   <div class='block' style='width:25%'>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")
                            +"                       <div>"+(item.Specification==null?" ":item.Specification)+"</div>"
                            +"                           <div>"+(item.Dimension1Name==null?" ":item.Dimension1Name+",")+(item.Dimension2Name==null?" ":item.Dimension2Name)+"</div>"
                            +"                              <div>"+(item.ProductUidName==null?" ":"Product UID : <a href='"+BarCodeUrl+"' target='_blank'>"+item.ProductUidName+"</a>")+"</div>"
                            +"                   </div>"
                            +"                   <div class='block'  style='width:15%'>"+(item.JobOrderHeaderDocNo==null?" ":"<a href='"+OrderUrl+"' class='nav' style='color:black'> <span class='small' style='font-weight:bold'>Order No:"+item.JobOrderHeaderDocNo+"</span></a>")
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.Qty==null?" ":item.Qty.toFixed(item.UnitDecimalPlaces))+"<br />"
                            +"                   </div>"
                            +"                   <div class='block'  style='width:10%'>"+(item.UnitName==null?" ":item.UnitName)
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.ReceiveQty==null?" ":item.ReceiveQty.toFixed(item.UnitDecimalPlaces))
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.PassQty==null?" ":item.PassQty.toFixed(item.UnitDecimalPlaces + 1))
                            +"                   </div>"
                            +"                   <div class=' text-right block'  style='width:10%'>"+(item.LossQty==null?" ":item.LossQty.toFixed(item.UnitDecimalPlaces))
                            +"                   </div>"
                            +"                   <div class='text-right block'  style='width:10%'>"+(item.PenaltyAmt==null?" ":item.PenaltyAmt.toFixed(2))
                            +"                   </div>"
                            +"              </div>"
                            +"          </div>"

                        if (item.QAGroupId != null)
                        {
                            row += "      <div class='block'  style='width:5%' >"
                                +"          <div class='btn-group' style='display:'"+(item.QAGroupId!=null?'':'none')+"'>"
                                +"              <a class='cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle' aria-expanded='false' style='padding-bottom: 6px;' href='#' data-toggle='dropdown' id='dropdownMenu1'>"
                                +"              </a>"
                                +"              <ul class='dropdown-menu pull-right' aria-labelledby='dropdownMenu1'>"
                                +"                  <li><a data-modal data-detailDisabled='true' delete='' href='"+LineDeleteUrl+item.JobReceiveLineId+"'><span class='glyphicon glyphicon-trash'> </span> Delete</a></li>"
                                +"                  <li><a  edit='' href='"+LineEditUrl+item.JobReceiveLineId+"'></a>"
                                +"                  <li><a href='"+(item.JobReceiveQALineId==null?(item.JobReceiveQADocTypeId==0?" ":LineQAAttributeCreateUrl+item.JobReceiveLineId + "?DocTypeId=" + item.JobReceiveQADocTypeId):LineQAAttributeEditUrl+item.JobReceiveQALineId)+"' target='_blank'><span class='glyphicon glyphicon-th'> </span> QA</a></li>"
                                +"              </ul>"
                                +"          </div>"
                                +"      </div>"

                        }
                        else{
                            row += "      <div class='block'  style='width:5%'>"
                                +"          <a class='glyphicon glyphicon-trash icon-Cus-Size' data-modal data-detailDisabled='true' delete='' href='"+LineDeleteUrl+item.JobReceiveLineId+"'></a>"
                                +"          <a  edit='' href='"+LineEditUrl+item.JobReceiveLineId+"'></a>"
                                +"      </div>"

                        }
                           
                        row += "  </div>"
                            +"<hr style='margin-top:0px;margin-bottom:0px'/>";

                        

                        QtyCount+=item.Qty;
                        ReceiveQtyCount+=item.ReceiveQty;
                        PassQtyCount+=item.PassQty;
                        LossQtyCount+=item.LossQty;
                        AmountCount+=item.PenaltyAmt;
                        DealQty+=item.DealQty;
                        if(srno!=1)
                        {
                            if(item.UnitName==prevunit && unit!=false)
                            {}
                            else
                            {unit=false;}
                        }

                        if(decimal- parseInt(item.UnitDecimalPlaces) < 0){decimal=item.UnitDecimalPlaces;}
                        srno++;
                        prevunit=item.UnitName;

                    });

                    row+="<div class='row tfooter' style='padding-top:10px;margin-left:0px;margin-right:0px'>"
                        +"  <div class='block' style='width:5%'>"
                        +"  </div>"
                        +"  <div class='block' style='width:90%'>"
                        +"      <div class='row'> "
                        +"          <div class='block'  style='width:25%'><strong>Total</strong></div>"
                        +"          <div class='block' style='width:15%'><strong>Deal Qty:"+DealQty.toFixed(3)
                        +"          </strong></div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"
                        +               (QtyCount.toFixed(decimal))+"</strong>"
                        +"          </div>"
                        +"          <div class='block' style='width:10%'><strong>"
                        +               ((unit==true)?prevunit:"")+"</strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"+(ReceiveQtyCount.toFixed(decimal))
                        +"          </strong></div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"+(PassQtyCount.toFixed(decimal))+"</strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"+(LossQtyCount.toFixed(decimal))
                        +"          </strong></div>"
                        +"          <div class='block text-right' style='width:10%'><strong>"+(AmountCount.toFixed(2))
                        +"          </strong></div>"
                        +"      </div>"
                        +"  </div>"
                        +"  <div class='block'  style='width:5%'>"
                        +"  </div>"
                        +"</div>"
                }
                else
                {

                }
                $("#gbody").html(row);
                if(SelectedRecord && SelectedRecord!=0)
                {
                    var Id="#"+SelectedRecord
                    NavigateToLineRecord(Id);}
            },
            error: function (result) {
                alert("Error");
            }
        });
    }*@

    function LoadProducts() {
        var groupId=@Model.JobReceiveHeaderId;
        var status='@Model.Status';  
        var link="/JobReceiveLine/_Index/";

        $.ajax({
            url: link,
            type: "GET",
            data:{id:groupId,status:status},
            success: function (data) {
                $("#gbody").html(data);
            },
            error: function (result) {
                alert("Error");
            }
        });
    };

    function LoadConsumption() {
        var groupId=@Model.JobReceiveHeaderId;
        var link="/JobReceiveLine/ConsumptionIndex/"+groupId;
        var QtyCount=0;
        var DealQtyCount=0;
        var AmountCount=0;
        var unit=true;
        var dunit=true;
        var prevunit;
        var prevdunit;
        var decimal=0;
        var DUdecimal=0;
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;

                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>"
                            +"      <div class='row-index block'  style='width:5%'>"+srno+"<input type='hidden' class='id' value='"+item.JobOrderLineId+"' /></div>"
                            +"          <div class='block'  style='width:90%'>"
                            +"              <div class='row'>"
                            +"                  <div class='block' style='width:20%'>"+(item.CostCenterName==null?" ":"<strong>"+item.CostCenterName+"</strong>")
                            +"                  </div>"
                            +"                   <div class='block' style='width:55%'>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")
                            +"                           <div>"+(item.Dimension1Name==null?" ":item.Dimension1Name+",")+(item.Dimension2Name==null?" ":item.Dimension2Name)+(item.Dimension3Name==null?" ":item.Dimension3Name)+(item.Dimension4Name==null?" ":item.Dimension4Name)+"</div>"
                            +"                   </div>"
                            +"                  <div class='text-right block'  style='width:10%'>"+(item.Qty==null?" ":item.Qty.toFixed(item.UnitDecimalPlaces))+"<br />"
                            +"                   </div>"
                            +"                   <div class='block'  style='width:15%'>"+(item.UnitName==null?" ":item.UnitName)
                            +"                   </div>"
                            +"              </div>"
                            +"          </div>"
                            +"      <div class='block'  style='width:5%'><a class='glyphicon glyphicon-trash icon-Cus-Size' data-modal data-detailDisabled='true' delete='' href='/JobReceiveLine/EditConsumption/"+item.JobReceiveBomId+"'></a>"
                            +"          <a  edit='' href='/JobReceiveLine/EditConsumption/"+item.JobReceiveBomId+"'></a>"
                            +"      </div>"
                            +"  </div>"
                            +"<hr style='margin-top:0px;margin-bottom:0px'/>";
                        QtyCount+=item.Qty;
                        if(srno!=1)
                        {
                            if(item.UnitName==prevunit && unit!=false)
                            {}
                            else
                            {unit=false;}
                        }

                        if(decimal- parseInt(item.UnitDecimalPlaces) < 0){decimal=item.UnitDecimalPlaces;}
                        srno++;
                        prevunit=item.UnitName;
                    });
                    row+="<div class='row tfooter' style='padding-top:10px;margin-left:0px;margin-right:0px'>"
                        +"  <div class='block' style='width:5%'>"
                        +"  </div>"
                        +"  <div class='block' style='width:90%'>"
                        +"      <div class='row'> "
                        +"          <div class='block'  style='width:30%'><strong>Total</strong></div>"
                        +"          <div class='block' style='width:20%'>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:20%'><strong>"
                        +               "</strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:15%'><strong>"
                        +              (QtyCount.toFixed(decimal))+"</strong>"
                        +"          </div>"
                        +"          <div class='block' style='width:15%'><strong>"
                        +               ((unit==true)?prevunit:"")+"</strong>"
                        +"          </div>"
                        +"      </div>"
                        +"  </div>"
                        +"  <div class='block'  style='width:5%'>"
                        +"  </div>"
                        +"</div>"
                }
                else
                {
                    ;
                }
                $("#gbodyconsumption").html(row);

            },
            error: function (result) {
                alert("Error");
            }
        });
    };

    function LoadByProduct() {
        var groupId=@Model.JobReceiveHeaderId;
        var link="/JobReceiveLine/ByProductIndex/"+groupId;
        var QtyCount=0;
        var DealQtyCount=0;
        var AmountCount=0;
        var unit=true;
        var dunit=true;
        var prevunit;
        var prevdunit;
        var decimal=0;
        var DUdecimal=0;
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;

                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px'>"
                            +"      <div class='row-index block'  style='width:5%'>"+srno+"<input type='hidden' class='id' value='"+item.JobOrderLineId+"' /></div>"
                            +"          <div class='block'  style='width:90%'>"
                            +"              <div class='row'>"
                            +"                  <div class='block' style='width:30%'>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")
                            +"                  </div>"
                            +"                  <div class='block'  style='width:20%'>"+(item.Dimension1Name==null?" ":"<span title='Dim1' class='' style='font-weight:bold'>"+item.Dimension1Name)+"</span><br />"
                            +"                   </div>"
                            +"                  <div class='block'  style='width:20%'>"+(item.Dimension2Name==null?" ":item.Dimension2Name)+"<br />"
                            +"                   </div>"
                            +"                  <div class='text-right block'  style='width:15%'>"+(item.Qty==null?" ":item.Qty.toFixed(item.UnitDecimalPlaces))+"<br />"
                            +"                   </div>"
                            +"                   <div class='block'  style='width:15%'>"+(item.UnitName==null?" ":item.UnitName)
                            +"                   </div>"
                            +"              </div>"
                            +"          </div>"
                            +"      <div class='block'  style='width:5%'><a class='glyphicon glyphicon-trash icon-Cus-Size' data-modal data-detailDisabled='true' delete='' href='/JobReceiveLine/EditByProduct/"+item.JobReceiveByProductId+"'></a>"
                            +"          <a  edit='' href='/JobReceiveLine/EditByProduct/"+item.JobReceiveByProductId+"'></a>"
                            +"      </div>"
                            +"  </div>"
                            +"<hr style='margin-top:0px;margin-bottom:0px'/>";
                        QtyCount+=item.Qty;
                        if(srno!=1)
                        {
                            if(item.UnitName==prevunit && unit!=false)
                            {}
                            else
                            {unit=false;}
                        }

                        if(decimal- parseInt(item.UnitDecimalPlaces) < 0){decimal=item.UnitDecimalPlaces;}
                        srno++;
                        prevunit=item.UnitName;
                    });
                    row+="<div class='row tfooter' style='padding-top:10px;margin-left:0px;margin-right:0px'>"
                        +"  <div class='block' style='width:5%'>"
                        +"  </div>"
                        +"  <div class='block' style='width:90%'>"
                        +"      <div class='row'> "
                        +"          <div class='block'  style='width:30%'><strong>Total</strong></div>"
                        +"          <div class='block' style='width:20%'>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:20%'><strong>"
                        +               "</strong>"
                        +"          </div>"
                        +"          <div class='block text-right' style='width:15%'><strong>"
                        +              (QtyCount.toFixed(decimal))+"</strong>"
                        +"          </div>"
                        +"          <div class='block' style='width:15%'><strong>"
                        +               ((unit==true)?prevunit:"")+"</strong>"
                        +"          </div>"
                        +"      </div>"
                        +"  </div>"
                        +"  <div class='block'  style='width:5%'>"
                        +"  </div>"
                        +"</div>"
                }
                else
                {
                    ;
                }
                $("#gbodybyproducts").html(row);

            },
            error: function (result) {
                alert("Error");
            }
        });
    };

</script>


@if ((ViewBag.Mode != "Add") && (ViewBag.Mode != "Edit"))
{
    <script type="text/javascript">
        
        $(document).ready(function(){
            DisablePageNavigation();
        })
     
    </script>
}

@if ((Model.Status == (int)ActivityTypeContants.Modified || Model.Status == (int)ActivityTypeContants.Submitted)
    && (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            enableActivityLogReason();
        })

        //var href = '/ActivityLog/LogEditReason'
        //var $btnClicked;

        //$(':submit').bind('click', function () {
        //    $btnClicked=$(this);
        //    $('#myModalContent').load(href, function () {

        //        $('#myModal').modal({
        //            backdrop: 'static',
        //            keyboard: true
        //        }, 'show');

        //        bindForm1(this);
        //    });

        //    return false;
        //})

        //function bindForm1(dialog) {

        //    $('#modformr', dialog).submit(function () {

        //        $.ajax({
        //            url: this.action,
        //            type: this.method,
        //            data: $(this).serialize(),
        //            success: function (result) {
        //                if (result.success) {
        //                    $('#myModal').modal('hide');

        //                    $(':submit').unbind();

        //                    $('input[name="UserRemark"]').val(result.UserRemark);

        //                    $btnClicked.trigger('click');

        //                } else {
        //                    $('#myModalContent').html(result);
        //                    bindForm1();
        //                }
        //            }
        //        });
        //        return false;
        //    });

        //}

    </script>
}
@if (ViewBag.transactionType != null && (ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">
     
        $(document).ready(function(){
            CreateTrasitionEffect();
        })
        //CreateTrasitionEffectForSubmit();

        //function CreateTrasitionEffectForSubmit() {

        //    //$('body').find('.container.body-content > div.row ').wrap("<div class='animsition' data-animsition-in='fade-in-right-lg' data-animsition-out='fade-out-left-lg' style='animation-duration: 1.5s; -webkit-animation-duration: 1.5s; opacity: 0;'> </div>");

        //    $('body').find('form').filter(":last").wrapInner("<div class='animsition' data-animsition-in='fade-in-right-lg' data-animsition-out='fade-out-left-lg' style='animation-duration: 1.5s; -webkit-animation-duration: 1.5s; opacity: 0;'> </div>");

        //    var script = document.createElement('script');

        //    script.setAttribute('type', 'text/javascript');

        //    script.text = " $(document).ready(function () {$('.animsition').animsition().one('animsition.start', function () {}).one('animsition.end', function () {$(this).find('.animsition-child').addClass('zoom-in').css({'opacity': 1});})});";

        //    $('body').append(script);

        //}

    </script>
}