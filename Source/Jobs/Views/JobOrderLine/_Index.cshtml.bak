@model IEnumerable<Model.ViewModel.JobOrderLineViewModel>
@using Core.Common




@{ 
    

    decimal? Uunit;
    Uunit = Model.Sum(m => m.UnitName != m.DealUnitName ? 1 : 0);
    decimal? PDcnt;
    PDcnt = Model.Sum(m => m.ProdOrderDocNo != null ? 1 :0);
}

<div style="min-width: 700px;">
    <div class="panel-heading headrow">
        <div class="row grid-head">
            <div class="text-left block" style="width: 5%; ">
                Srl.
            </div>
            <div class="block" style="width: 90%;">
                <div class="row">
                    @*ProductInfo*@
                    <div class="block" style="width: @(Uunit!=0 ?  25 :35)%; ">
                        Product Name
                    </div>
                    @if (PDcnt >0)
                    {
                    <div class="block" style="width: 12%;">
                        Ref. No
                    </div>
                    }
                    else
                    {
                        <div class='text-right block' style="width: 12%;">
                           Progress
                        </div>
                    }
                    @*Qty*@
                    <div class="text-right block" style="width: 13%;">
                        Qty
                    </div>
                    @*Rate*@
                    @if (Uunit != 0)
                    {
                    <div class="text-right block" style="width: 10%; ">
                        Deal Qty
                    </div>
                    }
                    @*Amount*@
                    <div class="text-right block" style="width: 10%;">
                        Rate
                    </div>
                    <div class="text-right block" style="width: 10%; ">
                        Amount
                    </div>
                    @*Remark*@
                    <div class="block" style="width: 20%;">
                        Remark
                    </div>
                </div>
            </div>


            <div class="" style="width:5%">

            </div>
        </div>

    </div>

    @{
                var SelectedRecord = ViewBag.DocLineId;
        var DomainName = System.Configuration.ConfigurationManager.AppSettings["AdminSetupDomain"];
        var groupId = ViewBag.JobOrderHeaderId;
        int status = ViewBag.Status;
        var LineEditUrl = "";
        var LineDeleteUrl = "";
        if (status == (int)StatusConstants.Drafted || status == (int)StatusConstants.Import)
        {
            LineEditUrl = "/JobOrderLine/_ModifyLine/";
            LineDeleteUrl = "/JobOrderLine/_DeleteLine/";
        }
        else if (status == (int)StatusConstants.Submitted || status == (int)StatusConstants.Modified)
        {
            LineEditUrl = "/JobOrderLine/_ModifyLineAfterSubmit/";
            LineDeleteUrl = "/JobOrderLine/_DeleteLine_AfterSubmit/";
        }
        else
        {
            LineEditUrl = "/JobOrderLine/DetailInformation/";
            LineDeleteUrl = "/JobOrderLine/DetailInformation/";
        }
        var link = "/JobOrderLine/Index/" + groupId;
        decimal QtyCount = 0;
        decimal DealQtyCount = 0;
        decimal AmountCount = 0;
        var unit = true;
        var dunit = true;
        var prevunit = "";
        var prevdunit = "";
        var ddecimal = 0;
        var DUdecimal = 0;
    }


    <div class="panel-info" id="gbody">

        @{var srno = 1;}
        @foreach (var item in Model)
        {
            var OrderUrl = DomainName + "/Redirect/RedirectToDocument?DocTypeId=" + item.OrderDocTypeId + "&DocId=" + item.OrderHeaderId + "&DocLineId=" + item.ProdOrderLineId;
            var BarCodeUrl = DomainName + "/Redirect/BarCodeDetail?BarCode=" + item.ProductUidName;
            <div class='row crow grid-body' style='margin-left:0px;margin-right:0px' id='@item.JobOrderLineId'>
                <div class='row-index block' style='width:5%'>@srno<input type='hidden' class='id' value='@item.JobOrderLineId' /></div>
                <div class='block navbody' style='width:90%'>
                    <div class='row'>                     
                            <div class="block" style="width: @(Uunit!=0 ?  25 :35)%; ">
                                @if (item.ProductName != null)
                                {
                                    <strong> @item.ProductName </strong>
                                }

                                @if (item.Specification != null)
                                {
                                    <div>@item.Specification</div>
                                }
                                <div>
                                    @(item.Dimension1Name == null ? " " : item.Dimension1Name + ",")@(item.Dimension2Name == null ? " " : item.Dimension2Name)
                                </div>
                                <div>
                                    @if (item.DueDate.HasValue)
                                    {
                                        <span title='DueDate' class='label label-danger' style='font-weight:bold'> @item.DueDate.Value.ToString("dd/MMM/yyyy") </span>
                                    }
                                </div>
                                @if (item.ProductUidName != null)
                                {
                                    <a href='@BarCodeUrl' target='_blank'>@item.ProductUidName </a><br />
                                }
                            </div>
                        @if (PDcnt > 0)
                        {
                        <div class='block' style='width:12%'>
                            @if (item.ProdOrderDocNo != null)
                            {
                                 <a href='@OrderUrl'  class='nav' style='color:black'><span class='small' style='font-weight:bold'>@item.ProdOrderDocNo</span></a>
                            }
                        </div>
                        }
                        else
                        {  <div class='text-right block' style='width:12%'>
                            <br />
                            <div style='width:80%;float:right'>
                                <a data-modal='' href="/JobOrderHeader/GetLineProgress?LineId=@item.JobOrderLineId">
                                    <div class='progress' style='height:10px;margin-bottom:0px;'>
                                        <div class='progress-bar progress-bar-success' style="width: @Decimal.Round(item.ProgressPerc, 0)px"></div>
                                        <div class='progress-bar progress-bar-danger' style="width: @Decimal.Round(item.ProgressPercCancelled, 0)px"></div>
                                    </div>
                                </a>
                            </div>
                        </div>
                        }
                            <div class='text-right block' style='width:13%'>
                                @if (item.Qty != null)
                                {
                                    @Math.Round(item.Qty, item.UnitDecimalPlaces).ToString();
                                }
                                <div>
                                    <small>@(item.UnitName == null ? " " : item.UnitName)</small>
                                </div>
                                @if (PDcnt > 0)
                                {
                                    <div style='width:80%;float:right'>
                                        <a data-modal='' href="/JobOrderHeader/GetLineProgress?LineId=@item.JobOrderLineId">
                                            <div class='progress' style='height:10px;margin-bottom:0px;'>
                                                <div class='progress-bar progress-bar-success' style="width: @Decimal.Round(item.ProgressPerc, 0)px"></div>
                                                <div class='progress-bar progress-bar-danger' style="width: @Decimal.Round(item.ProgressPercCancelled, 0)px"></div>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                            @if (Uunit != 0)
                            {
                                <div class='text-right block' style='width:10%'>
                                    @(item.DealQty == null ? " " : Math.Round(item.DealQty, item.DealUnitDecimalPlaces).ToString())<br />
                                    <div>
                                        <small>@(item.DealUnitName == null ? " " : item.DealUnitName)</small>
                                    </div>
                                </div>
                            }
                            <div class='text-right block' style='width:10%'>
                                @(item.Rate == null ? " " : Math.Round(item.Rate, 2).ToString())
                            </div>
                            <div class=' text-right block' style='width:10%'>
                                @(item.Amount == null ? " " : Math.Round(item.Amount, 2).ToString())
                            </div>
                            <div class='block' style='width:10%'>
                                @(item.LotNo == null ? " " : "Lot-No:" + item.LotNo )@(item.Remark == null ? " " : item.Remark)
                            </div>
                        </div>
                </div>
                <div class='block' style='width:5%'>
                    <a class='glyphicon glyphicon-trash icon-Cus-Size hidden-xs' data-modal='' data-detaildisabled='true' delete='' href='@LineDeleteUrl@item.JobOrderLineId'></a>
                    <a edit='' href='@LineEditUrl@item.JobOrderLineId'></a>
                </div>
            </div>
            <hr style='margin-top:0px;margin-bottom:0px' />


                            QtyCount += item.Qty;
                            DealQtyCount += item.DealQty;
                            AmountCount += item.Amount;
                            if (srno != 1)
                            {
                                if (item.UnitName == prevunit && unit != false)
                                { }
                                else
                                { unit = false; }
                                if (item.DealUnitName == prevdunit && dunit != false)
                                { }
                                else
                                { dunit = false; }
                            }

                            if (ddecimal - item.UnitDecimalPlaces < 0) { ddecimal = item.UnitDecimalPlaces; }
                            if (DUdecimal - item.DealUnitDecimalPlaces < 0) { DUdecimal = item.DealUnitDecimalPlaces; }
                            srno++;
                            prevunit = item.UnitName;
                            prevdunit = item.DealUnitName;


        }


        <div class='row tfooter' style='padding-top:10px;'>
            <div class='block' style='width:5%'>
            </div>
            <div class='block' style='width:90%'>
                <div class='row'>
                    <div class='block' style="width: @(Uunit!=0 ?  25 :35)%; "><strong>Total</strong></div>
                    <div class='block' style='width:15%'>
                    </div>
                    <div class='block text-right' style='width:10%'>
                        <strong>
                            @if (unit)
                            {
                                @Decimal.Round(QtyCount, ddecimal);
                                <br />
                                @prevunit;
                            }
                            else
                            {
                                <small> @Decimal.Round(QtyCount, ddecimal).ToString() </small>
                            }
                        </strong>
                    </div>
                    @if (Uunit != 0)
                    {
                    <div class='block text-right' style='width:10%'>
                        <strong>
                            @if (dunit)
                            {
                                @Decimal.Round(DealQtyCount, DUdecimal);
                                <br />
                                @prevdunit;
                            }
                            else
                            {
                                <small> @Decimal.Round(DealQtyCount, DUdecimal) </small>
                            }
                        </strong>
                    </div>
                    }
                    <div class='block text-right' style='width:10%'>
                    </div>
                    <div class='block text-right' style='width:10%'>
                        <strong>@Decimal.Round(AmountCount, 2)</strong>
                    </div>
                    <div class='block' style='width:20%'>
                    </div>
                </div>
            </div>
            <div class='block' style='width:5%'>
            </div>
        </div>


    </div>
</div>