@model Model.ViewModels.DispatchWaybillHeaderViewModel
@using Core.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Create", "DispatchWaybillHeader", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.DispatchWaybillHeaderId)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.CreatedDate)
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.DocTypeId)



    <div class="panel panel-default">
        <div class="panel-heading">

            @CustomHelpers.RenderHeaderInfo(ViewBag.transactionType, (int?)ViewBag.PendingToSubmit, (int?)ViewBag.PendingToReview, ViewBag.Name)

            @*@if (ViewBag.transactionType == "submit")
            {<h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Submit @ViewBag.Name</span>
                <input type="submit" value="Submit" name="Command:Submit" class="btn btn-primary right" style="width: 90px; background-color: #2980b9" />
            </h3>}
            else if (ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue")
            {<h3 style="border-bottom:0px solid #e1dada;padding-bottom:0px;">
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> Review @ViewBag.Name</span>
                <button type="submit" name="Command:Review" class="btn btn-primary right" style="margin-left:5px" id="ReviewContinue">Review & Next<span class='badge'>@(ViewBag.PendingToReview != 0 ? ViewBag.PendingToReview : "")</span></button>
                <button type="submit" class="btn btn-primary right" name="Command:Review">Review</button>
                <input type="hidden" id="IsContinue" name="IsContinue" value="" />
            </h3>}
            else if (ViewBag.transactionType == "detail")
            {
                <h3>
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>
                </h3>
            }
            else
            {
                <h3>
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                </h3>
            }*@
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                @*<h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "DispatchWaybillHeader", new { DocTypeId = ViewBag.id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })                    
                    @Html.ActionLink(" ", "History", "DispatchWaybillHeader", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "GeneratePrints", "DispatchWaybillHeader", new { Ids = Model.DispatchWaybillHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })
                    @Html.ActionLink(" ", "Email", "DispatchWaybillHeader", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "DispatchWaybillHeader", new { id = @Model.DispatchWaybillHeaderId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "DispatchWaybillHeader", new { id = @Model.DispatchWaybillHeaderId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "DispatchWaybillHeader", new { @id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>*@
                <div class="btn-group">
                    @Html.ActionLink(" ", "Create", "DispatchWaybillHeader", new { DocTypeId = ViewBag.id }, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "GeneratePrints", "DispatchWaybillHeader", new { Ids = Model.DispatchWaybillHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })
                    @Html.ActionLink(" ", "PrevPage", "DispatchWaybillHeader", new { id = @Model.DispatchWaybillHeaderId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "DispatchWaybillHeader", new { id = @Model.DispatchWaybillHeaderId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                </div>
                <div class="btn-group">
                    <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle" title="More Option" aria-expanded="false" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
                    </a>
                    <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">
                        <li><a id="DocHistory" data-modal="" href="@Url.Action("GetHistory", "LogHistory", new { Ids = Model.DispatchWaybillHeaderId, DocTypeId = Model.DocTypeId })"><span class="glyphicon glyphicon-user"> </span> History</a></li>
                        <li><a href="@Url.Action("Email", "DispatchWaybillHeader")"><span class="glyphicon glyphicon-envelope"> </span> Email</a></li>
                      
                    </ul>
              </div>
            </div>
        </div>

        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal" role="form">
                @Html.ValidationSummary(true)
                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Document Details
                    </h4>
                    <div>
                        <div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocNo, "Entry No", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.DocNo)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocDate, "Entry Date", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @*@Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })*@
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new
                                   {
                                       @class = "datepickerWithNFD form-control col-xs-6 required updateDocNo",
                                       data_tabl = "DispatchWaybillHeaders",
                                       data_doctype = Model.DocTypeId,
                                       data_divId = Model.DivisionId,
                                       data_sitId = Model.SiteId,
                                   })
                                        @Html.ValidationMessageFor(model => model.DocDate)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.WaybillNo, "Waybill No", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.WaybillNo, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.WaybillNo)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.WaybillDate, "Waybill Date", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.WaybillDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.WaybillDate)
                                    </div>
                                </div>
                            </div>
                        </div>



                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TransporterId, "Transporter", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.TransporterId, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.TransporterId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SaleInvoiceHeaderId, "Invoice No", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.SaleInvoiceHeaderId, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.SaleInvoiceHeaderId)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConsigneeId, "Consignee", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(a => a.ConsigneeId, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.ConsigneeId)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <hr />
                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Waybill Details
                    </h4>
                    <div>
                        <div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.ShipMethodId, "Shipment Through", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.DropDownListFor(m => m.ShipMethodId, new SelectList(ViewBag.ShipMethodList as System.Collections.IEnumerable, "ShipMethodId", "ShipMethodName"), new { @class = "form-control col-xs-6 height required" })
                                        @Html.ValidationMessageFor(model => model.ShipMethodId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DeliveryOffice, "Delivery Office", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DeliveryOffice, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.DeliveryOffice)
                                    </div>
                                </div>
                            </div>
                        </div>





                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EstimatedDeliveryDate, "Estd.Delivery Date", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.EstimatedDeliveryDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.EstimatedDeliveryDate)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PaymentType, "Payment Type", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.DropDownList("PaymentType", null, new { @class = "form-control col-xs-6 height" })
                                        @Html.ValidationMessageFor(model => model.PaymentType)
                                    </div>
                                </div>
                            </div>
                        </div>





                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FromCityId, "From City", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.FromCityId, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.FromCityId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ToCityId, "To City", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.ToCityId, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.ToCityId)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.RouteId, "Route", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.RouteId, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.RouteId)
                                    </div>
                                </div>
                            </div>
                        </div>







                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductDescription, "Product Description", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.ProductDescription, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.ProductDescription)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PrivateMark, "Private Mark", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.PrivateMark, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.PrivateMark)
                                    </div>
                                </div>
                            </div>
                        </div>





                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NoOfPackages, "No.of Packages", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.NoOfPackages, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.NoOfPackages)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ActualWeight, "Actual Weight", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.ActualWeight, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.ActualWeight)
                                    </div>
                                </div>
                            </div>
                        </div>






                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ChargedWeight, "Charged Weight", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.ChargedWeight, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.ChargedWeight)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ContainerNo, "Container No", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.ContainerNo, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.ContainerNo)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <hr />
                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        3.Freight Details
                    </h4>
                    <div>
                        <div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.Freight, "Freight", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.Freight, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.Freight)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.OtherCharges, "Other Charges", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.OtherCharges, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.OtherCharges)
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ServiceTaxPer, "Service Tax", new { @class = "control-label col-md-4 col-sm-2" })
                                   
                                    <div class="col-md-7 col-sm-10" style="padding:0px">
                                        <div class="col-xs-5">
                                            @Html.TextBoxFor(m => m.ServiceTaxPer, null, new { @class = "form-control col-xs-6" })
                                            @Html.ValidationMessageFor(model => model.ServiceTaxPer)
                                        </div>

                                        @Html.LabelFor(model => model.ServiceTaxAmount, "%", new { @class = "control-label col-xs-1" })
                                        <div class="col-xs-4">
                                            @Html.TextBoxFor(m => m.ServiceTaxAmount, null, new { @class = "form-control col-xs-6" })
                                            @Html.ValidationMessageFor(model => model.ServiceTaxAmount)
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TotalAmount, "Total Amount", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10"">
                                        @Html.TextBoxFor(m => m.TotalAmount, null, new { @class = "form-control col-xs-6", @readonly = true })
                                        @Html.ValidationMessageFor(model => model.TotalAmount)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>






                <hr />
                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        4.Other Details
                    </h4>
                    <div>
                        <div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10"">
                                        @Html.TextBoxFor(m => m.Remark, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.Remark)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <hr />
                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        Route Status
                    </h4>
                </div>

                <div class="panel-info">
                    <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        @*<span class="glyphicon glyphicon-plus-sign"></span>*@
                        @*@{string Action = "";
                        if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                        { Action = "CreateLine"; }
                        else if (Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified)
                        { Action = "CreateLineAfter_Submit"; }
                        }*@
                        @*@Html.ActionLink("Add New Row ", Action, "DispatchWaybillLine", new { id = @Model.DispatchWaybillHeaderId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })*@
                    </h5>
                </div>
                <div style="padding-right:15px">

                    <table class="table table-hover ctable">
                        <thead id="header">
                        </thead>

                        <tbody id="Result"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}


<script>
    $(document).ready(function () {
        CustomSelectFunction($("#ConsigneeId"), '/ComboHelpList/GetBuyers', '/ComboHelpList/SetSingleBuyer', 'Enter Consignee Name', false, 0);
        CustomSelectFunction($("#SaleInvoiceHeaderId"), '/ComboHelpList/GetSaleInvoices', '/ComboHelpList/SetSingleSaleInvoice', 'Enter Invoice No', false, 0);
        CustomSelectFunction($("#TransporterId"), '/ComboHelpList/GetTransporters', '/ComboHelpList/SetSingleTransporter', 'Enter Transporter Name', false, 0);
        CustomSelectFunction($("#FromCityId"), '/ComboHelpList/GetCity', '/ComboHelpList/SetSingleCity', 'Enter From City', false, 0);
        CustomSelectFunction($("#ToCityId"), '/ComboHelpList/GetCity', '/ComboHelpList/SetSingleCity', 'Enter To City', false, 0);
        CustomSelectFunction($("#RouteId"), '/ComboHelpList/GetRoutes', '/ComboHelpList/SetSingleRoute', 'Enter Route', false, 0);
    });
</script>



<script type="text/javascript">
    var form_clean;
    $(document).ready(function () {

        //Calling the function to load the table data/ Line information
        LoadCities();


        form_clean = $("form").serialize();


        //For maintaining the data change on the form
        //To enable of disable save button based on the data changed
        $("input,select").change(function () {
            var form_dirty = $("form").serialize();
            if (form_clean != form_dirty) {
                $("#submit").removeAttr('disabled');
            }
            else
            {
                // alert('same form');
                $("#submit").attr({ "disabled": "disabled" })
            }
        });
    });


    var id=@Model.DispatchWaybillHeaderId;
    if(id==null||id==0)
    {
        $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
    }


    $("#Freight,#OtherCharges,#ServiceTaxPer,#ServiceTaxAmount").keyup(Calculation);


    //Reloading the table contents on modal hide
    $('#myModal').on('hidden.bs.modal', function () {
        LoadCities();
    });


    ////To focus on the first element on modal load
    //$('#myModal').on('shown.bs.modal', function () {
    //    $("#ProductId").select2("focus");
    //});



    //Loading the Table data or Line Information
    function LoadCities() {
        var groupId=@Model.DispatchWaybillHeaderId;
        var status='@Model.Status';
        var LineEditUrl;
        var LineDeleteUrl;
        if(status==StatusContstantsEnum.Drafted||status==StatusContstantsEnum.Import)
        {
            LineEditUrl="/DispatchWaybillLine/_ModifyLine/";
            LineDeleteUrl="/DispatchWaybillLine/_DeleteLine/";
        }
        else if(status==StatusContstantsEnum.Submitted || status == StatusContstantsEnum.Modified )
        {
            LineEditUrl="/DispatchWaybillLine/_ModifyLineAfterSubmit/";
            LineDeleteUrl="/DispatchWaybillLine/_DeleteLine_AfterSubmit/";
        }
        else
        {
            LineEditUrl="/DispatchWaybillLine/_Detail/";
            LineDeleteUrl="/DispatchWaybillLine/_Detail/";
        }        
        var link="/DispatchWaybillLine/Index/"+groupId;
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;
                var head="<tr style='background-color:#428bca'>  <th style='width:10px'><input type='hidden'  /></th> <th class='center' style='width:50px'>City</th>   <th class='center' style='width:50px'>Receive Date & Time</th> <th class='center' style='width:50px'>Receive Remark</th> <th style='width:50px'>Forwarding Date & Time</th> <th style='width:50px'>Forwarded By</th>  <th style='width:50px'>Forwarding Remark</th>  <th style='width:10px'></th>       <th style='width:10px'></th>  </tr>"
                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += "<tr><td><input type='hidden' class='id' value='" + item.DispatchWaybillLineId + "'/></td> <td>" + item.CityName + "</td> <td> "+((item.ReceiveDateTime==null)?" ":formatDateWithTime('d/m/Y Hr:Mn',new Date(parseInt(item.ReceiveDateTime.substr(6)))))+"</td>  <td>"+((item.ReceiveRemark==null)?" ":item.ReceiveRemark)+"</td><td>"+((item.ForwardingDateTime==null)?" ":formatDateWithTime('d/m/Y Hr:Mn',new Date(parseInt(item.ForwardingDateTime.substr(6)))))+"</td><td> "+((item.ForwardedBy==null)?" ":item.ForwardedBy)+"</td> <td> "+((item.ForwardingRemark==null)?" ":item.ForwardingRemark)+"</td>  <td><a class='rowEditBlue hidden'  edit='' href='"+LineEditUrl+item.DispatchWaybillLineId+"' ></a></td>       <td style='padding-top:0px;padding-bottom:0px'><a class='' data-modal='' delete='' href='"+LineDeleteUrl+item.DispatchWaybillLineId+"' ></a></td>  </tr>";
                        srno++;
                    });



                    $('#ProductGroupName').attr('readonly','true');
                }
                else
                {
                    row+="<tr><td>No Items Found.</td></tr>";
                }
                $("#header").html(head);
                $("#Result").html(row);
            },
            error: function (result) {
                alert("Error");
            }
        });
    }


    //For Populating Modal PopUp on DoubleClick Of Row
    $('#Result').on("dblclick",'tr',function(){
        var text = $(this).find(".id").val();
        var editurl=$(this).find('a[edit]').attr('href');
        $('#myModalContent').load(editurl, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
    });


    //For Handling Modal PopUp on Clicking Delete Icon
    $('#Result').on("click",'a[delete]', function (e) {
        $('#myModalContent').load(this.href, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
        return false;
    });


    //For posting the data through ajax and render the contents sent back from the server
    function bindForm1(dialog) {
        //alert("binding");
        $('form#modform', dialog).submit(function () {
            //alert(this.action);
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //Refresh
                        //location.reload();
                        //alert('Data Saved');
                    }else if(!result.success)
                    {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                    else {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                }
            });
            return false;
        });

    }


    //function Calculation() {
    //    if ($('#ServiceTaxPer').val() != 0) {
    //        $('#ServiceTaxAmount').val((parseFloat($('#Freight').val()) + parseFloat($('#OtherCharges').val())) * $('#ServiceTaxPer').val()/100)
    //    }
    //    $('#TotalAmount').val(parseFloat($('#Freight').val()) + parseFloat($('#OtherCharges').val()) + parseFloat($('#ServiceTaxAmount').val()));
    //}


    function Calculation() {
        var ServiceTaxAmount = 0;
        var Freight = 0;
        var OtherCharges = 0;
        var ServiceTaxPer = 0;
        var TotalAmount = 0;

        if ($('#ServiceTaxAmount').val() == "" || $('#ServiceTaxAmount').val() == null ) { ServiceTaxAmount = 0 } else { ServiceTaxAmount = $('#ServiceTaxAmount').val()  }
        if ($('#Freight').val() == "" || $('#Freight').val() == null ) { Freight = 0 } else { Freight = $('#Freight').val()  }
        if ($('#OtherCharges').val() == "" || $('#OtherCharges').val() == null ) { OtherCharges = 0 } else { OtherCharges = $('#OtherCharges').val()  }
        if ($('#ServiceTaxPer').val() == "" || $('#ServiceTaxPer').val() == null ) { ServiceTaxPer = 0 } else { ServiceTaxPer = $('#ServiceTaxPer').val()  }
        //if ($('#TotalAmount').val() == "" || $('#TotalAmount').val() == null ) { TotalAmount = 0 }



        if (ServiceTaxPer != 0) {
            $('#ServiceTaxAmount').val((parseFloat(Freight) + parseFloat(OtherCharges)) * ServiceTaxPer/100)
        }
        $('#TotalAmount').val(parseFloat(Freight) + parseFloat(OtherCharges) + parseFloat(ServiceTaxAmount));
    }

</script>



<script type="text/javascript">
    $("#submit").on("click", function () {
        var mpoid=$('#DispatchWaybillHeaderId').val();
        var tes;
        if(mpoid<=0)
        {
            tes= $('#DocNo').DuplicateCheckForCreate({ name: 'DispatchWaybillHeader', value: $('#DocNo').val(), doctype: $('#DocTypeId').val() });
        }
        else
        {
            tes = $('#DocNo').DuplicateCheckForEdit({ name: 'DispatchWaybillHeader', value: $('#DocNo').val(), doctype: $('#DocTypeId').val(),headerId:mpoid });
        }
        if (tes) {
            return false;
        }
        else
        {
            return;
        }
    });
</script>

@if ((ViewBag.Mode != "Add") && (ViewBag.Mode != "Edit"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            DisablePageNavigation();
        })
        
        //RemoveFields();

        //function RemoveFields(){
        //    //Disabling input fields
        //    $(':input:not(:submit)').attr('disabled','disabled');

        //    //Removing all the events from the newly created lines
        //    $('#gbody').unbind();

        //    //Removing Add New Row ActionLink
        //    $('a#btnCreate').parents('h5')[0].remove();


        //    //Preventing the click event on newly created elements
        //    $(document).on('click','#gbody a',function(event){
        //        event.preventDefault();
        //    })
        //    //Removing the action link from the form so that the request will be redirected to the Submit function in the controller instead of the hardcoded path
        //    $('form:last').prop('action','');
        //}


    </script>
}

@if ((Model.Status == (int)ActivityTypeContants.Modified || Model.Status == (int)ActivityTypeContants.Submitted)
 && (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            enableActivityLogReason();
        })

        //var href = '/ActivityLog/LogEditReason';
        //var $btnClicked;

        //$(':submit').bind('click', function () {
        //    $btnClicked=$(this);
        //    $('#myModalContent').load(href, function () {

        //        $('#myModal').modal({
        //            backdrop: 'static',
        //            keyboard: true
        //        }, 'show');

        //        bindForm1(this);
        //    });

        //    return false;
        //})

        //function bindForm1(dialog) {

        //    $('#modformr', dialog).submit(function () {

        //        $.ajax({
        //            url: this.action,
        //            type: this.method,
        //            data: $(this).serialize(),
        //            success: function (result) {
        //                if (result.success) {
        //                    $('#myModal').modal('hide');

        //                    $(':submit').unbind();

        //                    $('input[name="UserRemark"]').val(result.UserRemark);

        //                    $btnClicked.trigger('click');

        //                } else {
        //                    $('#myModalContent').html(result);
        //                    bindForm1();
        //                }
        //            }
        //        });
        //        return false;
        //    });

        //}

    </script>
}