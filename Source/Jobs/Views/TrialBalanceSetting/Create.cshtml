@model Model.Models.TrialBalanceSetting

@{
    ViewBag.Title = "Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("CreatePost", "TrialBalanceSetting", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.TrialBalanceSettingId)
    @Html.HiddenFor(m => m.UserName)

    <div class="panel panel-default">

        <div class="panel-heading">

            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Trial Balance Settings</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "GetTrialBalance", "TrialBalance", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">

            <div class="form-horizontal">

                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.FromDate, "From Date", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.FromDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.FromDate, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.ToDate, "To Date", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ToDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.ToDate, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SiteIds, "Sites", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.SiteIds, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.SiteIds, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DivisionIds, "Divisions", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.DivisionIds, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.DivisionIds, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CostCenter, "Cost Center", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.CostCenter, null, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.CostCenter, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DisplayType, "DisplayType", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(m => m.DisplayType, new SelectList(ViewBag.DisplayTypeList as System.Collections.IEnumerable,"Value","Text"), new { @class = "form-control col-xs-6 required height" })
                                @Html.ValidationMessageFor(m => m.DisplayType, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DrCr, "Debit/Credit", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.DropDownListFor(m => m.DrCr, new SelectList(ViewBag.DrCrList as System.Collections.IEnumerable, "Value", "Text"), new { @class = "form-control col-xs-6 required height" })
                                @Html.ValidationMessageFor(m => m.DrCr, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShowZeroBalance, "Show Zero Balance", new { @class = "control-label col-xs-6" })
                            <div class="col-xs-4" style=" padding-top:4px">
                                @Html.CheckBoxFor(m => m.ShowZeroBalance, new { @class = "checkbox col-xs-2" })
                                @Html.ValidationMessageFor(model => model.ShowZeroBalance)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShowContraAccount, "Show Contra Account", new { @class = "control-label col-xs-6" })
                            <div class="col-xs-4" style=" padding-top:4px">
                                @Html.CheckBoxFor(m => m.ShowContraAccount, new { @class = "checkbox col-xs-2" })
                                @Html.ValidationMessageFor(model => model.ShowContraAccount)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script type="text/javascript">

    CustomSelectFunction($("#DivisionIds"), '/ComboHelpList/GetDivision', '/ComboHelpList/SetDivision', ' ', true, 0);
    CustomSelectFunction($("#SiteIds"), '/ComboHelpList/GetSite', '/ComboHelpList/SetSite', ' ', true, 0);
    CustomSelectFunction($("#CostCenter"), '/ComboHelpList/GetCostCenter', '/ComboHelpList/SetCostCenter', ' ', true, 0);



    var IsSaved=false;
    var ValidationCount = 0;


    $('form').submit(function(event){

        if(!IsSaved)
        {
            if(!ValidateData())
            {
                return false;
            }
            IsSaved=true;
            return IsSaved;
        }
        else
        {
            return false;
        }


    });


    function ValidateData() {        
        var ValidationMessage = "";

        return  (ValidationMessage=="");
    }


</script>
