@model Model.ViewModels.MaterialViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~/Scripts/Jasny/jasny-bootstrap.min.js"></script>
<link href="~/Content/jasny/jasny-bootstrap.min.css" rel="stylesheet" />

@using (Html.BeginForm("PostMaterial", "ProductMap", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.ProductId)
    @Html.HiddenFor(m => m.ProductSiteDetailId)
    @Html.HiddenFor(m => m.SiteId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
                @if (@Model.IsSystemDefine)
                {
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9;margin-left:20px" disabled="disabled" />
                    <span style="font-family: Calibri,sans-serif,Verdana; font-weight:bold ;font-size: large" class="text-danger right "><span class="glyphicon glyphicon-floppy-remove"></span> System Defined</span>
                }
                else
                {
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                }
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "CreateMaterial", "ProductMap", new { id = ViewBag.id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "ProductMap", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPageMaterial", "ProductMap", new { id = @Model.ProductId, nid = @Model.ProductGroupId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPageMaterial", "ProductMap", new { id = @Model.ProductId, nid = @Model.ProductGroupId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "MaterialIndex", "ProductMap", new { id = ViewBag.id }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)

                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.@Model.ProductCategoryName Details
                    </h4>
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group" style="margin-top:15px">
                                            @Html.LabelFor(model => model.ProductSKUId, "Product SKU", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @if (Model.ProductId > 0)
                                                {
                                                    @Html.TextBoxFor(model => model.ProductSKUId, null, new { @class = "form-control col-xs-6 height required", @readonly = "true" })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(model => model.ProductSKUId, null, new { @class = "form-control col-xs-6 height required" })
                                                }
                                                @Html.ValidationMessageFor(model => model.ProductSKUId, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductName, "Product Name", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(model => model.ProductName, null, new { @class = "form-control col-xs-6 height required" })
                                                @Html.ValidationMessageFor(model => model.ProductName, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductCode, "Product Code", new { @class = "control-label col-xs-4 " })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.ProductCode, null, new { @class = "form-control col-xs-6 required" })
                                                @Html.ValidationMessageFor(model => model.ProductCode, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.UnitId, "Stock Unit", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.DropDownListFor(m => m.UnitId, new SelectList(ViewBag.UnitList as System.Collections.IEnumerable, "UnitId", "UnitName"), new { @class = "form-control col-xs-6 height", @disabled = "disabled" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-offset-4 col-md-8">
                                        <div class="fileinput fileinput-new" data-provides="fileinput">
                                            <div class="fileinput-new thumbnail" style="width: 200px; height: 150px;">
                                                <img src="~/Uploads/@(Model.ImageFolderName)/Medium/@(Model.ImageFileName)" alt="...">
                                            </div>
                                            <div class="fileinput-preview fileinput-exists thumbnail" style="max-width: 200px; max-height: 150px;"></div>
                                            <div>
                                                <span class="btn btn-default btn-file" style="background-color: transparent; color: black; font-family:Arial; border-radius:5px">
                                                    <span id="Select" class="fileinput-new">Select</span>
                                                    <span id="Change" class="fileinput-exists">Change</span>
                                                    <input type="file" name="upload">
                                                </span>
                                                <a href="#" class="btn btn-default fileinput-exists" style="background-color: transparent; color: black; font-family: Arial; border-radius: 5px" data-dismiss="fileinput">Remove</a>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductGroupId, "Group", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.ProductGroupId, new SelectList(ViewBag.ProductGroupList as System.Collections.IEnumerable, "ProductGroupId", "ProductGroupName"), new { @class = "form-control col-xs-6 required height" })
                                        @Html.ValidationMessageFor(model => model.ProductGroupId, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StandardCost, "Standard Cost", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.StandardCost, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.StandardCost, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SalesTaxGroupProductId, "Sales Tax Group", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.SalesTaxGroupProductId, new SelectList(ViewBag.SalesTaxGroup as System.Collections.IEnumerable, "SalesTaxGroupProductId", "SalesTaxGroupProductName"),string.Empty, new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6" style=" padding-top:4px">
                                        @Html.CheckBoxFor(m => m.IsActive, new { @class = "checkbox col-xs-1" })
                                        @Html.ValidationMessageFor(model => model.IsActive)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        CustomSelectFunction($("#ProductSKUId"), '/ProductMap/GetProductHelpList', '/ComboHelpList/SetSingleProducts', 'Enter SKU', false, 1);
    });

    $('#ProductSKUId').change(function(){
        var name=$('#ProductSKUId').select2('data');
        $('#ProductName').val(name.text+"-Map");
        $('#ProductCode').val(name.text+"-Map");
    })


    $(":submit").on("click", function () {
        var mpoid=@Model.ProductId;
        var tes;
        if(mpoid<=0)
        {
            tes= $('#ProductName').DuplicateCheckForCreate({ name: 'Product', value: $('#ProductName').val(), doctype: 0 });
        }
        else
        {
            tes = $('#ProductName').DuplicateCheckForEdit({ name: 'Product', value: $('#ProductName').val(), doctype: 0,headerId:mpoid });
        }
        if (tes) {
            return false;
        }
        else
        {
            return;
        }
    });



</script>