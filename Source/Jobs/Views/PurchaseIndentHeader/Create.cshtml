@model Model.ViewModels.PurchaseIndentHeaderViewModel
@using Core.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>


@using (Html.BeginForm("Post", "PurchaseIndentHeader", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Status )
    @Html.HiddenFor(m => m.SiteId)
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.PurchaseIndentHeaderId)
    @Html.HiddenFor(m => m.DocTypeId)
    @Html.HiddenFor(m => m.CreatedDate)


    <div class="panel panel-default">
        <div class="panel-heading">

            @CustomHelpers.RenderHeaderInfo(ViewBag.transactionType, (int?)ViewBag.PendingToSubmit, (int?)ViewBag.PendingToReview, ViewBag.Name)

            @*@if (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue")
            {<h3>
                 <button type="submit" name="Command:Submit" class="btn btn-primary right" id="SubmitContinue" style="margin-left:5px;">Submit & Next<span class='badge'>@(ViewBag.PendingToSubmit != 0 ? ViewBag.PendingToSubmit : "")</span></button>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Submit @ViewBag.Name</span>
                <input type="submit" value="Submit" name="Command:Submit" class="btn btn-primary right" style="width: 90px; background-color: #2980b9" />
                 <input type="hidden" id="IsContinue" name="IsContinue" value="" />
            </h3>}
            else if (ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue")
            {<h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>Review @ViewBag.Name</span>
                 <button type="submit" name="Command:Review" class="btn btn-primary right" style="margin-left:5px" id="ReviewContinue">Review & Next<span class='badge'>@(ViewBag.PendingToReview != 0 ? ViewBag.PendingToReview : "")</span></button>
                <input type="submit" value="Review" class="btn btn-primary right" name="Command:Review" style="width: 90px; background-color: #2980b9" />
                 <input type="hidden" id="IsContinue" name="IsContinue" value="" />
            </h3>}
             else if(ViewBag.transactionType=="detail")
            {
                <h3>
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span>@ViewBag.Name</span>                
                </h3>
            }
            else
            {
                <h3>
                    <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"> <span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                </h3>
            }*@

            @{
                string EditAction = "";
                if (Model.Status == (int)StatusConstants.Drafted || Model.Status == (int)StatusConstants.Import)
                {
                    EditAction = "Modify";
                }
                else if ((Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified))
                {
                    EditAction = "ModifyAfter_Submit";
                }
                else
                {
                    EditAction = "DetailInformation";
                }
            }

            @*<hr style="margin-top:0px;margin-bottom:0px" />*@

            <div class="panel-info"> 
                     
         <div class="btn-group">
        @Html.ActionLink(" ", "Create", "PurchaseIndentHeader", new { @id = ViewBag.id }, new { @class = "cbtn btn-circle glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
        @Html.ActionLink(" ", EditAction, "PurchaseIndentHeader", new { @id = Model.PurchaseIndentHeaderId, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-edit", @title = "Edit", @data_toggle = "tooltip" })
         @Html.ActionLink(" ", "GeneratePrints", "PurchaseIndentHeader", new { Ids = Model.PurchaseIndentHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordC", target = "_blank" })
        @Html.ActionLink(" ", "PrevPage", "PurchaseIndentHeader", new { DocId = @Model.PurchaseIndentHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
        @Html.ActionLink(" ", "NextPage", "PurchaseIndentHeader", new { DocId = @Model.PurchaseIndentHeaderId, DocTypeId = Model.DocTypeId }, new { @class = "cbtn btn-circle glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
        @Html.ActionLink(" ", "Index", "PurchaseIndentHeader", new { @id = ViewBag.id, IndexType = ViewBag.IndexStatus }, new { @class = "cbtn btn-circle glyphicon glyphicon-list", @title = "List", @data_toggle = "tooltip" })
    </div>
    <div class="btn-group">
        <a class="cbtn btn-circle glyphicon glyphicon-option-horizontal dropdown-toggle" aria-expanded="false" title="More Option" style="padding-top: 6px;padding-bottom: 6px;" href="#" data-toggle="dropdown" id="dropdownMenu1">
        </a>
        <ul class="dropdown-menu pull-right" aria-labelledby="dropdownMenu1">
            <li><a id="DocHistory" data-modal="" href="@Url.Action("GetHistory", "LogHistory", new { Ids = Model.PurchaseIndentHeaderId, DocTypeId = Model.DocTypeId })"><span class="glyphicon glyphicon-user"> </span> History</a></li>
            <li><a href="@Url.Action("Email", "PurchaseIndentHeader")"><span class="glyphicon glyphicon-envelope"> </span> Email</a></li>
            <li role="separator" class="divider"></li>
            <li><a target="_blank" href="@Url.Action("Report", "PurchaseIndentHeader", new { @ViewBag.id })"><span class="glyphicon glyphicon-th"> </span> Report</a></li>
        </ul>
    </div>
            </div>
        </div>


        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)
                <div>
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Indent Details
                    </h4>
                    <div>
                        <div>
                            @*<div class="col-md-6">
                                    <div class="form-group" style="margin-top:15px">
                                        @Html.LabelFor(model => model.DocTypeId, "Entry Type", new { @class = "control-label col-xs-4" })
                                        <div class="col-xs-6">
                                            @Html.DropDownListFor(model => model.DocTypeId, new SelectList(ViewBag.DocTypeList as System.Collections.IEnumerable, "DocumentTypeId", "DocumentTypeName"), new { @class = "form-control col-xs-6 height required" })
                                        </div>
                                    </div>
                                </div>*@
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocDate, "Indent Date", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepickerWithNFD form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.DocDate)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocNo, "Indent No", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(m => m.DocNo)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DepartmentId, "Department", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.DropDownListFor(m => m.DepartmentId, new SelectList(ViewBag.ListDepart as System.Collections.IEnumerable, "DepartmentId", "DepartmentName"), new { @class = "form-control col-xs-6 required height required" })
                                        @Html.ValidationMessageFor(m => m.DepartmentId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReasonId, "Reason", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.DropDownListFor(m => m.ReasonId, new SelectList(ViewBag.ReasonList as System.Collections.IEnumerable, "ReasonId", "ReasonName"), string.Empty, new { @class = "height form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.ReasonId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-md-4 col-sm-2" })
                                    <div class="col-md-7 col-sm-10">
                                        @Html.TextAreaFor(m => m.Remark, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(m => m.Remark)
                                    </div>
                                </div>
                            </div>

                        </div>
                        @*<div class="row">

                            </div>*@
                    </div>
                </div>


                <hr />
                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Products
                    </h4>
                </div>

            
                <div class="panel-info" style="height:40px;">
                    <div class="btn-group" style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        @{string Action = "";
                            if (Model.Status == (int)StatusConstants.Drafted)
                            { Action = "CreateLine"; }
                            else if (Model.Status == (int)StatusConstants.Submitted || Model.Status == (int)StatusConstants.Modified)
                            { Action = "CreateLineAfter_Submit"; }
                            else if (Model.Status == (int)StatusConstants.Approved)
                            { Action = "CreateLineAfter_Approve"; }
                        }
                        @Html.ActionLink("Add New Row ", Action, "PurchaseIndentLine", new { id = @Model.PurchaseIndentHeaderId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip", @data_detailDisabled = "true" })
                    </div>
                    <div class="btn-group right" style="padding-right:15px">
                        @Html.ActionLink(" ", "_ForMaterialPlan", "PurchaseIndentLine", new { id = @Model.PurchaseIndentHeaderId }, new { data_modal = "", id = "btnCreateF", @class = "cbtn btn-circle glyphicon glyphicon-link toolbar right", @title = "For Material Plan", @data_toggle = "tooltip", @data_detailDeleted = "true" })
                   </div>
                    </div>
                <div style="padding-right:15px">



                    <div class="panel panel-default" id="grid">
                        <div class="panel-heading headrow" style="background-image: -webkit-linear-gradient(top, #428bca 0%, #428bca 100%);color:white">
                            <div class="row grid-head">
                                <div class="col-xs-1 text-left">
                                    Srl.
                                </div>
                                <div class="col-xs-10">
                                    <div class="row">
                                        @*ProductInfo*@
                                        <div class="col-sm-3">
                                            Product Name

                                        </div>
                                        <div class="col-sm-2">
                                            Plan No
                                        </div>
                                        <div class="col-sm-1">
                                            DueDate
                                        </div>                                        
                                        @*Qty*@
                                        <div class="col-sm-2 text-right">
                                            Qty
                                        </div>
                                        @*Rate*@
                                        @*<div class="col-sm-2 text-right">
                                                Rate
                                            </div>*@
                                        @*Amount*@
                                        @*<div class="col-sm-2 text-right">
                                                Amount
                                            </div>*@
                                        @*Remark*@
                                        <div class="col-sm-4">
                                            Remark

                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-1">

                                </div>
                            </div>

                        </div>
                        <div class="panel-info" id="gbody">


                        </div>
                    </div>



                    @*<table class="table table-hover ctable">
                            <thead id="header">
                            </thead>

                            <tbody id="Result"></tbody>
                        </table>*@

                </div>
            </div>
        </div>
    </div>
}


@if ((ViewBag.Mode == "Add") || (ViewBag.Mode == "Edit"))
{ 

<script type="text/javascript">

    //Reloading the table contents on modal hide
    $('#myModal').on('hidden.bs.modal', function () {
        LoadProducts();
    });

    $(document).ready(function(){
        enableModalTransitions();
    })

    ////To focus on the first element on modal load
    //$('#myModal').on('shown.bs.modal', function () {
    //    $("#ProductId").select2("focus");
    //});


    ////For Populating Modal PopUp on DoubleClick Of Row
    //$('#gbody').on("dblclick",'.grid-body',function(){
    //    var editurl=$(this).find('a[edit]').attr('href');
    //    $('#myModalContent').load(editurl, function () {
    //        //alert('2');
    //        $('#myModal').modal({
    //            backdrop: 'static',
    //            keyboard: true
    //        }, 'show');

    //        bindForm1(this);
    //    });
    //});

    ////For Handling Modal PopUp on Clicking Delete Icon
    //$('#gbody').on("click",'a[Detail]', function (e) {
    //    $('#myModalContent').load(this.href, function (response, status, xhr) {
    //        //alert('2');
    //        if ( status == "error" ) {
    //            var msg = "Sorry but there was an error: ";                                
    //        }
    //        else
    //        {
    //            $('#myModal').modal({
    //                backdrop: 'static',
    //                keyboard: true
    //            }, 'show');

    //            bindForm1(this);}
    //    });
    //    return false;
    //});

    ////For Handling Modal PopUp on Clicking Delete Icon
    //$('#gbody').on("click",'a[delete]', function (e) {
    //    $('#myModalContent').load(this.href, function () {
    //        //alert('2');
    //        $('#myModal').modal({
    //            backdrop: 'static',
    //            keyboard: true
    //        }, 'show');

    //        bindForm1(this);
    //    });
    //    return false;
    //});


    ////For posting the data through ajax and render the contents sent back from the server
    //function bindForm1(dialog) {
    //    //alert("binding");
    //    $('form#modform', dialog).submit(function () {
    //        //alert(this.action);
    //        $.ajax({
    //            url: this.action,
    //            type: this.method,
    //            data: $(this).serialize(),
    //            success: function (result) {
    //                if (result.success) {
    //                    $('#myModal').modal('hide');
    //                    //Refresh
    //                    //location.reload();
    //                    //alert('Data Saved');
    //                }else if(!result.success)
    //                {
    //                    $('#myModalContent').html(result);
    //                    bindForm1();
    //                }
    //                else {
    //                    $('#myModalContent').html(result);
    //                    bindForm1();
    //                }
    //            }
    //        });
    //        return false;
    //    });

    //}



</script>

}


<script type="text/javascript">

    @*$('a#PrintRecord').click(function (e) {
        
        var editiiid = $('#PurchaseIndentHeaderId').val();     
       
        
        var Status = $('#Status').val();
        var url;
        if (Status == StatusContstantsEnum.Drafted) {
            url = '@Url.Action("Print", "PurchaseIndentHeader")' + "/" + editiiid;
        }
        else if (Status == StatusContstantsEnum.Submitted || Status == StatusContstantsEnum.Modified ) {
            url = '@Url.Action("PrintAfter_Submit", "PurchaseIndentHeader")' + "/" + editiiid;
        }
        else if (Status == Status == StatusContstantsEnum.Closed ) {
            url = '@Url.Action("PrintAfter_Approve", "PurchaseIndentHeader")' + "/" + editiiid;
        }       
        $(this).attr('href', url);
        return;
    })*@

    $(document).ready(function () {
        var id=@Model.PurchaseIndentHeaderId;
        if(id==null||id==0)
        {
            $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
            $(document).find('a#btnCreateF').removeAttr('href').removeAttr('data-modal');
            
            $("#btnCreateF").attr('disabled','disabled');
        }

        //Calling the function to load the table data/ Line information
        LoadProducts();

        //Adding Hidden Input Fields
        AddFields();

    });     

    function LoadProducts() {
        var DomainName='@System.Configuration.ConfigurationManager.AppSettings["AdminSetupDomain"]';
        var SelectedRecord='@ViewBag.DocLineId';
        var groupId=@Model.PurchaseIndentHeaderId;
        var status='@Model.Status';
        var link="/PurchaseIndentLine/Index/"+groupId;
        var unit=true;
        var prevunit;
        var QtyCount=0;
        var decimal=0;
        var LineEditUrl="";
        var LineDeleteUrl="";
        if(status==StatusContstantsEnum.Drafted)
        {
            LineEditUrl="/PurchaseIndentLine/_ModifyLine/";
            LineDeleteUrl="/PurchaseIndentLine/_DeleteLine/";
        }
        else if(status==StatusContstantsEnum.Submitted || status == StatusContstantsEnum.Modified )
        {
            LineEditUrl="/PurchaseIndentLine/_ModifyLineAfterSubmit/";
            LineDeleteUrl="/PurchaseIndentLine/_DeleteLine_AfterSubmit/";
        }
        else {
            LineEditUrl = "/PurchaseIndentLine/_Detail/";
            LineDeleteUrl = "/PurchaseIndentLine/_Detail/";
        }
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;

                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        var PlanUrl=DomainName+"/Redirect/RedirectToDocument?DocTypeId="+item.PlanDocTypeId+"&DocId="+item.PlanHeaderId+"&DocLineId="+item.MaterialPlanLineId;

                        row += " <div class='row crow grid-body' style='margin-left:0px;margin-right:0px' id='"+item.PurchaseIndentLineId+"'><div class='col-xs-1 row-index'><a Detail='' href='/PurchaseIndentLine/_Detail/"+item.PurchaseIndentLineId+"'>"+srno+"</a><input type='hidden' class='id' value='"+item.PurchaseIndentLineId+"' /></div><div class='col-xs-10'><div class='row'><div class='col-sm-3'>"+(item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>")+"<br />"+(item.Specification==null?" ":item.Specification)+"</div> <div class='col-sm-2'>"+(item.MaterialPlanHeaderDocNo==null?" ":" <a href='"+PlanUrl+"' style='color:black'> <span class='small' style='font-weight:bold'>"+item.MaterialPlanHeaderDocNo+"</span> </a>")+"</div> <div class='col-sm-1'>"+"<div>"+((item.DueDate==null)?" ":"<span title='DueDate' class='label label-danger' style='font-weight:bold'>"+formatDate('d/m/Y',new Date(parseInt(item.DueDate.substr(6))))+"</span>")+"</div></div><div class='col-sm-2 text-right'>"+(item.Qty==null?" ":item.Qty)+" <small>"+(item.UnitId==null?" ":item.UnitId)+"</small> <div style='width:80%;float:right'> </div>  </div> <div class='col-sm-4'>"+(item.Remark==null?" ":item.Remark+"<br />")+"</div></div></div><div class='col-xs-1'><a class='glyphicon glyphicon-trash icon-Cus-Size' data-modal='' data-detailDisabled='true' delete='' href='"+LineDeleteUrl+item.PurchaseIndentLineId+"'></a><a  edit='' href='"+LineEditUrl+item.PurchaseIndentLineId+"'></a></div></div><hr style='margin-top:0px;margin-bottom:0px'/></div>";
                        QtyCount+=item.Qty;
                        if(srno!=1)
                        {
                            if(item.UnitId==prevunit)
                            {}
                            else
                            {unit=false;}
                        }
                        if(decimal<item.unitDecimalPlaces){decimal=item.unitDecimalPlaces;}
                        srno++;
                        prevunit=item.UnitId;
                    });
                    row+="<div class='row tfooter' style='padding-top:10px;'><div class='col-xs-1'></div><div class='col-xs-10'><div class='row'>  <div class='col-sm-3'><strong>Total</strong></div><div class='col-sm-2'></div><div class='col-sm-1'></div><div class='col-sm-2 text-right'><strong>"+ ((unit==true)?QtyCount.toFixed(decimal)+"-"+prevunit:QtyCount.toFixed(decimal))+"</strong></div><div class='col-sm-4'></div></div></div><div class='col-xs-1'></div></div>"                    
                }
                else
                {
                    ;
                }
                $("#gbody").html(row);
                if(SelectedRecord)
                {
                    var Id="#"+SelectedRecord
                    NavigateToLineRecord(Id);}
            },
            error: function (result) {
                alert("Error");
            }
        });
    };

</script>


@if ((ViewBag.Mode != "Add") && (ViewBag.Mode != "Edit"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            enableModalTransitions();
        })
        $(document).ready(function(){
            DisablePageNavigation();
        })

        //RemoveFields();

        //function RemoveFields(){
        //    //Disabling input fields
        //    $(':input:not(:submit,#IsContinue)').attr('disabled','disabled');

        //    //Removing all the events from the newly created lines
        //    $('#gbody').unbind();

        //    //Removing Add New Row ActionLink
        //    $('a#btnCreate').parents('h5')[0].remove();


        //    //Preventing the click event on newly created elements
        //    $(document).on('click','#gbody a',function(event){
        //        event.preventDefault();
        //    })
        //    //Removing the action link from the form so that the request will be redirected to the Submit function in the controller instead of the hardcoded path
        //    $('form:last').prop('action','');
        //}


    </script>
}

@if ((Model.Status == (int)ActivityTypeContants.Modified || Model.Status == (int)ActivityTypeContants.Submitted)
    && (ViewBag.transactionType == "submit" || ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "review" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            enableActivityLogReason();
        })

        //var href = '/ActivityLog/LogEditReason'

        //$(':submit').bind('click', function () {
        //    var Button=$(this);
        //    $('#myModalContent').load(href, function () {

        //        $('#myModal').modal({
        //            backdrop: 'static',
        //            keyboard: true
        //        }, 'show');

        //        bindForm1(this,Button);
        //    });

        //    return false;
        //})

        //function bindForm1(dialog,Button) {

        //    $('#modformr', dialog).submit(function () {

        //        $.ajax({
        //            url: this.action,
        //            type: this.method,
        //            data: $(this).serialize(),
        //            success: function (result) {
        //                if (result.success) {
        //                    $('#myModal').modal('hide');

        //                    $(':submit').unbind();

        //                    $('input[name="UserRemark"]').val(result.UserRemark);

        //                    $(Button).trigger('click');

        //                } else {
        //                    $('#myModalContent').html(result);
        //                    bindForm1();
        //                }
        //            }
        //        });
        //        return false;
        //    });

        //}

    </script>
}
@if (ViewBag.transactionType != null && (ViewBag.transactionType == "submitContinue" || ViewBag.transactionType == "ReviewContinue"))
{
    <script type="text/javascript">

        $(document).ready(function(){
            CreateTrasitionEffect();
        })

        //CreateTrasitionEffectForSubmit();

        //function CreateTrasitionEffectForSubmit(){

        //    //$('body').find('.container.body-content > div.row ').wrap("<div class='animsition' data-animsition-in='fade-in-right-lg' data-animsition-out='fade-out-left-lg' style='animation-duration: 1.5s; -webkit-animation-duration: 1.5s; opacity: 0;'> </div>");

        //    $('body').find('form').filter(":last").wrapInner("<div class='animsition' data-animsition-in='fade-in-right-lg' data-animsition-out='fade-out-left-lg' style='animation-duration: 1.5s; -webkit-animation-duration: 1.5s; opacity: 0;'> </div>");

        //    var script=document.createElement('script');

        //    script.setAttribute('type','text/javascript');

        //    script.text=" $(document).ready(function () {$('.animsition').animsition().one('animsition.start', function () {}).one('animsition.end', function () {$(this).find('.animsition-child').addClass('zoom-in').css({'opacity': 1});})});";

        //    $('body').append(script);

        //}
    </script>
}