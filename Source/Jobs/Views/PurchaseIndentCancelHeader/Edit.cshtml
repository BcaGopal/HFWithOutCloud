@model Surya.India.Model.ViewModels.SaleOrderHeaderIndexViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Edit", "SaleOrderHeader", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m=>m.SaleOrderHeaderId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                Edit
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span>Sale Order</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "SaleOrderHeader", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "SaleOrderHeader", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Print", "SaleOrderHeader", null, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Email", "SaleOrderHeader", null, new { @class = "glyphicon glyphicon-envelope toolbar", @title = "Email", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "SaleOrderHeader", new { id = @Model.SaleOrderHeaderId, name = @Model.DocNo }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "SaleOrderHeader", new { id = @Model.SaleOrderHeaderId, name = @Model.DocNo }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @*@Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-trash toolbar", @title = "Delete", @data_toggle = "tooltip" })*@
                    @Html.ActionLink(" ", "Index", "SaleOrderHeader", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Report", "SaleOrderHeader", null, new { @class = "glyphicon glyphicon-th toolbar right", @title = "Report", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                <input type="hidden" name="Redirect" id="Redirect" value="@ViewBag.Redirect" />
                @Html.ValidationSummary(true)

                <div class="row">
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.Document Details
                    </h4> 
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocTypeId, "Entry Type", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(model => model.DocTypeId, new SelectList(ViewBag.DocTypeList as System.Collections.IEnumerable, "DocumentTypeId", "DocumentTypeName"), new { @class = "form-control col-xs-6 height required" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group" style="margin-top:15px">
                                    @Html.LabelFor(model => model.DocNo, "Order No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.DocNo, null, new { @class = "form-control col-xs-6 required" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DocDate, "Order Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.DocDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.DocDate)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DueDate, "Due Date", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.DueDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Buyer Details
                    </h4> 
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BuyerOrderNo, "Buyer Order No", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(model => model.BuyerOrderNo, null, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SaleToBuyerId, "Sale To Buyer", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.SaleToBuyerId, new SelectList(ViewBag.BuyerList as System.Collections.IEnumerable, "PersonId", "Name"), new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillToBuyerId, "Bill To Buyer", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.BillToBuyerId, new SelectList(ViewBag.BuyerList as System.Collections.IEnumerable, "PersonId", "Name"), new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CurrencyId, "Currency", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.CurrencyId, new SelectList(ViewBag.CurrencyList as System.Collections.IEnumerable, "ID", "Name"), new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ShipAddress, "Ship Address", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextAreaFor(m => m.ShipAddress, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <hr />

                <div class="row">
                    <h4 class="col-md-12 black">
                        <span class="glyphicon glyphicon-certificate"></span>
                        3.Terms & Conditions
                    </h4> 
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ShipMethodId, "Ship Method", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(model => model.ShipMethodId, new SelectList(ViewBag.ShipMethodList as System.Collections.IEnumerable, "ShipMethodId", "ShipMethodName"), new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DeliveryTermsId, "Delivery Terms", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(model => model.DeliveryTermsId, new SelectList(ViewBag.DeliveryTermsList as System.Collections.IEnumerable, "DeliveryTermsId", "DeliveryTermsName"), new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Priority, "Priority", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownList("Priority", null, new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CreditDays, "Credit Days", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.CreditDays, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TermsAndConditions, "Terms & Conditions", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextAreaFor(m => m.TermsAndConditions, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remark, "Remark", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.Remark, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <hr />
                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Products
                    </h4>


                </div>

                <div class="panel-info">
                    <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        @Html.ActionLink("Add New Row ", "_Create", "SaleOrderLine", new { id = @Model.SaleOrderHeaderId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    </h5>
                </div>
                <div style="padding-right:15px">

                    <table class="table table-hover ctable">
                        <thead id="header">
                        </thead>

                        <tbody id="Result"></tbody>
                    </table>

                </div>
                @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-8">
                        <input type="submit" value="Save" class="btn btn-primary btn-sm CurveBorder height" id="submit" style=" border-color: #606264" disabled="disabled"/>

                        @Html.ActionLink("Back", "Index", "SaleOrderHeader", new { @class = "btn btn-primary btn-sm col-md-offset-1 CurveBorder ActionLinkPadding CustomCss height" })

                        <input type="submit" value="Add Products" class="btn btn-primary col-md-offset-4 btn-sm CurveBorder height" id="addProd" style=" border-color: #606264" />
                        @Html.ActionLink("Add products", "_Create", "SaleOrderLine", new { id = @Model.SaleOrderHeaderId}, new { data_modal = "", id = "addProd", @class = "btn btn-primary btn-sm col-md-offset-4 CurveBorder ActionLinkPadding CustomCss height" })
                    </div>
                </div>*@
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    var form_clean;
    $(document).ready(function () {

        //Calling the function to load the table data/ Line information
        LoadProducts();
        

        form_clean = $("form").serialize();


        //For maintaining the data change on the form
        //To enable of disable save button based on the data changed
        $("input,select").change(function () {
            var form_dirty = $("form").serialize();
            if (form_clean != form_dirty) {
                $("#submit").removeAttr('disabled');
            }
            else
            {
                // alert('same form');
                $("#submit").attr({ "disabled": "disabled" })
            }
        });
    });


    //Reloading the table contents on modal hide
    $('#myModal').on('hidden.bs.modal', function () {
        LoadProducts();
    });


    //To focus on the first element on modal load
    $('#myModal').on('shown.bs.modal', function () {
        $("#StandardSizeId").select2("focus");
    });



    //Loading the Table data or Line Information
    function LoadProducts() {
        var groupId=@Model.SaleOrderHeaderId;
        var link="/SaleOrderLine/Index/"+groupId;
        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;
                var head="<tr style='background-color:#428bca'>  <th style='width:10px'><input type='hidden'  /></th> <th style='width:10px'>Sr.No</th><th class='center' style='width:50px'>Product</th>   <th class='center' style='width:50px'>Qty</th> <th class='center' style='width:50px'>Delivery Unit</th> <th style='width:50px'>Delivery Qty</th> <th style='width:50px'>Rate</th>  <th style='width:50px'>Amount</th>  <th style='width:50px'>Due Date</th>  <th style='width:50px'>Remark</th> <th style='width:10px'></th>       <th style='width:10px'></th>  </tr>"
                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += "<tr><td><input type='hidden' class='id' value='" + item.SaleOrderLineId + "'/></td> <td>"+srno+"</td> <td>" + item.ProductName + "</td><td>" + ((item.DeliveryUnitId==null)?" ":item.DeliveryUnitId )+ "</td><td>" + ((item.DeliveryQty==null)?" ":item.DeliveryQty ) + "</td><td> "+((item.Rate==null)?" ":item.Rate )+"</td> <td> "+((item.Amount==null)?" ":item.Amount )+"</td>  <td> "+((item.DueDate==null)?" ":item.DueDate)+"</td>  <td> "+((item.Remark==null)?" ":item.Remark)+"</td> <td><a class='rowEditBlue hidden' Modify href='/SaleOrderLine/_Edit/"+item.SaleOrderLineId+"' ></a></td>       <td><a class='glyphicon glyphicon-trash' data-modal='' delete='' href='/SaleOrderLine/_Edit/"+item.SaleOrderLineId+"' ></a></td>  </tr>";
                        srno++;
                    });
                    $('#ProductGroupName').attr('readonly','true');
                }
                else
                {
                    row+="<tr><td>No Items Found.</td></tr>";
                }
                $("#header").html(head);
                $("#Result").html(row);
            },
            error: function (result) {
                alert("Error");
            }
        });
    }


    //For Populating Modal PopUp on DoubleClick Of Row
    $('#Result').on("dblclick",'tr',function(){
        var text = $(this).find(".id").val();
        var editurl=$(this).find('a[Modify]').attr('href');
        $('#myModalContent').load(editurl, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
    });


    //For Handling Modal PopUp on Clicking Delete Icon
    $('#Result').on("click",'a[delete]', function (e) {
        $('#myModalContent').load(this.href, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
        return false;
    });


    //For posting the data through ajax and render the contents sent back from the server
    function bindForm1(dialog) {
        $('form', dialog).submit(function () {
            //alert('inside test');
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //Refresh
                        //location.reload();
                        //alert('Data Saved');
                    }else if(!result.success)
                    {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                    else {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                }
            });
            return false;
        });

    }

</script>