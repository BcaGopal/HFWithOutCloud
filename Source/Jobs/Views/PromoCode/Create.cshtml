@model Model.Models.PromoCode

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Post", "PromoCode", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.PromoCodeId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Promo Code</span>
                <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "Create", "PromoCode", null, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "PromoCode", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPage", "PromoCode", new { id = @Model.PromoCodeId }, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPage", "PromoCode", new { id = @Model.PromoCodeId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "Index", "PromoCode", null, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">

                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.PromoCodeName, "Promo Code Name", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.PromoCodeName, null, new { @class = "form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(m => m.PromoCodeName, null, new { @class = "has-error" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FromDate, "From Date", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.FromDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ToDate, "To Date", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ToDate, "{0:dd/MMMM/yyyy}", new { @class = "datepicker form-control col-xs-6 required" })
                                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductId, "Product", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProductId, new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.ProductId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductGroupId, "Product Group", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProductGroupId, new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.ProductGroupId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductCategoryId, "Product Category", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProductCategoryId, new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.ProductCategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductTypeId, "Product Type", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProductTypeId, new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.ProductTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProcessId, "Process", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.ProcessId, new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.ProcessId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MinQty, "Min.Qty", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.MinQty, new { @class = "form-control col-xs-6 height" })
                                @Html.ValidationMessageFor(m => m.MinQty, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>



                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MinInvoiceValue, "Min.Invoice Value", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.MinInvoiceValue, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.MinInvoiceValue, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DiscountPer, "Discount %", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.DiscountPer, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.DiscountPer, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FlatDiscount, "Flat Discount", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.FlatDiscount, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.FlatDiscount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MaxDiscountAmount, "Max Discount Amt", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6">
                                @Html.TextBoxFor(m => m.MaxDiscountAmount, new { @class = "form-control col-xs-6" })
                                @Html.ValidationMessageFor(m => m.MaxDiscountAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.IsApplicableOnce, "Is Applicable Once", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6" style=" padding-top:4px">
                                @Html.CheckBoxFor(m => m.IsApplicableOnce, new { @class = "checkbox col-xs-1" })
                                @Html.ValidationMessageFor(model => model.IsApplicableOnce)
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group" style="margin-top:15px">
                            @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-6" style=" padding-top:4px">
                                @Html.CheckBoxFor(m => m.IsActive, new { @class = "checkbox col-xs-1" })
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script type="text/javascript">

    $(document).ready(function () {
        var DocID = $('#SaleOrderHeaderId').val();
        CustomSelectFunction($("#ProductId"), '/ComboHelpList/GetProducts', '/ComboHelpList/SetSingleProducts', ' ', false, 0);
        CustomSelectFunction($("#ProductGroupId"), '/ComboHelpList/GetProductGroup', '/ComboHelpList/SetSingleProductGroup', ' ', false, 0);
        CustomSelectFunction($("#ProductCategoryId"), '/ComboHelpList/GetProductCategory', '/ComboHelpList/SetSingleProductCategory', ' ', false, 0);
        CustomSelectFunction($("#ProductTypeId"), '/ComboHelpList/GetProductType', '/ComboHelpList/SetSingleProductType', ' ', false, 0);
        CustomSelectFunction($("#ProcessId"), '/ComboHelpList/GetProcess', '/ComboHelpList/SetSingleProcess', ' ', false,0);


        $("#PromoCodeName").focus();

        $('.datepicker').datepicker({
            format: 'dd/MM/yyyy',
            "setDate": new Date(),
            "autoclose": true

        })

        var IsSaved=false;
        var ValidationCount=0;

        $('#modform').bind('submit',function(){
            if(!IsSaved)
            {
                IsSaved=true;
                $('button:submit').attr('disabled','disabled');
            }
            else
            {
                return false;
            }
        });
    });

    $(function () {
        $("#ProductId").change(ValidationProduct);
        $("#ProductGroupId").change(ValidationProductGroupAndCategory);
        $("#ProductCategoryId").change(ValidationProductGroupAndCategory);
    });

    function ValidationProduct() {
        if ($("#ProductId").val() != 0 && $("#ProductId").val() != null)
        {
            $("#ProductGroupId").select2("data", { id: '', text: '' });
            $("#ProductCategoryId").select2("data", { id: '', text: '' });
            $("#ProductTypeId").select2("data", { id: '', text: '' });

            $('#ProductGroupId').attr('readonly','true');
            $('#ProductCategoryId').attr('readonly','true');
            $('#ProductTypeId').attr('readonly','true');
        }
        else{
            $('#ProductGroupId').removeAttr('readonly');
            $('#ProductCategoryId').removeAttr('readonly');
            $('#ProductTypeId').removeAttr('readonly');
        }
    }

    function ValidationProductGroupAndCategory() {
        if (($("#ProductGroupId").val() != 0 && $("#ProductGroupId").val() != null) || ($("#ProductCategoryId").val() != 0 && $("#ProductCategoryId").val() != null))
        {
            $("#ProductTypeId").select2("data", { id: '', text: '' });
            $('#ProductTypeId').attr('readonly','true');
        }
        else{
            $('#ProductTypeId').removeAttr('readonly');
        }
    }
</script>




<script type="text/javascript">

    $(":submit").on("click", function () {
        var mpoid=@Model.PromoCodeId;
        var tes;
        if(mpoid<=0)
        {
            tes= $('#PromoCodeName').DuplicateCheckForCreate({ name: 'PromoCode', value: $('#PromoCodeName').val(), doctype: 0 });
        }
        else
        {
            tes = $('#PromoCodeName').DuplicateCheckForEdit({ name: 'PromoCode', value: $('#PromoCodeName').val(), doctype: 0,headerId:mpoid });
        }
        if (tes) {
            return false;
        }
        else
        {
            return;
        }
    });

</script>
