@model Models.Reports.ViewModels.ReportLineViewModel


<div class="modal-content">
    <div class="modal-header" style="border-bottom: 1px solid #8E8888">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> <span class="glyphicon glyphicon-remove"></span></button>
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> Products</span>
        </h3>
    </div>
    <div>
        @using (Html.BeginForm("_CreatePost", "ReportLine", FormMethod.Post, new { enctype = "multipart/form-data", id = "modform" }))
        {
            <div class="form-horizontal modal-body">

                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ReportHeaderId)
                @Html.HiddenFor(m => m.ReportLineId)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FieldName, "Field Name", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.FieldName, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.FieldName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DataType, "Data Type", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.DataType, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, "Type", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.Type, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ServiceFuncGet, "Service Function Get", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.ServiceFuncGet, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.ServiceFuncGet, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ServiceFuncSet, "Service Function Set", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.ServiceFuncSet, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.ServiceFuncSet, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CacheKey, "Cache Key", new { @class = "control-label col-xs-4" })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.CacheKey, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.CacheKey, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DisplayName, "Display Name", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.DisplayName, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Serial, "Serial", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.TextBoxFor(model => model.Serial, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsVisible, "IsVisible", new { @class = "control-label col-xs-4 " })
                            <div class="col-xs-7">
                                @Html.CheckBoxFor(model => model.IsVisible, new { @class = "form-control col-xs-7 required" })
                                @Html.ValidationMessageFor(model => model.IsVisible, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>



                <div class="modal-footer " style="padding: 19px 20px 0 20px; border-top:1px solid #8E8888">
                    <button class="btn custom left" name="Command:Edit" type="submit" id="submit"><h2 style="margin:0px"><span class="glyphicon glyphicon-floppy-disk black"></span> </h2></button>

                    <button class="btn custom" name="Command:Delete" id="delete" type="submit"><h2 style="margin:0px"><span class="glyphicon glyphicon-trash black"></span> </h2></button>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        var id=@Model.ReportLineId;

        $('#delete','.modal-content').click(function (e) {
            if(id>0)
            {
                var url = '/ReportLine/DeletePost';
                $('form#modform').attr('action',url);
                return;
            }
            else
            {
                return false;
            }
        });

        $('#FieldName').focus();

    });
</script>