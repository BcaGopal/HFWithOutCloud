@model Models.Reports.ViewModels.ReportMasterViewModel
@using System.Text.RegularExpressions

@{
    ViewBag.Title = Model.ReportHeader.ReportName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

</style>
@using (Html.BeginForm(Model.ReportHeader.Action, Model.ReportHeader.Controller, FormMethod.Post, new { enctype = "multipart/form-data", target = "_blank" }))
{
    <div class="panel panel-default">

        <div class="panel-heading">
            <h4>
                <span> @Model.ReportHeader.ReportName </span>
                <input type="submit" name="Print:Excel" value="Excel" id="PrintExcel" class="btn btn-primary btn-sm CurveBorder height" style="float: right; margin-left: 2px; " />
                <input type="submit" name="Print:PDF" value="PDF" id="PrintPDF" class="btn btn-primary btn-sm CurveBorder height" style="float : right ; " />
                @Html.CheckBoxFor(m => m.closeOnSelect, new { @style = "float:right;margin-top:10px;margin-right:10px" })
            </h4>
        </div>

        <div class="panel-info" style="padding-left:15px">

            @if (!string.IsNullOrEmpty(Model.ReportHeader.Notes))
            {
                <div class="alert alert-info alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <strong>Notes: </strong> @Model.ReportHeader.Notes
                </div>
            }

            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.ReportHeaderId)
            @Html.HiddenFor(m => m.ReportHeader.Controller)
            @Html.HiddenFor(m => m.ReportHeader.Action)
            <div class="form-horizontal" role="form">
                @Html.ValidationSummary(true)

                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                    @foreach (var item in Model.ReportLine.GroupBy(m => new { m.Type, m.IsCollapse }).OrderBy(m => m.Key.Type))
                    {
                        Regex rexp = new Regex(@"[\d\W]");
                        string key = rexp.Replace(item.Key.Type, "");
                        <div class="panel-heading" role="tab" id="@( key + item.Key.IsCollapse)h">
                            <h4 class="panel-title">
                                <span role="button" data-toggle="collapse" data-parent="#accordion" href="#@(key + item.Key.IsCollapse)d" aria-expanded="@(item.Key.IsCollapse?"false":"true")" aria-controls="@(key + item.Key.IsCollapse)d">
                                    <span style="color:black" class="glyphicon glyphicon-@(item.Key.IsCollapse?"plus-sign":"minus-sign") collapse_Ico"></span>
                                    @(item.Key.Type)
                                </span>
                            </h4>
                        </div>
                        <div id="@(key + item.Key.IsCollapse)d" class="panel-collapse collapse @(item.Key.IsCollapse?"":"in")" role="tabpanel" aria-labelledby="@( key + item.Key.IsCollapse)h">
                            <div class="panel-body">
                                <div class="row">


                                    @foreach (var temp in item)
                                    {
                                        <div class="col-md-6" style="display:@(temp.IsVisible ? "" : "none")">
                                            <div class="form-group">
                                                @if (temp.DataType != "Constant Value")
                                                {
                                                    @Html.Label(temp.DisplayName, new { @class = "control-label col-xs-4" })
                                                }

                                                <div class="col-xs-6">
                                                    @switch (temp.DataType)
                                                    {
                                                        case "Text":
                                                            {

                                                                @Html.TextBox(temp.FieldName, temp.DefaultValue, new { @class = "form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })


                                                                break;
                                                            }
                                                        case "Number":
                                                            {
                                                                @Html.TextBox(temp.FieldName, temp.DefaultValue, new { @class = "form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })

                                                                break;
                                                            }
                                                        case "Date":
                                                            {
                                                                if (!string.IsNullOrEmpty(temp.DefaultValue) && temp.DefaultValue == "Today")
                                                                {
                                                                    @Html.TextBox(temp.FieldName, DateTime.Now, "{0:dd/MMM/yyyy}", new { @class = "datepicker form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBox(temp.FieldName, null, new { @class = "datepicker form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })
                                                                }
                                                                break;
                                                            }
                                                        case "Single Select":
                                                            {

                                                                if (!string.IsNullOrEmpty(temp.ListItem))
                                                                {
                                                                    List<SelectListItem> tem = new List<SelectListItem>();
                                                                    foreach (string Litem in (temp.ListItem).Split(',').ToList())
                                                                    {
                                                                        if (Litem == temp.DefaultValue)
                                                                        {
                                                                            tem.Add(new SelectListItem { Text = Litem, Value = Litem, Selected = true });
                                                                        }
                                                                        else
                                                                        {
                                                                            tem.Add(new SelectListItem { Text = Litem, Value = Litem });
                                                                        }
                                                                    }
                                                                    @Html.DropDownList(temp.FieldName, new SelectList(tem as System.Collections.IEnumerable, "Value", "Text", temp.DefaultValue), string.Empty, new { @class = "form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })
                                                                    break;
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBox(temp.FieldName, temp.DefaultValue, new { @class = "form-control col-xs-6 height" + (temp.IsMandatory && temp.IsVisible ? " required" : ""), @placeholder = temp.PlaceHolder, @title = temp.ToolTip, @data_toggle = "tooltip" })
                                                                    <input type="hidden" id="@(temp.FieldName)s" name="@(temp.FieldName)names" value="@temp.DefaultValue" />
                                                                    break;
                                                                }
                                                            }
                                                        case "Multi Select":
                                                            {
                                                                <input type='hidden' name='@temp.FieldName' id='@temp.FieldName' value="@temp.DefaultValue" class="form-control col-xs-6 @(temp.IsMandatory && temp.IsVisible ? "required" : "")" placeholder="@temp.PlaceHolder" title="@temp.ToolTip" />
                                                                <input type="hidden" id="@(temp.FieldName)s" name="@(temp.FieldName)names" />
                                                                break;
                                                            }
                                                        default:
                                                            {
                                                                break;
                                                            }
                                                    }

                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>

                            </div>
                        </div>

                    }
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                        <span style="font-family: Calibri,sans-serif,Verdana;font-size:large">
                            @*@Html.ActionLink("Back to List", "Index", "ReportHeader")*@
                        </span>
                    </div>
                </div>
            </div>



        </div>
    </div>

}
<script type="text/javascript">

    $(function () {

        $('[data-toggle="tooltip"]').tooltip({
        });


        var tdate = $("#DocDate").val();
        $("#DocDate").change(function () {

            tdate = $("#DocDate").val();
        });

        var students =@Html.Raw(Json.Encode(Model.ReportLine));
        var closeOnSelect='@Model.closeOnSelect';

        $.each(students, function () {

            if (this.DataType == "Multi Select"||this.DataType=="Single Select" && !(this.ListItem))
            {

                var getFunction= '/ComboHelpList/' + this.ServiceFuncGet;
                var setFunction= '/ComboHelpList/' + this.ServiceFuncSet;
                var NoofChar=this.NoOfCharToEnter;
                var elementId= '#' + this.FieldName;
                var bool=this.DataType=="Single Select"?false:true
                if(!this.SqlProcGetSet)
                    CustomSelectFunction($(elementId), getFunction, setFunction, ' ', bool, NoofChar);
                else
                    CustomSelectFunction2($(elementId), getFunction, setFunction, ' ', bool, NoofChar,this.SqlProcGetSet,(closeOnSelect=='True' ? false:true ));

                //alert(elementId+" "+getFunction+" "+setFunction)
            }
            else if(this.DataType=="Date" )
            {
                var getFunction='/ComboHelpList/SetDate' +"?Proc="+this.SqlProcGetSet;
                if(this.SqlProcGetSet)
                    SetDate(getFunction,'#'+this.FieldName);
            }

        });

        function SetDate(url,elem)
        {
            $.get(url,function(data){
                $(elem).datepicker('update',data);
            })

        }


        $(':submit').click(function(){


            if($('input.has-error').length)
            {
                alertify.error(message = "Please select all the mandatory fields", wait = '0')
                return false;
            }
            $.each(students, function () {

                if (this.DataType == "Multi Select")
                {
                    var poarr=[];
                    var elementId='#'+this.FieldName;
                    var hiddenId= '#' + this.FieldName+'s';
                    var products = (JSON.stringify($(elementId).select2('data')));
                    var obj = jQuery.parseJSON(products);
                    $.each(obj, function (key, value) {
                        poarr.push(value.text);
                    });
                    $(hiddenId).val(poarr);
                }
                if (this.DataType=="Single Select")
                {
                    var poarr=[];
                    var elementId='#'+this.FieldName;
                    var hiddenId= '#' + this.FieldName+'s';
                    $(hiddenId).val($(elementId).select2('data').text);
                }

            });

        })

    });


    $('.collapse').on('hidden.bs.collapse', toggleSign);
    $('.collapse').on('shown.bs.collapse', toggleSign);

    function toggleSign(e)
    {
        $(e.target).prev('.panel-heading').find('span.collapse_Ico').toggleClass("glyphicon-plus-sign glyphicon-minus-sign")
    }

    $(document).on("mouseover",".select2-container",function(){
        $(".select2-container").tooltip({
            title: function(){
                return $(this).next('input').attr("title");
            },
        });
    })

    $('input:checkbox').click(function(e){

        if($(e.target).is(":checked"))
        {
            $.ajax({
                async:true,
                type:"POST",
                url:"/ReportLayout/SetSelectOption",
                data:{Checked:$('#closeOnSelect').is(":checked")},
                success:function(data)
                {
                    if(data.success)
                        window.location.reload();
                }
            })
        }
        else
        {
            $('select2-input').select2({
                "closeOnSelect": true,
            });
        }

    })


</script>
